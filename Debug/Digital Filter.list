
Digital Filter.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006554  08000110  08000110  00001110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000044c  08006668  08006668  00007668  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006ab4  08006ab4  000081d4  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08006ab4  08006ab4  00007ab4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08006abc  08006abc  000081d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006abc  08006abc  00007abc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08006ac0  08006ac0  00007ac0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001d4  20000000  08006ac4  00008000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000184  200001d4  08006c98  000081d4  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000358  08006c98  00008358  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000081d4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002cb5  00000000  00000000  000081fd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000fd4  00000000  00000000  0000aeb2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000468  00000000  00000000  0000be88  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000031f  00000000  00000000  0000c2f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00017b42  00000000  00000000  0000c60f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000050e5  00000000  00000000  00024151  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00082dc0  00000000  00000000  00029236  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000abff6  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000024d0  00000000  00000000  000ac03c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005a  00000000  00000000  000ae50c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	@ (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	@ (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001d4 	.word	0x200001d4
 800012c:	00000000 	.word	0x00000000
 8000130:	0800664c 	.word	0x0800664c

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	@ (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	@ (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	@ (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001d8 	.word	0x200001d8
 800014c:	0800664c 	.word	0x0800664c

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	@ 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	3c01      	subs	r4, #1
 800029c:	bf28      	it	cs
 800029e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80002a2:	d2e9      	bcs.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800044a:	bf08      	it	eq
 800044c:	4770      	bxeq	lr
 800044e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000452:	bf04      	itt	eq
 8000454:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000458:	4770      	bxeq	lr
 800045a:	b530      	push	{r4, r5, lr}
 800045c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000464:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000468:	e71c      	b.n	80002a4 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_ul2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f04f 0500 	mov.w	r5, #0
 800047a:	e00a      	b.n	8000492 <__aeabi_l2d+0x16>

0800047c <__aeabi_l2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800048a:	d502      	bpl.n	8000492 <__aeabi_l2d+0x16>
 800048c:	4240      	negs	r0, r0
 800048e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000492:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000496:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800049a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800049e:	f43f aed8 	beq.w	8000252 <__adddf3+0xe6>
 80004a2:	f04f 0203 	mov.w	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004b2:	bf18      	it	ne
 80004b4:	3203      	addne	r2, #3
 80004b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ba:	f1c2 0320 	rsb	r3, r2, #32
 80004be:	fa00 fc03 	lsl.w	ip, r0, r3
 80004c2:	fa20 f002 	lsr.w	r0, r0, r2
 80004c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ca:	ea40 000e 	orr.w	r0, r0, lr
 80004ce:	fa21 f102 	lsr.w	r1, r1, r2
 80004d2:	4414      	add	r4, r2
 80004d4:	e6bd      	b.n	8000252 <__adddf3+0xe6>
 80004d6:	bf00      	nop

080004d8 <__aeabi_dmul>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80004de:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80004e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004e6:	bf1d      	ittte	ne
 80004e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004ec:	ea94 0f0c 	teqne	r4, ip
 80004f0:	ea95 0f0c 	teqne	r5, ip
 80004f4:	f000 f8de 	bleq	80006b4 <__aeabi_dmul+0x1dc>
 80004f8:	442c      	add	r4, r5
 80004fa:	ea81 0603 	eor.w	r6, r1, r3
 80004fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000502:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000506:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800050a:	bf18      	it	ne
 800050c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000510:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000514:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000518:	d038      	beq.n	800058c <__aeabi_dmul+0xb4>
 800051a:	fba0 ce02 	umull	ip, lr, r0, r2
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000526:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800052a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800052e:	f04f 0600 	mov.w	r6, #0
 8000532:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000536:	f09c 0f00 	teq	ip, #0
 800053a:	bf18      	it	ne
 800053c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000540:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000544:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000548:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800054c:	d204      	bcs.n	8000558 <__aeabi_dmul+0x80>
 800054e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000552:	416d      	adcs	r5, r5
 8000554:	eb46 0606 	adc.w	r6, r6, r6
 8000558:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800055c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000560:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000564:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000568:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800056c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000570:	bf88      	it	hi
 8000572:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000576:	d81e      	bhi.n	80005b6 <__aeabi_dmul+0xde>
 8000578:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800057c:	bf08      	it	eq
 800057e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000582:	f150 0000 	adcs.w	r0, r0, #0
 8000586:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000590:	ea46 0101 	orr.w	r1, r6, r1
 8000594:	ea40 0002 	orr.w	r0, r0, r2
 8000598:	ea81 0103 	eor.w	r1, r1, r3
 800059c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005a0:	bfc2      	ittt	gt
 80005a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	popgt	{r4, r5, r6, pc}
 80005ac:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005b0:	f04f 0e00 	mov.w	lr, #0
 80005b4:	3c01      	subs	r4, #1
 80005b6:	f300 80ab 	bgt.w	8000710 <__aeabi_dmul+0x238>
 80005ba:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80005be:	bfde      	ittt	le
 80005c0:	2000      	movle	r0, #0
 80005c2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80005c6:	bd70      	pople	{r4, r5, r6, pc}
 80005c8:	f1c4 0400 	rsb	r4, r4, #0
 80005cc:	3c20      	subs	r4, #32
 80005ce:	da35      	bge.n	800063c <__aeabi_dmul+0x164>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc1b      	bgt.n	800060c <__aeabi_dmul+0x134>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0520 	rsb	r5, r4, #32
 80005dc:	fa00 f305 	lsl.w	r3, r0, r5
 80005e0:	fa20 f004 	lsr.w	r0, r0, r4
 80005e4:	fa01 f205 	lsl.w	r2, r1, r5
 80005e8:	ea40 0002 	orr.w	r0, r0, r2
 80005ec:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f8:	fa21 f604 	lsr.w	r6, r1, r4
 80005fc:	eb42 0106 	adc.w	r1, r2, r6
 8000600:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000604:	bf08      	it	eq
 8000606:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f1c4 040c 	rsb	r4, r4, #12
 8000610:	f1c4 0520 	rsb	r5, r4, #32
 8000614:	fa00 f304 	lsl.w	r3, r0, r4
 8000618:	fa20 f005 	lsr.w	r0, r0, r5
 800061c:	fa01 f204 	lsl.w	r2, r1, r4
 8000620:	ea40 0002 	orr.w	r0, r0, r2
 8000624:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000628:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800062c:	f141 0100 	adc.w	r1, r1, #0
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 0520 	rsb	r5, r4, #32
 8000640:	fa00 f205 	lsl.w	r2, r0, r5
 8000644:	ea4e 0e02 	orr.w	lr, lr, r2
 8000648:	fa20 f304 	lsr.w	r3, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea43 0302 	orr.w	r3, r3, r2
 8000654:	fa21 f004 	lsr.w	r0, r1, r4
 8000658:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800065c:	fa21 f204 	lsr.w	r2, r1, r4
 8000660:	ea20 0002 	bic.w	r0, r0, r2
 8000664:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f094 0f00 	teq	r4, #0
 8000678:	d10f      	bne.n	800069a <__aeabi_dmul+0x1c2>
 800067a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800067e:	0040      	lsls	r0, r0, #1
 8000680:	eb41 0101 	adc.w	r1, r1, r1
 8000684:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000688:	bf08      	it	eq
 800068a:	3c01      	subeq	r4, #1
 800068c:	d0f7      	beq.n	800067e <__aeabi_dmul+0x1a6>
 800068e:	ea41 0106 	orr.w	r1, r1, r6
 8000692:	f095 0f00 	teq	r5, #0
 8000696:	bf18      	it	ne
 8000698:	4770      	bxne	lr
 800069a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	eb43 0303 	adc.w	r3, r3, r3
 80006a4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3d01      	subeq	r5, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1c6>
 80006ae:	ea43 0306 	orr.w	r3, r3, r6
 80006b2:	4770      	bx	lr
 80006b4:	ea94 0f0c 	teq	r4, ip
 80006b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006bc:	bf18      	it	ne
 80006be:	ea95 0f0c 	teqne	r5, ip
 80006c2:	d00c      	beq.n	80006de <__aeabi_dmul+0x206>
 80006c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c8:	bf18      	it	ne
 80006ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ce:	d1d1      	bne.n	8000674 <__aeabi_dmul+0x19c>
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd70      	pop	{r4, r5, r6, pc}
 80006de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e2:	bf06      	itte	eq
 80006e4:	4610      	moveq	r0, r2
 80006e6:	4619      	moveq	r1, r3
 80006e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ec:	d019      	beq.n	8000722 <__aeabi_dmul+0x24a>
 80006ee:	ea94 0f0c 	teq	r4, ip
 80006f2:	d102      	bne.n	80006fa <__aeabi_dmul+0x222>
 80006f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f8:	d113      	bne.n	8000722 <__aeabi_dmul+0x24a>
 80006fa:	ea95 0f0c 	teq	r5, ip
 80006fe:	d105      	bne.n	800070c <__aeabi_dmul+0x234>
 8000700:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000704:	bf1c      	itt	ne
 8000706:	4610      	movne	r0, r2
 8000708:	4619      	movne	r1, r3
 800070a:	d10a      	bne.n	8000722 <__aeabi_dmul+0x24a>
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000718:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000726:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800072a:	bd70      	pop	{r4, r5, r6, pc}

0800072c <__aeabi_ddiv>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000732:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800073a:	bf1d      	ittte	ne
 800073c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000740:	ea94 0f0c 	teqne	r4, ip
 8000744:	ea95 0f0c 	teqne	r5, ip
 8000748:	f000 f8a7 	bleq	800089a <__aeabi_ddiv+0x16e>
 800074c:	eba4 0405 	sub.w	r4, r4, r5
 8000750:	ea81 0e03 	eor.w	lr, r1, r3
 8000754:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000758:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800075c:	f000 8088 	beq.w	8000870 <__aeabi_ddiv+0x144>
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000768:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800076c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000770:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000774:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000778:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800077c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000780:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000784:	429d      	cmp	r5, r3
 8000786:	bf08      	it	eq
 8000788:	4296      	cmpeq	r6, r2
 800078a:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 800078e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000792:	d202      	bcs.n	800079a <__aeabi_ddiv+0x6e>
 8000794:	085b      	lsrs	r3, r3, #1
 8000796:	ea4f 0232 	mov.w	r2, r2, rrx
 800079a:	1ab6      	subs	r6, r6, r2
 800079c:	eb65 0503 	sbc.w	r5, r5, r3
 80007a0:	085b      	lsrs	r3, r3, #1
 80007a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007a6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80007aa:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80007ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80007b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007b6:	bf22      	ittt	cs
 80007b8:	1ab6      	subcs	r6, r6, r2
 80007ba:	4675      	movcs	r5, lr
 80007bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ce:	bf22      	ittt	cs
 80007d0:	1ab6      	subcs	r6, r6, r2
 80007d2:	4675      	movcs	r5, lr
 80007d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000808:	ea55 0e06 	orrs.w	lr, r5, r6
 800080c:	d018      	beq.n	8000840 <__aeabi_ddiv+0x114>
 800080e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000812:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000816:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800081a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800081e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000822:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000826:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800082a:	d1c0      	bne.n	80007ae <__aeabi_ddiv+0x82>
 800082c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000830:	d10b      	bne.n	800084a <__aeabi_ddiv+0x11e>
 8000832:	ea41 0100 	orr.w	r1, r1, r0
 8000836:	f04f 0000 	mov.w	r0, #0
 800083a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800083e:	e7b6      	b.n	80007ae <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000844:	bf04      	itt	eq
 8000846:	4301      	orreq	r1, r0
 8000848:	2000      	moveq	r0, #0
 800084a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800084e:	bf88      	it	hi
 8000850:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000854:	f63f aeaf 	bhi.w	80005b6 <__aeabi_dmul+0xde>
 8000858:	ebb5 0c03 	subs.w	ip, r5, r3
 800085c:	bf04      	itt	eq
 800085e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000866:	f150 0000 	adcs.w	r0, r0, #0
 800086a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000874:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000878:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800087c:	bfc2      	ittt	gt
 800087e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000882:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000886:	bd70      	popgt	{r4, r5, r6, pc}
 8000888:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800088c:	f04f 0e00 	mov.w	lr, #0
 8000890:	3c01      	subs	r4, #1
 8000892:	e690      	b.n	80005b6 <__aeabi_dmul+0xde>
 8000894:	ea45 0e06 	orr.w	lr, r5, r6
 8000898:	e68d      	b.n	80005b6 <__aeabi_dmul+0xde>
 800089a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800089e:	ea94 0f0c 	teq	r4, ip
 80008a2:	bf08      	it	eq
 80008a4:	ea95 0f0c 	teqeq	r5, ip
 80008a8:	f43f af3b 	beq.w	8000722 <__aeabi_dmul+0x24a>
 80008ac:	ea94 0f0c 	teq	r4, ip
 80008b0:	d10a      	bne.n	80008c8 <__aeabi_ddiv+0x19c>
 80008b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008b6:	f47f af34 	bne.w	8000722 <__aeabi_dmul+0x24a>
 80008ba:	ea95 0f0c 	teq	r5, ip
 80008be:	f47f af25 	bne.w	800070c <__aeabi_dmul+0x234>
 80008c2:	4610      	mov	r0, r2
 80008c4:	4619      	mov	r1, r3
 80008c6:	e72c      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008c8:	ea95 0f0c 	teq	r5, ip
 80008cc:	d106      	bne.n	80008dc <__aeabi_ddiv+0x1b0>
 80008ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d2:	f43f aefd 	beq.w	80006d0 <__aeabi_dmul+0x1f8>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e722      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e0:	bf18      	it	ne
 80008e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008e6:	f47f aec5 	bne.w	8000674 <__aeabi_dmul+0x19c>
 80008ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008ee:	f47f af0d 	bne.w	800070c <__aeabi_dmul+0x234>
 80008f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008f6:	f47f aeeb 	bne.w	80006d0 <__aeabi_dmul+0x1f8>
 80008fa:	e712      	b.n	8000722 <__aeabi_dmul+0x24a>

080008fc <__gedf2>:
 80008fc:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8000900:	e006      	b.n	8000910 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__ledf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	e002      	b.n	8000910 <__cmpdf2+0x4>
 800090a:	bf00      	nop

0800090c <__cmpdf2>:
 800090c:	f04f 0c01 	mov.w	ip, #1
 8000910:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000914:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000918:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800091c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000920:	bf18      	it	ne
 8000922:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000926:	d01b      	beq.n	8000960 <__cmpdf2+0x54>
 8000928:	b001      	add	sp, #4
 800092a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800092e:	bf0c      	ite	eq
 8000930:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000934:	ea91 0f03 	teqne	r1, r3
 8000938:	bf02      	ittt	eq
 800093a:	ea90 0f02 	teqeq	r0, r2
 800093e:	2000      	moveq	r0, #0
 8000940:	4770      	bxeq	lr
 8000942:	f110 0f00 	cmn.w	r0, #0
 8000946:	ea91 0f03 	teq	r1, r3
 800094a:	bf58      	it	pl
 800094c:	4299      	cmppl	r1, r3
 800094e:	bf08      	it	eq
 8000950:	4290      	cmpeq	r0, r2
 8000952:	bf2c      	ite	cs
 8000954:	17d8      	asrcs	r0, r3, #31
 8000956:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800095a:	f040 0001 	orr.w	r0, r0, #1
 800095e:	4770      	bx	lr
 8000960:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d102      	bne.n	8000970 <__cmpdf2+0x64>
 800096a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800096e:	d107      	bne.n	8000980 <__cmpdf2+0x74>
 8000970:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d1d6      	bne.n	8000928 <__cmpdf2+0x1c>
 800097a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800097e:	d0d3      	beq.n	8000928 <__cmpdf2+0x1c>
 8000980:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000984:	4770      	bx	lr
 8000986:	bf00      	nop

08000988 <__aeabi_cdrcmple>:
 8000988:	4684      	mov	ip, r0
 800098a:	4610      	mov	r0, r2
 800098c:	4662      	mov	r2, ip
 800098e:	468c      	mov	ip, r1
 8000990:	4619      	mov	r1, r3
 8000992:	4663      	mov	r3, ip
 8000994:	e000      	b.n	8000998 <__aeabi_cdcmpeq>
 8000996:	bf00      	nop

08000998 <__aeabi_cdcmpeq>:
 8000998:	b501      	push	{r0, lr}
 800099a:	f7ff ffb7 	bl	800090c <__cmpdf2>
 800099e:	2800      	cmp	r0, #0
 80009a0:	bf48      	it	mi
 80009a2:	f110 0f00 	cmnmi.w	r0, #0
 80009a6:	bd01      	pop	{r0, pc}

080009a8 <__aeabi_dcmpeq>:
 80009a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ac:	f7ff fff4 	bl	8000998 <__aeabi_cdcmpeq>
 80009b0:	bf0c      	ite	eq
 80009b2:	2001      	moveq	r0, #1
 80009b4:	2000      	movne	r0, #0
 80009b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ba:	bf00      	nop

080009bc <__aeabi_dcmplt>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff ffea 	bl	8000998 <__aeabi_cdcmpeq>
 80009c4:	bf34      	ite	cc
 80009c6:	2001      	movcc	r0, #1
 80009c8:	2000      	movcs	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmple>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffe0 	bl	8000998 <__aeabi_cdcmpeq>
 80009d8:	bf94      	ite	ls
 80009da:	2001      	movls	r0, #1
 80009dc:	2000      	movhi	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmpge>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffce 	bl	8000988 <__aeabi_cdrcmple>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpgt>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffc4 	bl	8000988 <__aeabi_cdrcmple>
 8000a00:	bf34      	ite	cc
 8000a02:	2001      	movcc	r0, #1
 8000a04:	2000      	movcs	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpun>:
 8000a0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x10>
 8000a16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1a:	d10a      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x20>
 8000a26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2a:	d102      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a2c:	f04f 0000 	mov.w	r0, #0
 8000a30:	4770      	bx	lr
 8000a32:	f04f 0001 	mov.w	r0, #1
 8000a36:	4770      	bx	lr

08000a38 <__aeabi_d2iz>:
 8000a38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a3c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a40:	d215      	bcs.n	8000a6e <__aeabi_d2iz+0x36>
 8000a42:	d511      	bpl.n	8000a68 <__aeabi_d2iz+0x30>
 8000a44:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a4c:	d912      	bls.n	8000a74 <__aeabi_d2iz+0x3c>
 8000a4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a52:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000a56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a5a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000a5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a62:	bf18      	it	ne
 8000a64:	4240      	negne	r0, r0
 8000a66:	4770      	bx	lr
 8000a68:	f04f 0000 	mov.w	r0, #0
 8000a6c:	4770      	bx	lr
 8000a6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a72:	d105      	bne.n	8000a80 <__aeabi_d2iz+0x48>
 8000a74:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000a78:	bf08      	it	eq
 8000a7a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000a7e:	4770      	bx	lr
 8000a80:	f04f 0000 	mov.w	r0, #0
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <__aeabi_d2uiz>:
 8000a88:	004a      	lsls	r2, r1, #1
 8000a8a:	d211      	bcs.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a8c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a90:	d211      	bcs.n	8000ab6 <__aeabi_d2uiz+0x2e>
 8000a92:	d50d      	bpl.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a94:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a98:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a9c:	d40e      	bmi.n	8000abc <__aeabi_d2uiz+0x34>
 8000a9e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aa2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000aa6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aaa:	fa23 f002 	lsr.w	r0, r3, r2
 8000aae:	4770      	bx	lr
 8000ab0:	f04f 0000 	mov.w	r0, #0
 8000ab4:	4770      	bx	lr
 8000ab6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000aba:	d102      	bne.n	8000ac2 <__aeabi_d2uiz+0x3a>
 8000abc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000ac0:	4770      	bx	lr
 8000ac2:	f04f 0000 	mov.w	r0, #0
 8000ac6:	4770      	bx	lr

08000ac8 <__aeabi_d2f>:
 8000ac8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000acc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000ad0:	bf24      	itt	cs
 8000ad2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000ad6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000ada:	d90d      	bls.n	8000af8 <__aeabi_d2f+0x30>
 8000adc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000ae0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000ae4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000ae8:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000aec:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000af0:	bf08      	it	eq
 8000af2:	f020 0001 	biceq.w	r0, r0, #1
 8000af6:	4770      	bx	lr
 8000af8:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000afc:	d121      	bne.n	8000b42 <__aeabi_d2f+0x7a>
 8000afe:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000b02:	bfbc      	itt	lt
 8000b04:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000b08:	4770      	bxlt	lr
 8000b0a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000b0e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b12:	f1c2 0218 	rsb	r2, r2, #24
 8000b16:	f1c2 0c20 	rsb	ip, r2, #32
 8000b1a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b1e:	fa20 f002 	lsr.w	r0, r0, r2
 8000b22:	bf18      	it	ne
 8000b24:	f040 0001 	orrne.w	r0, r0, #1
 8000b28:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b2c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b30:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b34:	ea40 000c 	orr.w	r0, r0, ip
 8000b38:	fa23 f302 	lsr.w	r3, r3, r2
 8000b3c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b40:	e7cc      	b.n	8000adc <__aeabi_d2f+0x14>
 8000b42:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b46:	d107      	bne.n	8000b58 <__aeabi_d2f+0x90>
 8000b48:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b4c:	bf1e      	ittt	ne
 8000b4e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000b52:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000b56:	4770      	bxne	lr
 8000b58:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000b5c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000b60:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000b64:	4770      	bx	lr
 8000b66:	bf00      	nop

08000b68 <__aeabi_frsub>:
 8000b68:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000b6c:	e002      	b.n	8000b74 <__addsf3>
 8000b6e:	bf00      	nop

08000b70 <__aeabi_fsub>:
 8000b70:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000b74 <__addsf3>:
 8000b74:	0042      	lsls	r2, r0, #1
 8000b76:	bf1f      	itttt	ne
 8000b78:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000b7c:	ea92 0f03 	teqne	r2, r3
 8000b80:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000b84:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000b88:	d06a      	beq.n	8000c60 <__addsf3+0xec>
 8000b8a:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000b8e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000b92:	bfc1      	itttt	gt
 8000b94:	18d2      	addgt	r2, r2, r3
 8000b96:	4041      	eorgt	r1, r0
 8000b98:	4048      	eorgt	r0, r1
 8000b9a:	4041      	eorgt	r1, r0
 8000b9c:	bfb8      	it	lt
 8000b9e:	425b      	neglt	r3, r3
 8000ba0:	2b19      	cmp	r3, #25
 8000ba2:	bf88      	it	hi
 8000ba4:	4770      	bxhi	lr
 8000ba6:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000baa:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000bae:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000bb2:	bf18      	it	ne
 8000bb4:	4240      	negne	r0, r0
 8000bb6:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bba:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000bbe:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000bc2:	bf18      	it	ne
 8000bc4:	4249      	negne	r1, r1
 8000bc6:	ea92 0f03 	teq	r2, r3
 8000bca:	d03f      	beq.n	8000c4c <__addsf3+0xd8>
 8000bcc:	f1a2 0201 	sub.w	r2, r2, #1
 8000bd0:	fa41 fc03 	asr.w	ip, r1, r3
 8000bd4:	eb10 000c 	adds.w	r0, r0, ip
 8000bd8:	f1c3 0320 	rsb	r3, r3, #32
 8000bdc:	fa01 f103 	lsl.w	r1, r1, r3
 8000be0:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000be4:	d502      	bpl.n	8000bec <__addsf3+0x78>
 8000be6:	4249      	negs	r1, r1
 8000be8:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000bec:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000bf0:	d313      	bcc.n	8000c1a <__addsf3+0xa6>
 8000bf2:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000bf6:	d306      	bcc.n	8000c06 <__addsf3+0x92>
 8000bf8:	0840      	lsrs	r0, r0, #1
 8000bfa:	ea4f 0131 	mov.w	r1, r1, rrx
 8000bfe:	f102 0201 	add.w	r2, r2, #1
 8000c02:	2afe      	cmp	r2, #254	@ 0xfe
 8000c04:	d251      	bcs.n	8000caa <__addsf3+0x136>
 8000c06:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000c0a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c0e:	bf08      	it	eq
 8000c10:	f020 0001 	biceq.w	r0, r0, #1
 8000c14:	ea40 0003 	orr.w	r0, r0, r3
 8000c18:	4770      	bx	lr
 8000c1a:	0049      	lsls	r1, r1, #1
 8000c1c:	eb40 0000 	adc.w	r0, r0, r0
 8000c20:	3a01      	subs	r2, #1
 8000c22:	bf28      	it	cs
 8000c24:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000c28:	d2ed      	bcs.n	8000c06 <__addsf3+0x92>
 8000c2a:	fab0 fc80 	clz	ip, r0
 8000c2e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000c32:	ebb2 020c 	subs.w	r2, r2, ip
 8000c36:	fa00 f00c 	lsl.w	r0, r0, ip
 8000c3a:	bfaa      	itet	ge
 8000c3c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c40:	4252      	neglt	r2, r2
 8000c42:	4318      	orrge	r0, r3
 8000c44:	bfbc      	itt	lt
 8000c46:	40d0      	lsrlt	r0, r2
 8000c48:	4318      	orrlt	r0, r3
 8000c4a:	4770      	bx	lr
 8000c4c:	f092 0f00 	teq	r2, #0
 8000c50:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000c54:	bf06      	itte	eq
 8000c56:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000c5a:	3201      	addeq	r2, #1
 8000c5c:	3b01      	subne	r3, #1
 8000c5e:	e7b5      	b.n	8000bcc <__addsf3+0x58>
 8000c60:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000c64:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000c68:	bf18      	it	ne
 8000c6a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c6e:	d021      	beq.n	8000cb4 <__addsf3+0x140>
 8000c70:	ea92 0f03 	teq	r2, r3
 8000c74:	d004      	beq.n	8000c80 <__addsf3+0x10c>
 8000c76:	f092 0f00 	teq	r2, #0
 8000c7a:	bf08      	it	eq
 8000c7c:	4608      	moveq	r0, r1
 8000c7e:	4770      	bx	lr
 8000c80:	ea90 0f01 	teq	r0, r1
 8000c84:	bf1c      	itt	ne
 8000c86:	2000      	movne	r0, #0
 8000c88:	4770      	bxne	lr
 8000c8a:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000c8e:	d104      	bne.n	8000c9a <__addsf3+0x126>
 8000c90:	0040      	lsls	r0, r0, #1
 8000c92:	bf28      	it	cs
 8000c94:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000c98:	4770      	bx	lr
 8000c9a:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000c9e:	bf3c      	itt	cc
 8000ca0:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000ca4:	4770      	bxcc	lr
 8000ca6:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000caa:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000cae:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000cb2:	4770      	bx	lr
 8000cb4:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000cb8:	bf16      	itet	ne
 8000cba:	4608      	movne	r0, r1
 8000cbc:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000cc0:	4601      	movne	r1, r0
 8000cc2:	0242      	lsls	r2, r0, #9
 8000cc4:	bf06      	itte	eq
 8000cc6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000cca:	ea90 0f01 	teqeq	r0, r1
 8000cce:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000cd2:	4770      	bx	lr

08000cd4 <__aeabi_ui2f>:
 8000cd4:	f04f 0300 	mov.w	r3, #0
 8000cd8:	e004      	b.n	8000ce4 <__aeabi_i2f+0x8>
 8000cda:	bf00      	nop

08000cdc <__aeabi_i2f>:
 8000cdc:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000ce0:	bf48      	it	mi
 8000ce2:	4240      	negmi	r0, r0
 8000ce4:	ea5f 0c00 	movs.w	ip, r0
 8000ce8:	bf08      	it	eq
 8000cea:	4770      	bxeq	lr
 8000cec:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000cf0:	4601      	mov	r1, r0
 8000cf2:	f04f 0000 	mov.w	r0, #0
 8000cf6:	e01c      	b.n	8000d32 <__aeabi_l2f+0x2a>

08000cf8 <__aeabi_ul2f>:
 8000cf8:	ea50 0201 	orrs.w	r2, r0, r1
 8000cfc:	bf08      	it	eq
 8000cfe:	4770      	bxeq	lr
 8000d00:	f04f 0300 	mov.w	r3, #0
 8000d04:	e00a      	b.n	8000d1c <__aeabi_l2f+0x14>
 8000d06:	bf00      	nop

08000d08 <__aeabi_l2f>:
 8000d08:	ea50 0201 	orrs.w	r2, r0, r1
 8000d0c:	bf08      	it	eq
 8000d0e:	4770      	bxeq	lr
 8000d10:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000d14:	d502      	bpl.n	8000d1c <__aeabi_l2f+0x14>
 8000d16:	4240      	negs	r0, r0
 8000d18:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d1c:	ea5f 0c01 	movs.w	ip, r1
 8000d20:	bf02      	ittt	eq
 8000d22:	4684      	moveq	ip, r0
 8000d24:	4601      	moveq	r1, r0
 8000d26:	2000      	moveq	r0, #0
 8000d28:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000d2c:	bf08      	it	eq
 8000d2e:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000d32:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000d36:	fabc f28c 	clz	r2, ip
 8000d3a:	3a08      	subs	r2, #8
 8000d3c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d40:	db10      	blt.n	8000d64 <__aeabi_l2f+0x5c>
 8000d42:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d46:	4463      	add	r3, ip
 8000d48:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d4c:	f1c2 0220 	rsb	r2, r2, #32
 8000d50:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000d54:	fa20 f202 	lsr.w	r2, r0, r2
 8000d58:	eb43 0002 	adc.w	r0, r3, r2
 8000d5c:	bf08      	it	eq
 8000d5e:	f020 0001 	biceq.w	r0, r0, #1
 8000d62:	4770      	bx	lr
 8000d64:	f102 0220 	add.w	r2, r2, #32
 8000d68:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d6c:	f1c2 0220 	rsb	r2, r2, #32
 8000d70:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000d74:	fa21 f202 	lsr.w	r2, r1, r2
 8000d78:	eb43 0002 	adc.w	r0, r3, r2
 8000d7c:	bf08      	it	eq
 8000d7e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000d82:	4770      	bx	lr

08000d84 <__aeabi_fmul>:
 8000d84:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000d88:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000d8c:	bf1e      	ittt	ne
 8000d8e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000d92:	ea92 0f0c 	teqne	r2, ip
 8000d96:	ea93 0f0c 	teqne	r3, ip
 8000d9a:	d06f      	beq.n	8000e7c <__aeabi_fmul+0xf8>
 8000d9c:	441a      	add	r2, r3
 8000d9e:	ea80 0c01 	eor.w	ip, r0, r1
 8000da2:	0240      	lsls	r0, r0, #9
 8000da4:	bf18      	it	ne
 8000da6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000daa:	d01e      	beq.n	8000dea <__aeabi_fmul+0x66>
 8000dac:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8000db0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000db4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000db8:	fba0 3101 	umull	r3, r1, r0, r1
 8000dbc:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000dc0:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 8000dc4:	bf3e      	ittt	cc
 8000dc6:	0049      	lslcc	r1, r1, #1
 8000dc8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000dcc:	005b      	lslcc	r3, r3, #1
 8000dce:	ea40 0001 	orr.w	r0, r0, r1
 8000dd2:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 8000dd6:	2afd      	cmp	r2, #253	@ 0xfd
 8000dd8:	d81d      	bhi.n	8000e16 <__aeabi_fmul+0x92>
 8000dda:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8000dde:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000de2:	bf08      	it	eq
 8000de4:	f020 0001 	biceq.w	r0, r0, #1
 8000de8:	4770      	bx	lr
 8000dea:	f090 0f00 	teq	r0, #0
 8000dee:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000df2:	bf08      	it	eq
 8000df4:	0249      	lsleq	r1, r1, #9
 8000df6:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000dfa:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000dfe:	3a7f      	subs	r2, #127	@ 0x7f
 8000e00:	bfc2      	ittt	gt
 8000e02:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000e06:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e0a:	4770      	bxgt	lr
 8000e0c:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000e10:	f04f 0300 	mov.w	r3, #0
 8000e14:	3a01      	subs	r2, #1
 8000e16:	dc5d      	bgt.n	8000ed4 <__aeabi_fmul+0x150>
 8000e18:	f112 0f19 	cmn.w	r2, #25
 8000e1c:	bfdc      	itt	le
 8000e1e:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 8000e22:	4770      	bxle	lr
 8000e24:	f1c2 0200 	rsb	r2, r2, #0
 8000e28:	0041      	lsls	r1, r0, #1
 8000e2a:	fa21 f102 	lsr.w	r1, r1, r2
 8000e2e:	f1c2 0220 	rsb	r2, r2, #32
 8000e32:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e36:	ea5f 0031 	movs.w	r0, r1, rrx
 8000e3a:	f140 0000 	adc.w	r0, r0, #0
 8000e3e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e42:	bf08      	it	eq
 8000e44:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e48:	4770      	bx	lr
 8000e4a:	f092 0f00 	teq	r2, #0
 8000e4e:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000e52:	bf02      	ittt	eq
 8000e54:	0040      	lsleq	r0, r0, #1
 8000e56:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000e5a:	3a01      	subeq	r2, #1
 8000e5c:	d0f9      	beq.n	8000e52 <__aeabi_fmul+0xce>
 8000e5e:	ea40 000c 	orr.w	r0, r0, ip
 8000e62:	f093 0f00 	teq	r3, #0
 8000e66:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000e6a:	bf02      	ittt	eq
 8000e6c:	0049      	lsleq	r1, r1, #1
 8000e6e:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000e72:	3b01      	subeq	r3, #1
 8000e74:	d0f9      	beq.n	8000e6a <__aeabi_fmul+0xe6>
 8000e76:	ea41 010c 	orr.w	r1, r1, ip
 8000e7a:	e78f      	b.n	8000d9c <__aeabi_fmul+0x18>
 8000e7c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000e80:	ea92 0f0c 	teq	r2, ip
 8000e84:	bf18      	it	ne
 8000e86:	ea93 0f0c 	teqne	r3, ip
 8000e8a:	d00a      	beq.n	8000ea2 <__aeabi_fmul+0x11e>
 8000e8c:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000e90:	bf18      	it	ne
 8000e92:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000e96:	d1d8      	bne.n	8000e4a <__aeabi_fmul+0xc6>
 8000e98:	ea80 0001 	eor.w	r0, r0, r1
 8000e9c:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000ea0:	4770      	bx	lr
 8000ea2:	f090 0f00 	teq	r0, #0
 8000ea6:	bf17      	itett	ne
 8000ea8:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 8000eac:	4608      	moveq	r0, r1
 8000eae:	f091 0f00 	teqne	r1, #0
 8000eb2:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 8000eb6:	d014      	beq.n	8000ee2 <__aeabi_fmul+0x15e>
 8000eb8:	ea92 0f0c 	teq	r2, ip
 8000ebc:	d101      	bne.n	8000ec2 <__aeabi_fmul+0x13e>
 8000ebe:	0242      	lsls	r2, r0, #9
 8000ec0:	d10f      	bne.n	8000ee2 <__aeabi_fmul+0x15e>
 8000ec2:	ea93 0f0c 	teq	r3, ip
 8000ec6:	d103      	bne.n	8000ed0 <__aeabi_fmul+0x14c>
 8000ec8:	024b      	lsls	r3, r1, #9
 8000eca:	bf18      	it	ne
 8000ecc:	4608      	movne	r0, r1
 8000ece:	d108      	bne.n	8000ee2 <__aeabi_fmul+0x15e>
 8000ed0:	ea80 0001 	eor.w	r0, r0, r1
 8000ed4:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000ed8:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000edc:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000ee0:	4770      	bx	lr
 8000ee2:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000ee6:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 8000eea:	4770      	bx	lr

08000eec <__aeabi_fdiv>:
 8000eec:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000ef0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000ef4:	bf1e      	ittt	ne
 8000ef6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000efa:	ea92 0f0c 	teqne	r2, ip
 8000efe:	ea93 0f0c 	teqne	r3, ip
 8000f02:	d069      	beq.n	8000fd8 <__aeabi_fdiv+0xec>
 8000f04:	eba2 0203 	sub.w	r2, r2, r3
 8000f08:	ea80 0c01 	eor.w	ip, r0, r1
 8000f0c:	0249      	lsls	r1, r1, #9
 8000f0e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000f12:	d037      	beq.n	8000f84 <__aeabi_fdiv+0x98>
 8000f14:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 8000f18:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000f1c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000f20:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000f24:	428b      	cmp	r3, r1
 8000f26:	bf38      	it	cc
 8000f28:	005b      	lslcc	r3, r3, #1
 8000f2a:	f142 027d 	adc.w	r2, r2, #125	@ 0x7d
 8000f2e:	f44f 0c00 	mov.w	ip, #8388608	@ 0x800000
 8000f32:	428b      	cmp	r3, r1
 8000f34:	bf24      	itt	cs
 8000f36:	1a5b      	subcs	r3, r3, r1
 8000f38:	ea40 000c 	orrcs.w	r0, r0, ip
 8000f3c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f40:	bf24      	itt	cs
 8000f42:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f46:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f4a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f4e:	bf24      	itt	cs
 8000f50:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f54:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f58:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000f5c:	bf24      	itt	cs
 8000f5e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000f62:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000f66:	011b      	lsls	r3, r3, #4
 8000f68:	bf18      	it	ne
 8000f6a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000f6e:	d1e0      	bne.n	8000f32 <__aeabi_fdiv+0x46>
 8000f70:	2afd      	cmp	r2, #253	@ 0xfd
 8000f72:	f63f af50 	bhi.w	8000e16 <__aeabi_fmul+0x92>
 8000f76:	428b      	cmp	r3, r1
 8000f78:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f7c:	bf08      	it	eq
 8000f7e:	f020 0001 	biceq.w	r0, r0, #1
 8000f82:	4770      	bx	lr
 8000f84:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000f88:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000f8c:	327f      	adds	r2, #127	@ 0x7f
 8000f8e:	bfc2      	ittt	gt
 8000f90:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000f94:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000f98:	4770      	bxgt	lr
 8000f9a:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000f9e:	f04f 0300 	mov.w	r3, #0
 8000fa2:	3a01      	subs	r2, #1
 8000fa4:	e737      	b.n	8000e16 <__aeabi_fmul+0x92>
 8000fa6:	f092 0f00 	teq	r2, #0
 8000faa:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000fae:	bf02      	ittt	eq
 8000fb0:	0040      	lsleq	r0, r0, #1
 8000fb2:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000fb6:	3a01      	subeq	r2, #1
 8000fb8:	d0f9      	beq.n	8000fae <__aeabi_fdiv+0xc2>
 8000fba:	ea40 000c 	orr.w	r0, r0, ip
 8000fbe:	f093 0f00 	teq	r3, #0
 8000fc2:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000fc6:	bf02      	ittt	eq
 8000fc8:	0049      	lsleq	r1, r1, #1
 8000fca:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000fce:	3b01      	subeq	r3, #1
 8000fd0:	d0f9      	beq.n	8000fc6 <__aeabi_fdiv+0xda>
 8000fd2:	ea41 010c 	orr.w	r1, r1, ip
 8000fd6:	e795      	b.n	8000f04 <__aeabi_fdiv+0x18>
 8000fd8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000fdc:	ea92 0f0c 	teq	r2, ip
 8000fe0:	d108      	bne.n	8000ff4 <__aeabi_fdiv+0x108>
 8000fe2:	0242      	lsls	r2, r0, #9
 8000fe4:	f47f af7d 	bne.w	8000ee2 <__aeabi_fmul+0x15e>
 8000fe8:	ea93 0f0c 	teq	r3, ip
 8000fec:	f47f af70 	bne.w	8000ed0 <__aeabi_fmul+0x14c>
 8000ff0:	4608      	mov	r0, r1
 8000ff2:	e776      	b.n	8000ee2 <__aeabi_fmul+0x15e>
 8000ff4:	ea93 0f0c 	teq	r3, ip
 8000ff8:	d104      	bne.n	8001004 <__aeabi_fdiv+0x118>
 8000ffa:	024b      	lsls	r3, r1, #9
 8000ffc:	f43f af4c 	beq.w	8000e98 <__aeabi_fmul+0x114>
 8001000:	4608      	mov	r0, r1
 8001002:	e76e      	b.n	8000ee2 <__aeabi_fmul+0x15e>
 8001004:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8001008:	bf18      	it	ne
 800100a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 800100e:	d1ca      	bne.n	8000fa6 <__aeabi_fdiv+0xba>
 8001010:	f030 4200 	bics.w	r2, r0, #2147483648	@ 0x80000000
 8001014:	f47f af5c 	bne.w	8000ed0 <__aeabi_fmul+0x14c>
 8001018:	f031 4300 	bics.w	r3, r1, #2147483648	@ 0x80000000
 800101c:	f47f af3c 	bne.w	8000e98 <__aeabi_fmul+0x114>
 8001020:	e75f      	b.n	8000ee2 <__aeabi_fmul+0x15e>
 8001022:	bf00      	nop

08001024 <__aeabi_d2lz>:
 8001024:	b538      	push	{r3, r4, r5, lr}
 8001026:	2200      	movs	r2, #0
 8001028:	2300      	movs	r3, #0
 800102a:	4604      	mov	r4, r0
 800102c:	460d      	mov	r5, r1
 800102e:	f7ff fcc5 	bl	80009bc <__aeabi_dcmplt>
 8001032:	b928      	cbnz	r0, 8001040 <__aeabi_d2lz+0x1c>
 8001034:	4620      	mov	r0, r4
 8001036:	4629      	mov	r1, r5
 8001038:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800103c:	f000 b80a 	b.w	8001054 <__aeabi_d2ulz>
 8001040:	4620      	mov	r0, r4
 8001042:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 8001046:	f000 f805 	bl	8001054 <__aeabi_d2ulz>
 800104a:	4240      	negs	r0, r0
 800104c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8001050:	bd38      	pop	{r3, r4, r5, pc}
 8001052:	bf00      	nop

08001054 <__aeabi_d2ulz>:
 8001054:	b5d0      	push	{r4, r6, r7, lr}
 8001056:	2200      	movs	r2, #0
 8001058:	4b0b      	ldr	r3, [pc, #44]	@ (8001088 <__aeabi_d2ulz+0x34>)
 800105a:	4606      	mov	r6, r0
 800105c:	460f      	mov	r7, r1
 800105e:	f7ff fa3b 	bl	80004d8 <__aeabi_dmul>
 8001062:	f7ff fd11 	bl	8000a88 <__aeabi_d2uiz>
 8001066:	4604      	mov	r4, r0
 8001068:	f7ff f9bc 	bl	80003e4 <__aeabi_ui2d>
 800106c:	2200      	movs	r2, #0
 800106e:	4b07      	ldr	r3, [pc, #28]	@ (800108c <__aeabi_d2ulz+0x38>)
 8001070:	f7ff fa32 	bl	80004d8 <__aeabi_dmul>
 8001074:	4602      	mov	r2, r0
 8001076:	460b      	mov	r3, r1
 8001078:	4630      	mov	r0, r6
 800107a:	4639      	mov	r1, r7
 800107c:	f7ff f874 	bl	8000168 <__aeabi_dsub>
 8001080:	f7ff fd02 	bl	8000a88 <__aeabi_d2uiz>
 8001084:	4621      	mov	r1, r4
 8001086:	bdd0      	pop	{r4, r6, r7, pc}
 8001088:	3df00000 	.word	0x3df00000
 800108c:	41f00000 	.word	0x41f00000

08001090 <avg_filter_init>:
/*
 * @brief Initializes the average filter with a specified number of samples.
 * @param filter Pointer to the AverageFilter structure.
 * @param num_samples Number of samples to average.
 */
void avg_filter_init(AverageFilter *filter, int num_samples) {
 8001090:	b580      	push	{r7, lr}
 8001092:	b084      	sub	sp, #16
 8001094:	af00      	add	r7, sp, #0
 8001096:	6078      	str	r0, [r7, #4]
 8001098:	6039      	str	r1, [r7, #0]

	// Allocate memory for the buffer
	filter->buffer = (float*) malloc(num_samples * sizeof(float));
 800109a:	683b      	ldr	r3, [r7, #0]
 800109c:	009b      	lsls	r3, r3, #2
 800109e:	4618      	mov	r0, r3
 80010a0:	f000 ff7a 	bl	8001f98 <malloc>
 80010a4:	4603      	mov	r3, r0
 80010a6:	461a      	mov	r2, r3
 80010a8:	687b      	ldr	r3, [r7, #4]
 80010aa:	601a      	str	r2, [r3, #0]
	if (filter->buffer == NULL) {
 80010ac:	687b      	ldr	r3, [r7, #4]
 80010ae:	681b      	ldr	r3, [r3, #0]
 80010b0:	2b00      	cmp	r3, #0
 80010b2:	d020      	beq.n	80010f6 <avg_filter_init+0x66>
		return;
	}
	// Initialize the filter parameters
	filter->sum = 0.0f;
 80010b4:	687b      	ldr	r3, [r7, #4]
 80010b6:	f04f 0200 	mov.w	r2, #0
 80010ba:	605a      	str	r2, [r3, #4]
	filter->average = 0.0f;
 80010bc:	687b      	ldr	r3, [r7, #4]
 80010be:	f04f 0200 	mov.w	r2, #0
 80010c2:	609a      	str	r2, [r3, #8]
	filter->num_read = num_samples;
 80010c4:	687b      	ldr	r3, [r7, #4]
 80010c6:	683a      	ldr	r2, [r7, #0]
 80010c8:	60da      	str	r2, [r3, #12]
	filter->read_index = 0;
 80010ca:	687b      	ldr	r3, [r7, #4]
 80010cc:	2200      	movs	r2, #0
 80010ce:	611a      	str	r2, [r3, #16]

	// Initialize the buffer with zeros
	for (int i = 0; i < num_samples; i++) {
 80010d0:	2300      	movs	r3, #0
 80010d2:	60fb      	str	r3, [r7, #12]
 80010d4:	e00a      	b.n	80010ec <avg_filter_init+0x5c>
		filter->buffer[i] = 0.0f;
 80010d6:	687b      	ldr	r3, [r7, #4]
 80010d8:	681a      	ldr	r2, [r3, #0]
 80010da:	68fb      	ldr	r3, [r7, #12]
 80010dc:	009b      	lsls	r3, r3, #2
 80010de:	4413      	add	r3, r2
 80010e0:	f04f 0200 	mov.w	r2, #0
 80010e4:	601a      	str	r2, [r3, #0]
	for (int i = 0; i < num_samples; i++) {
 80010e6:	68fb      	ldr	r3, [r7, #12]
 80010e8:	3301      	adds	r3, #1
 80010ea:	60fb      	str	r3, [r7, #12]
 80010ec:	68fa      	ldr	r2, [r7, #12]
 80010ee:	683b      	ldr	r3, [r7, #0]
 80010f0:	429a      	cmp	r2, r3
 80010f2:	dbf0      	blt.n	80010d6 <avg_filter_init+0x46>
 80010f4:	e000      	b.n	80010f8 <avg_filter_init+0x68>
		return;
 80010f6:	bf00      	nop
	}
}
 80010f8:	3710      	adds	r7, #16
 80010fa:	46bd      	mov	sp, r7
 80010fc:	bd80      	pop	{r7, pc}

080010fe <avg_filter_update>:
 * @brief Updates the average filter with a new ADC value.
 * @param filter Pointer to the AverageFilter structure.
 * @param adc_value New ADC value to add to the filter.
 * @return The updated average value.
 */
float avg_filter_update(AverageFilter *filter, float adc_value) {
 80010fe:	b590      	push	{r4, r7, lr}
 8001100:	b083      	sub	sp, #12
 8001102:	af00      	add	r7, sp, #0
 8001104:	6078      	str	r0, [r7, #4]
 8001106:	6039      	str	r1, [r7, #0]

	// Subtract the oldest sample from the sum
	filter->sum -= filter->buffer[filter->read_index];
 8001108:	687b      	ldr	r3, [r7, #4]
 800110a:	6858      	ldr	r0, [r3, #4]
 800110c:	687b      	ldr	r3, [r7, #4]
 800110e:	681a      	ldr	r2, [r3, #0]
 8001110:	687b      	ldr	r3, [r7, #4]
 8001112:	691b      	ldr	r3, [r3, #16]
 8001114:	009b      	lsls	r3, r3, #2
 8001116:	4413      	add	r3, r2
 8001118:	681b      	ldr	r3, [r3, #0]
 800111a:	4619      	mov	r1, r3
 800111c:	f7ff fd28 	bl	8000b70 <__aeabi_fsub>
 8001120:	4603      	mov	r3, r0
 8001122:	461a      	mov	r2, r3
 8001124:	687b      	ldr	r3, [r7, #4]
 8001126:	605a      	str	r2, [r3, #4]

	// Add the new sample to the buffer and the sum
	filter->buffer[filter->read_index] = adc_value;
 8001128:	687b      	ldr	r3, [r7, #4]
 800112a:	681a      	ldr	r2, [r3, #0]
 800112c:	687b      	ldr	r3, [r7, #4]
 800112e:	691b      	ldr	r3, [r3, #16]
 8001130:	009b      	lsls	r3, r3, #2
 8001132:	4413      	add	r3, r2
 8001134:	683a      	ldr	r2, [r7, #0]
 8001136:	601a      	str	r2, [r3, #0]
	filter->sum += adc_value;
 8001138:	687b      	ldr	r3, [r7, #4]
 800113a:	685b      	ldr	r3, [r3, #4]
 800113c:	6839      	ldr	r1, [r7, #0]
 800113e:	4618      	mov	r0, r3
 8001140:	f7ff fd18 	bl	8000b74 <__addsf3>
 8001144:	4603      	mov	r3, r0
 8001146:	461a      	mov	r2, r3
 8001148:	687b      	ldr	r3, [r7, #4]
 800114a:	605a      	str	r2, [r3, #4]

	// Update the read index
	filter->read_index = (filter->read_index + 1) % filter->num_read;
 800114c:	687b      	ldr	r3, [r7, #4]
 800114e:	691b      	ldr	r3, [r3, #16]
 8001150:	3301      	adds	r3, #1
 8001152:	687a      	ldr	r2, [r7, #4]
 8001154:	68d2      	ldr	r2, [r2, #12]
 8001156:	fb93 f1f2 	sdiv	r1, r3, r2
 800115a:	fb01 f202 	mul.w	r2, r1, r2
 800115e:	1a9a      	subs	r2, r3, r2
 8001160:	687b      	ldr	r3, [r7, #4]
 8001162:	611a      	str	r2, [r3, #16]

	// Calculate the average
	filter->average = filter->sum / filter->num_read;
 8001164:	687b      	ldr	r3, [r7, #4]
 8001166:	685c      	ldr	r4, [r3, #4]
 8001168:	687b      	ldr	r3, [r7, #4]
 800116a:	68db      	ldr	r3, [r3, #12]
 800116c:	4618      	mov	r0, r3
 800116e:	f7ff fdb5 	bl	8000cdc <__aeabi_i2f>
 8001172:	4603      	mov	r3, r0
 8001174:	4619      	mov	r1, r3
 8001176:	4620      	mov	r0, r4
 8001178:	f7ff feb8 	bl	8000eec <__aeabi_fdiv>
 800117c:	4603      	mov	r3, r0
 800117e:	461a      	mov	r2, r3
 8001180:	687b      	ldr	r3, [r7, #4]
 8001182:	609a      	str	r2, [r3, #8]

	return filter->average;
 8001184:	687b      	ldr	r3, [r7, #4]
 8001186:	689b      	ldr	r3, [r3, #8]
}
 8001188:	4618      	mov	r0, r3
 800118a:	370c      	adds	r7, #12
 800118c:	46bd      	mov	sp, r7
 800118e:	bd90      	pop	{r4, r7, pc}

08001190 <main>:

/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void) {
 8001190:	b580      	push	{r7, lr}
 8001192:	b082      	sub	sp, #8
 8001194:	af00      	add	r7, sp, #0
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 8001196:	f000 f9db 	bl	8001550 <HAL_Init>

	/* USER CODE BEGIN Init */

	// Initialize the average filter with the specified number of samples
	avg_filter_init(&adc_filter, ADC_SAMPLE_SIZE);
 800119a:	210a      	movs	r1, #10
 800119c:	4808      	ldr	r0, [pc, #32]	@ (80011c0 <main+0x30>)
 800119e:	f7ff ff77 	bl	8001090 <avg_filter_init>

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 80011a2:	f000 f80f 	bl	80011c4 <SystemClock_Config>
	/* USER CODE BEGIN SysInit */

	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 80011a6:	f000 f853 	bl	8001250 <MX_GPIO_Init>
		/* USER CODE END WHILE */

		/* USER CODE BEGIN 3 */

		// Simulate ADC value (replace this with actual ADC reading)
		float adc_value = 1.0f; // Replace with actual ADC value
 80011aa:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 80011ae:	607b      	str	r3, [r7, #4]
		// Update the average filter with the new ADC value
		float average_value = avg_filter_update(&adc_filter, adc_value);
 80011b0:	6879      	ldr	r1, [r7, #4]
 80011b2:	4803      	ldr	r0, [pc, #12]	@ (80011c0 <main+0x30>)
 80011b4:	f7ff ffa3 	bl	80010fe <avg_filter_update>
 80011b8:	6038      	str	r0, [r7, #0]
	while (1) {
 80011ba:	bf00      	nop
 80011bc:	e7f5      	b.n	80011aa <main+0x1a>
 80011be:	bf00      	nop
 80011c0:	200001f0 	.word	0x200001f0

080011c4 <SystemClock_Config>:

/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void) {
 80011c4:	b580      	push	{r7, lr}
 80011c6:	b090      	sub	sp, #64	@ 0x40
 80011c8:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 80011ca:	f107 0318 	add.w	r3, r7, #24
 80011ce:	2228      	movs	r2, #40	@ 0x28
 80011d0:	2100      	movs	r1, #0
 80011d2:	4618      	mov	r0, r3
 80011d4:	f001 ff21 	bl	800301a <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 80011d8:	1d3b      	adds	r3, r7, #4
 80011da:	2200      	movs	r2, #0
 80011dc:	601a      	str	r2, [r3, #0]
 80011de:	605a      	str	r2, [r3, #4]
 80011e0:	609a      	str	r2, [r3, #8]
 80011e2:	60da      	str	r2, [r3, #12]
 80011e4:	611a      	str	r2, [r3, #16]

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80011e6:	2301      	movs	r3, #1
 80011e8:	61bb      	str	r3, [r7, #24]
	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80011ea:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80011ee:	61fb      	str	r3, [r7, #28]
	RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 80011f0:	2300      	movs	r3, #0
 80011f2:	623b      	str	r3, [r7, #32]
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80011f4:	2301      	movs	r3, #1
 80011f6:	62bb      	str	r3, [r7, #40]	@ 0x28
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80011f8:	2302      	movs	r3, #2
 80011fa:	637b      	str	r3, [r7, #52]	@ 0x34
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80011fc:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8001200:	63bb      	str	r3, [r7, #56]	@ 0x38
	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 8001202:	f44f 13e0 	mov.w	r3, #1835008	@ 0x1c0000
 8001206:	63fb      	str	r3, [r7, #60]	@ 0x3c
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 8001208:	f107 0318 	add.w	r3, r7, #24
 800120c:	4618      	mov	r0, r3
 800120e:	f000 fae5 	bl	80017dc <HAL_RCC_OscConfig>
 8001212:	4603      	mov	r3, r0
 8001214:	2b00      	cmp	r3, #0
 8001216:	d001      	beq.n	800121c <SystemClock_Config+0x58>
		Error_Handler();
 8001218:	f000 f848 	bl	80012ac <Error_Handler>
	}

	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 800121c:	230f      	movs	r3, #15
 800121e:	607b      	str	r3, [r7, #4]
			| RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001220:	2302      	movs	r3, #2
 8001222:	60bb      	str	r3, [r7, #8]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001224:	2300      	movs	r3, #0
 8001226:	60fb      	str	r3, [r7, #12]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001228:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800122c:	613b      	str	r3, [r7, #16]
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800122e:	2300      	movs	r3, #0
 8001230:	617b      	str	r3, [r7, #20]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK) {
 8001232:	1d3b      	adds	r3, r7, #4
 8001234:	2102      	movs	r1, #2
 8001236:	4618      	mov	r0, r3
 8001238:	f000 fd52 	bl	8001ce0 <HAL_RCC_ClockConfig>
 800123c:	4603      	mov	r3, r0
 800123e:	2b00      	cmp	r3, #0
 8001240:	d001      	beq.n	8001246 <SystemClock_Config+0x82>
		Error_Handler();
 8001242:	f000 f833 	bl	80012ac <Error_Handler>
	}
}
 8001246:	bf00      	nop
 8001248:	3740      	adds	r7, #64	@ 0x40
 800124a:	46bd      	mov	sp, r7
 800124c:	bd80      	pop	{r7, pc}
	...

08001250 <MX_GPIO_Init>:
/**
 * @brief GPIO Initialization Function
 * @param None
 * @retval None
 */
static void MX_GPIO_Init(void) {
 8001250:	b480      	push	{r7}
 8001252:	b085      	sub	sp, #20
 8001254:	af00      	add	r7, sp, #0
	/* USER CODE BEGIN MX_GPIO_Init_1 */

	/* USER CODE END MX_GPIO_Init_1 */

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOD_CLK_ENABLE();
 8001256:	4b14      	ldr	r3, [pc, #80]	@ (80012a8 <MX_GPIO_Init+0x58>)
 8001258:	699b      	ldr	r3, [r3, #24]
 800125a:	4a13      	ldr	r2, [pc, #76]	@ (80012a8 <MX_GPIO_Init+0x58>)
 800125c:	f043 0320 	orr.w	r3, r3, #32
 8001260:	6193      	str	r3, [r2, #24]
 8001262:	4b11      	ldr	r3, [pc, #68]	@ (80012a8 <MX_GPIO_Init+0x58>)
 8001264:	699b      	ldr	r3, [r3, #24]
 8001266:	f003 0320 	and.w	r3, r3, #32
 800126a:	60fb      	str	r3, [r7, #12]
 800126c:	68fb      	ldr	r3, [r7, #12]
	__HAL_RCC_GPIOA_CLK_ENABLE();
 800126e:	4b0e      	ldr	r3, [pc, #56]	@ (80012a8 <MX_GPIO_Init+0x58>)
 8001270:	699b      	ldr	r3, [r3, #24]
 8001272:	4a0d      	ldr	r2, [pc, #52]	@ (80012a8 <MX_GPIO_Init+0x58>)
 8001274:	f043 0304 	orr.w	r3, r3, #4
 8001278:	6193      	str	r3, [r2, #24]
 800127a:	4b0b      	ldr	r3, [pc, #44]	@ (80012a8 <MX_GPIO_Init+0x58>)
 800127c:	699b      	ldr	r3, [r3, #24]
 800127e:	f003 0304 	and.w	r3, r3, #4
 8001282:	60bb      	str	r3, [r7, #8]
 8001284:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8001286:	4b08      	ldr	r3, [pc, #32]	@ (80012a8 <MX_GPIO_Init+0x58>)
 8001288:	699b      	ldr	r3, [r3, #24]
 800128a:	4a07      	ldr	r2, [pc, #28]	@ (80012a8 <MX_GPIO_Init+0x58>)
 800128c:	f043 0308 	orr.w	r3, r3, #8
 8001290:	6193      	str	r3, [r2, #24]
 8001292:	4b05      	ldr	r3, [pc, #20]	@ (80012a8 <MX_GPIO_Init+0x58>)
 8001294:	699b      	ldr	r3, [r3, #24]
 8001296:	f003 0308 	and.w	r3, r3, #8
 800129a:	607b      	str	r3, [r7, #4]
 800129c:	687b      	ldr	r3, [r7, #4]

	/* USER CODE BEGIN MX_GPIO_Init_2 */

	/* USER CODE END MX_GPIO_Init_2 */
}
 800129e:	bf00      	nop
 80012a0:	3714      	adds	r7, #20
 80012a2:	46bd      	mov	sp, r7
 80012a4:	bc80      	pop	{r7}
 80012a6:	4770      	bx	lr
 80012a8:	40021000 	.word	0x40021000

080012ac <Error_Handler>:

/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void) {
 80012ac:	b480      	push	{r7}
 80012ae:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80012b0:	b672      	cpsid	i
}
 80012b2:	bf00      	nop
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 80012b4:	bf00      	nop
 80012b6:	e7fd      	b.n	80012b4 <Error_Handler+0x8>

080012b8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80012b8:	b480      	push	{r7}
 80012ba:	b085      	sub	sp, #20
 80012bc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 80012be:	4b15      	ldr	r3, [pc, #84]	@ (8001314 <HAL_MspInit+0x5c>)
 80012c0:	699b      	ldr	r3, [r3, #24]
 80012c2:	4a14      	ldr	r2, [pc, #80]	@ (8001314 <HAL_MspInit+0x5c>)
 80012c4:	f043 0301 	orr.w	r3, r3, #1
 80012c8:	6193      	str	r3, [r2, #24]
 80012ca:	4b12      	ldr	r3, [pc, #72]	@ (8001314 <HAL_MspInit+0x5c>)
 80012cc:	699b      	ldr	r3, [r3, #24]
 80012ce:	f003 0301 	and.w	r3, r3, #1
 80012d2:	60bb      	str	r3, [r7, #8]
 80012d4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 80012d6:	4b0f      	ldr	r3, [pc, #60]	@ (8001314 <HAL_MspInit+0x5c>)
 80012d8:	69db      	ldr	r3, [r3, #28]
 80012da:	4a0e      	ldr	r2, [pc, #56]	@ (8001314 <HAL_MspInit+0x5c>)
 80012dc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80012e0:	61d3      	str	r3, [r2, #28]
 80012e2:	4b0c      	ldr	r3, [pc, #48]	@ (8001314 <HAL_MspInit+0x5c>)
 80012e4:	69db      	ldr	r3, [r3, #28]
 80012e6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80012ea:	607b      	str	r3, [r7, #4]
 80012ec:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 80012ee:	4b0a      	ldr	r3, [pc, #40]	@ (8001318 <HAL_MspInit+0x60>)
 80012f0:	685b      	ldr	r3, [r3, #4]
 80012f2:	60fb      	str	r3, [r7, #12]
 80012f4:	68fb      	ldr	r3, [r7, #12]
 80012f6:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 80012fa:	60fb      	str	r3, [r7, #12]
 80012fc:	68fb      	ldr	r3, [r7, #12]
 80012fe:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8001302:	60fb      	str	r3, [r7, #12]
 8001304:	4a04      	ldr	r2, [pc, #16]	@ (8001318 <HAL_MspInit+0x60>)
 8001306:	68fb      	ldr	r3, [r7, #12]
 8001308:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800130a:	bf00      	nop
 800130c:	3714      	adds	r7, #20
 800130e:	46bd      	mov	sp, r7
 8001310:	bc80      	pop	{r7}
 8001312:	4770      	bx	lr
 8001314:	40021000 	.word	0x40021000
 8001318:	40010000 	.word	0x40010000

0800131c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800131c:	b480      	push	{r7}
 800131e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001320:	bf00      	nop
 8001322:	e7fd      	b.n	8001320 <NMI_Handler+0x4>

08001324 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001324:	b480      	push	{r7}
 8001326:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001328:	bf00      	nop
 800132a:	e7fd      	b.n	8001328 <HardFault_Handler+0x4>

0800132c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800132c:	b480      	push	{r7}
 800132e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001330:	bf00      	nop
 8001332:	e7fd      	b.n	8001330 <MemManage_Handler+0x4>

08001334 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001334:	b480      	push	{r7}
 8001336:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001338:	bf00      	nop
 800133a:	e7fd      	b.n	8001338 <BusFault_Handler+0x4>

0800133c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800133c:	b480      	push	{r7}
 800133e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001340:	bf00      	nop
 8001342:	e7fd      	b.n	8001340 <UsageFault_Handler+0x4>

08001344 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001344:	b480      	push	{r7}
 8001346:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001348:	bf00      	nop
 800134a:	46bd      	mov	sp, r7
 800134c:	bc80      	pop	{r7}
 800134e:	4770      	bx	lr

08001350 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001350:	b480      	push	{r7}
 8001352:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001354:	bf00      	nop
 8001356:	46bd      	mov	sp, r7
 8001358:	bc80      	pop	{r7}
 800135a:	4770      	bx	lr

0800135c <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800135c:	b480      	push	{r7}
 800135e:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001360:	bf00      	nop
 8001362:	46bd      	mov	sp, r7
 8001364:	bc80      	pop	{r7}
 8001366:	4770      	bx	lr

08001368 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001368:	b580      	push	{r7, lr}
 800136a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800136c:	f000 f936 	bl	80015dc <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001370:	bf00      	nop
 8001372:	bd80      	pop	{r7, pc}

08001374 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001374:	b480      	push	{r7}
 8001376:	af00      	add	r7, sp, #0
  return 1;
 8001378:	2301      	movs	r3, #1
}
 800137a:	4618      	mov	r0, r3
 800137c:	46bd      	mov	sp, r7
 800137e:	bc80      	pop	{r7}
 8001380:	4770      	bx	lr

08001382 <_kill>:

int _kill(int pid, int sig)
{
 8001382:	b580      	push	{r7, lr}
 8001384:	b082      	sub	sp, #8
 8001386:	af00      	add	r7, sp, #0
 8001388:	6078      	str	r0, [r7, #4]
 800138a:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 800138c:	f001 fea8 	bl	80030e0 <__errno>
 8001390:	4603      	mov	r3, r0
 8001392:	2216      	movs	r2, #22
 8001394:	601a      	str	r2, [r3, #0]
  return -1;
 8001396:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 800139a:	4618      	mov	r0, r3
 800139c:	3708      	adds	r7, #8
 800139e:	46bd      	mov	sp, r7
 80013a0:	bd80      	pop	{r7, pc}

080013a2 <_exit>:

void _exit (int status)
{
 80013a2:	b580      	push	{r7, lr}
 80013a4:	b082      	sub	sp, #8
 80013a6:	af00      	add	r7, sp, #0
 80013a8:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80013aa:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 80013ae:	6878      	ldr	r0, [r7, #4]
 80013b0:	f7ff ffe7 	bl	8001382 <_kill>
  while (1) {}    /* Make sure we hang here */
 80013b4:	bf00      	nop
 80013b6:	e7fd      	b.n	80013b4 <_exit+0x12>

080013b8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80013b8:	b580      	push	{r7, lr}
 80013ba:	b086      	sub	sp, #24
 80013bc:	af00      	add	r7, sp, #0
 80013be:	60f8      	str	r0, [r7, #12]
 80013c0:	60b9      	str	r1, [r7, #8]
 80013c2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80013c4:	2300      	movs	r3, #0
 80013c6:	617b      	str	r3, [r7, #20]
 80013c8:	e00a      	b.n	80013e0 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80013ca:	f3af 8000 	nop.w
 80013ce:	4601      	mov	r1, r0
 80013d0:	68bb      	ldr	r3, [r7, #8]
 80013d2:	1c5a      	adds	r2, r3, #1
 80013d4:	60ba      	str	r2, [r7, #8]
 80013d6:	b2ca      	uxtb	r2, r1
 80013d8:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80013da:	697b      	ldr	r3, [r7, #20]
 80013dc:	3301      	adds	r3, #1
 80013de:	617b      	str	r3, [r7, #20]
 80013e0:	697a      	ldr	r2, [r7, #20]
 80013e2:	687b      	ldr	r3, [r7, #4]
 80013e4:	429a      	cmp	r2, r3
 80013e6:	dbf0      	blt.n	80013ca <_read+0x12>
  }

  return len;
 80013e8:	687b      	ldr	r3, [r7, #4]
}
 80013ea:	4618      	mov	r0, r3
 80013ec:	3718      	adds	r7, #24
 80013ee:	46bd      	mov	sp, r7
 80013f0:	bd80      	pop	{r7, pc}

080013f2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80013f2:	b580      	push	{r7, lr}
 80013f4:	b086      	sub	sp, #24
 80013f6:	af00      	add	r7, sp, #0
 80013f8:	60f8      	str	r0, [r7, #12]
 80013fa:	60b9      	str	r1, [r7, #8]
 80013fc:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80013fe:	2300      	movs	r3, #0
 8001400:	617b      	str	r3, [r7, #20]
 8001402:	e009      	b.n	8001418 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001404:	68bb      	ldr	r3, [r7, #8]
 8001406:	1c5a      	adds	r2, r3, #1
 8001408:	60ba      	str	r2, [r7, #8]
 800140a:	781b      	ldrb	r3, [r3, #0]
 800140c:	4618      	mov	r0, r3
 800140e:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001412:	697b      	ldr	r3, [r7, #20]
 8001414:	3301      	adds	r3, #1
 8001416:	617b      	str	r3, [r7, #20]
 8001418:	697a      	ldr	r2, [r7, #20]
 800141a:	687b      	ldr	r3, [r7, #4]
 800141c:	429a      	cmp	r2, r3
 800141e:	dbf1      	blt.n	8001404 <_write+0x12>
  }
  return len;
 8001420:	687b      	ldr	r3, [r7, #4]
}
 8001422:	4618      	mov	r0, r3
 8001424:	3718      	adds	r7, #24
 8001426:	46bd      	mov	sp, r7
 8001428:	bd80      	pop	{r7, pc}

0800142a <_close>:

int _close(int file)
{
 800142a:	b480      	push	{r7}
 800142c:	b083      	sub	sp, #12
 800142e:	af00      	add	r7, sp, #0
 8001430:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001432:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 8001436:	4618      	mov	r0, r3
 8001438:	370c      	adds	r7, #12
 800143a:	46bd      	mov	sp, r7
 800143c:	bc80      	pop	{r7}
 800143e:	4770      	bx	lr

08001440 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001440:	b480      	push	{r7}
 8001442:	b083      	sub	sp, #12
 8001444:	af00      	add	r7, sp, #0
 8001446:	6078      	str	r0, [r7, #4]
 8001448:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800144a:	683b      	ldr	r3, [r7, #0]
 800144c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001450:	605a      	str	r2, [r3, #4]
  return 0;
 8001452:	2300      	movs	r3, #0
}
 8001454:	4618      	mov	r0, r3
 8001456:	370c      	adds	r7, #12
 8001458:	46bd      	mov	sp, r7
 800145a:	bc80      	pop	{r7}
 800145c:	4770      	bx	lr

0800145e <_isatty>:

int _isatty(int file)
{
 800145e:	b480      	push	{r7}
 8001460:	b083      	sub	sp, #12
 8001462:	af00      	add	r7, sp, #0
 8001464:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001466:	2301      	movs	r3, #1
}
 8001468:	4618      	mov	r0, r3
 800146a:	370c      	adds	r7, #12
 800146c:	46bd      	mov	sp, r7
 800146e:	bc80      	pop	{r7}
 8001470:	4770      	bx	lr

08001472 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001472:	b480      	push	{r7}
 8001474:	b085      	sub	sp, #20
 8001476:	af00      	add	r7, sp, #0
 8001478:	60f8      	str	r0, [r7, #12]
 800147a:	60b9      	str	r1, [r7, #8]
 800147c:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800147e:	2300      	movs	r3, #0
}
 8001480:	4618      	mov	r0, r3
 8001482:	3714      	adds	r7, #20
 8001484:	46bd      	mov	sp, r7
 8001486:	bc80      	pop	{r7}
 8001488:	4770      	bx	lr
	...

0800148c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800148c:	b580      	push	{r7, lr}
 800148e:	b086      	sub	sp, #24
 8001490:	af00      	add	r7, sp, #0
 8001492:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001494:	4a14      	ldr	r2, [pc, #80]	@ (80014e8 <_sbrk+0x5c>)
 8001496:	4b15      	ldr	r3, [pc, #84]	@ (80014ec <_sbrk+0x60>)
 8001498:	1ad3      	subs	r3, r2, r3
 800149a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800149c:	697b      	ldr	r3, [r7, #20]
 800149e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80014a0:	4b13      	ldr	r3, [pc, #76]	@ (80014f0 <_sbrk+0x64>)
 80014a2:	681b      	ldr	r3, [r3, #0]
 80014a4:	2b00      	cmp	r3, #0
 80014a6:	d102      	bne.n	80014ae <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80014a8:	4b11      	ldr	r3, [pc, #68]	@ (80014f0 <_sbrk+0x64>)
 80014aa:	4a12      	ldr	r2, [pc, #72]	@ (80014f4 <_sbrk+0x68>)
 80014ac:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80014ae:	4b10      	ldr	r3, [pc, #64]	@ (80014f0 <_sbrk+0x64>)
 80014b0:	681a      	ldr	r2, [r3, #0]
 80014b2:	687b      	ldr	r3, [r7, #4]
 80014b4:	4413      	add	r3, r2
 80014b6:	693a      	ldr	r2, [r7, #16]
 80014b8:	429a      	cmp	r2, r3
 80014ba:	d207      	bcs.n	80014cc <_sbrk+0x40>
  {
    errno = ENOMEM;
 80014bc:	f001 fe10 	bl	80030e0 <__errno>
 80014c0:	4603      	mov	r3, r0
 80014c2:	220c      	movs	r2, #12
 80014c4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80014c6:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80014ca:	e009      	b.n	80014e0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80014cc:	4b08      	ldr	r3, [pc, #32]	@ (80014f0 <_sbrk+0x64>)
 80014ce:	681b      	ldr	r3, [r3, #0]
 80014d0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80014d2:	4b07      	ldr	r3, [pc, #28]	@ (80014f0 <_sbrk+0x64>)
 80014d4:	681a      	ldr	r2, [r3, #0]
 80014d6:	687b      	ldr	r3, [r7, #4]
 80014d8:	4413      	add	r3, r2
 80014da:	4a05      	ldr	r2, [pc, #20]	@ (80014f0 <_sbrk+0x64>)
 80014dc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80014de:	68fb      	ldr	r3, [r7, #12]
}
 80014e0:	4618      	mov	r0, r3
 80014e2:	3718      	adds	r7, #24
 80014e4:	46bd      	mov	sp, r7
 80014e6:	bd80      	pop	{r7, pc}
 80014e8:	20005000 	.word	0x20005000
 80014ec:	00000400 	.word	0x00000400
 80014f0:	20000204 	.word	0x20000204
 80014f4:	20000358 	.word	0x20000358

080014f8 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 80014f8:	b480      	push	{r7}
 80014fa:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80014fc:	bf00      	nop
 80014fe:	46bd      	mov	sp, r7
 8001500:	bc80      	pop	{r7}
 8001502:	4770      	bx	lr

08001504 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Call the clock system initialization function.*/
    bl  SystemInit
 8001504:	f7ff fff8 	bl	80014f8 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001508:	480b      	ldr	r0, [pc, #44]	@ (8001538 <LoopFillZerobss+0xe>)
  ldr r1, =_edata
 800150a:	490c      	ldr	r1, [pc, #48]	@ (800153c <LoopFillZerobss+0x12>)
  ldr r2, =_sidata
 800150c:	4a0c      	ldr	r2, [pc, #48]	@ (8001540 <LoopFillZerobss+0x16>)
  movs r3, #0
 800150e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001510:	e002      	b.n	8001518 <LoopCopyDataInit>

08001512 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001512:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001514:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001516:	3304      	adds	r3, #4

08001518 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001518:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800151a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800151c:	d3f9      	bcc.n	8001512 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800151e:	4a09      	ldr	r2, [pc, #36]	@ (8001544 <LoopFillZerobss+0x1a>)
  ldr r4, =_ebss
 8001520:	4c09      	ldr	r4, [pc, #36]	@ (8001548 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8001522:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001524:	e001      	b.n	800152a <LoopFillZerobss>

08001526 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001526:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001528:	3204      	adds	r2, #4

0800152a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800152a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800152c:	d3fb      	bcc.n	8001526 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 800152e:	f001 fddd 	bl	80030ec <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001532:	f7ff fe2d 	bl	8001190 <main>
  bx lr
 8001536:	4770      	bx	lr
  ldr r0, =_sdata
 8001538:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800153c:	200001d4 	.word	0x200001d4
  ldr r2, =_sidata
 8001540:	08006ac4 	.word	0x08006ac4
  ldr r2, =_sbss
 8001544:	200001d4 	.word	0x200001d4
  ldr r4, =_ebss
 8001548:	20000358 	.word	0x20000358

0800154c <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800154c:	e7fe      	b.n	800154c <ADC1_2_IRQHandler>
	...

08001550 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8001550:	b580      	push	{r7, lr}
 8001552:	af00      	add	r7, sp, #0
    defined(STM32F102x6) || defined(STM32F102xB) || \
    defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || defined(STM32F103xG) || \
    defined(STM32F105xC) || defined(STM32F107xC)

  /* Prefetch buffer is not available on value line devices */
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8001554:	4b08      	ldr	r3, [pc, #32]	@ (8001578 <HAL_Init+0x28>)
 8001556:	681b      	ldr	r3, [r3, #0]
 8001558:	4a07      	ldr	r2, [pc, #28]	@ (8001578 <HAL_Init+0x28>)
 800155a:	f043 0310 	orr.w	r3, r3, #16
 800155e:	6013      	str	r3, [r2, #0]
#endif
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001560:	2003      	movs	r0, #3
 8001562:	f000 f907 	bl	8001774 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8001566:	200f      	movs	r0, #15
 8001568:	f000 f808 	bl	800157c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800156c:	f7ff fea4 	bl	80012b8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8001570:	2300      	movs	r3, #0
}
 8001572:	4618      	mov	r0, r3
 8001574:	bd80      	pop	{r7, pc}
 8001576:	bf00      	nop
 8001578:	40022000 	.word	0x40022000

0800157c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800157c:	b580      	push	{r7, lr}
 800157e:	b082      	sub	sp, #8
 8001580:	af00      	add	r7, sp, #0
 8001582:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8001584:	4b12      	ldr	r3, [pc, #72]	@ (80015d0 <HAL_InitTick+0x54>)
 8001586:	681a      	ldr	r2, [r3, #0]
 8001588:	4b12      	ldr	r3, [pc, #72]	@ (80015d4 <HAL_InitTick+0x58>)
 800158a:	781b      	ldrb	r3, [r3, #0]
 800158c:	4619      	mov	r1, r3
 800158e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001592:	fbb3 f3f1 	udiv	r3, r3, r1
 8001596:	fbb2 f3f3 	udiv	r3, r2, r3
 800159a:	4618      	mov	r0, r3
 800159c:	f000 f911 	bl	80017c2 <HAL_SYSTICK_Config>
 80015a0:	4603      	mov	r3, r0
 80015a2:	2b00      	cmp	r3, #0
 80015a4:	d001      	beq.n	80015aa <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 80015a6:	2301      	movs	r3, #1
 80015a8:	e00e      	b.n	80015c8 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80015aa:	687b      	ldr	r3, [r7, #4]
 80015ac:	2b0f      	cmp	r3, #15
 80015ae:	d80a      	bhi.n	80015c6 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80015b0:	2200      	movs	r2, #0
 80015b2:	6879      	ldr	r1, [r7, #4]
 80015b4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80015b8:	f000 f8e7 	bl	800178a <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80015bc:	4a06      	ldr	r2, [pc, #24]	@ (80015d8 <HAL_InitTick+0x5c>)
 80015be:	687b      	ldr	r3, [r7, #4]
 80015c0:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 80015c2:	2300      	movs	r3, #0
 80015c4:	e000      	b.n	80015c8 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 80015c6:	2301      	movs	r3, #1
}
 80015c8:	4618      	mov	r0, r3
 80015ca:	3708      	adds	r7, #8
 80015cc:	46bd      	mov	sp, r7
 80015ce:	bd80      	pop	{r7, pc}
 80015d0:	20000000 	.word	0x20000000
 80015d4:	20000008 	.word	0x20000008
 80015d8:	20000004 	.word	0x20000004

080015dc <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80015dc:	b480      	push	{r7}
 80015de:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80015e0:	4b05      	ldr	r3, [pc, #20]	@ (80015f8 <HAL_IncTick+0x1c>)
 80015e2:	781b      	ldrb	r3, [r3, #0]
 80015e4:	461a      	mov	r2, r3
 80015e6:	4b05      	ldr	r3, [pc, #20]	@ (80015fc <HAL_IncTick+0x20>)
 80015e8:	681b      	ldr	r3, [r3, #0]
 80015ea:	4413      	add	r3, r2
 80015ec:	4a03      	ldr	r2, [pc, #12]	@ (80015fc <HAL_IncTick+0x20>)
 80015ee:	6013      	str	r3, [r2, #0]
}
 80015f0:	bf00      	nop
 80015f2:	46bd      	mov	sp, r7
 80015f4:	bc80      	pop	{r7}
 80015f6:	4770      	bx	lr
 80015f8:	20000008 	.word	0x20000008
 80015fc:	20000208 	.word	0x20000208

08001600 <HAL_GetTick>:
  * @note  This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8001600:	b480      	push	{r7}
 8001602:	af00      	add	r7, sp, #0
  return uwTick;
 8001604:	4b02      	ldr	r3, [pc, #8]	@ (8001610 <HAL_GetTick+0x10>)
 8001606:	681b      	ldr	r3, [r3, #0]
}
 8001608:	4618      	mov	r0, r3
 800160a:	46bd      	mov	sp, r7
 800160c:	bc80      	pop	{r7}
 800160e:	4770      	bx	lr
 8001610:	20000208 	.word	0x20000208

08001614 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001614:	b480      	push	{r7}
 8001616:	b085      	sub	sp, #20
 8001618:	af00      	add	r7, sp, #0
 800161a:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 800161c:	687b      	ldr	r3, [r7, #4]
 800161e:	f003 0307 	and.w	r3, r3, #7
 8001622:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8001624:	4b0c      	ldr	r3, [pc, #48]	@ (8001658 <__NVIC_SetPriorityGrouping+0x44>)
 8001626:	68db      	ldr	r3, [r3, #12]
 8001628:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800162a:	68ba      	ldr	r2, [r7, #8]
 800162c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001630:	4013      	ands	r3, r2
 8001632:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos) );               /* Insert write key and priority group */
 8001634:	68fb      	ldr	r3, [r7, #12]
 8001636:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8001638:	68bb      	ldr	r3, [r7, #8]
 800163a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800163c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001640:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001644:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8001646:	4a04      	ldr	r2, [pc, #16]	@ (8001658 <__NVIC_SetPriorityGrouping+0x44>)
 8001648:	68bb      	ldr	r3, [r7, #8]
 800164a:	60d3      	str	r3, [r2, #12]
}
 800164c:	bf00      	nop
 800164e:	3714      	adds	r7, #20
 8001650:	46bd      	mov	sp, r7
 8001652:	bc80      	pop	{r7}
 8001654:	4770      	bx	lr
 8001656:	bf00      	nop
 8001658:	e000ed00 	.word	0xe000ed00

0800165c <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 800165c:	b480      	push	{r7}
 800165e:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001660:	4b04      	ldr	r3, [pc, #16]	@ (8001674 <__NVIC_GetPriorityGrouping+0x18>)
 8001662:	68db      	ldr	r3, [r3, #12]
 8001664:	0a1b      	lsrs	r3, r3, #8
 8001666:	f003 0307 	and.w	r3, r3, #7
}
 800166a:	4618      	mov	r0, r3
 800166c:	46bd      	mov	sp, r7
 800166e:	bc80      	pop	{r7}
 8001670:	4770      	bx	lr
 8001672:	bf00      	nop
 8001674:	e000ed00 	.word	0xe000ed00

08001678 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001678:	b480      	push	{r7}
 800167a:	b083      	sub	sp, #12
 800167c:	af00      	add	r7, sp, #0
 800167e:	4603      	mov	r3, r0
 8001680:	6039      	str	r1, [r7, #0]
 8001682:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001684:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001688:	2b00      	cmp	r3, #0
 800168a:	db0a      	blt.n	80016a2 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800168c:	683b      	ldr	r3, [r7, #0]
 800168e:	b2da      	uxtb	r2, r3
 8001690:	490c      	ldr	r1, [pc, #48]	@ (80016c4 <__NVIC_SetPriority+0x4c>)
 8001692:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001696:	0112      	lsls	r2, r2, #4
 8001698:	b2d2      	uxtb	r2, r2
 800169a:	440b      	add	r3, r1
 800169c:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80016a0:	e00a      	b.n	80016b8 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80016a2:	683b      	ldr	r3, [r7, #0]
 80016a4:	b2da      	uxtb	r2, r3
 80016a6:	4908      	ldr	r1, [pc, #32]	@ (80016c8 <__NVIC_SetPriority+0x50>)
 80016a8:	79fb      	ldrb	r3, [r7, #7]
 80016aa:	f003 030f 	and.w	r3, r3, #15
 80016ae:	3b04      	subs	r3, #4
 80016b0:	0112      	lsls	r2, r2, #4
 80016b2:	b2d2      	uxtb	r2, r2
 80016b4:	440b      	add	r3, r1
 80016b6:	761a      	strb	r2, [r3, #24]
}
 80016b8:	bf00      	nop
 80016ba:	370c      	adds	r7, #12
 80016bc:	46bd      	mov	sp, r7
 80016be:	bc80      	pop	{r7}
 80016c0:	4770      	bx	lr
 80016c2:	bf00      	nop
 80016c4:	e000e100 	.word	0xe000e100
 80016c8:	e000ed00 	.word	0xe000ed00

080016cc <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80016cc:	b480      	push	{r7}
 80016ce:	b089      	sub	sp, #36	@ 0x24
 80016d0:	af00      	add	r7, sp, #0
 80016d2:	60f8      	str	r0, [r7, #12]
 80016d4:	60b9      	str	r1, [r7, #8]
 80016d6:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80016d8:	68fb      	ldr	r3, [r7, #12]
 80016da:	f003 0307 	and.w	r3, r3, #7
 80016de:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80016e0:	69fb      	ldr	r3, [r7, #28]
 80016e2:	f1c3 0307 	rsb	r3, r3, #7
 80016e6:	2b04      	cmp	r3, #4
 80016e8:	bf28      	it	cs
 80016ea:	2304      	movcs	r3, #4
 80016ec:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80016ee:	69fb      	ldr	r3, [r7, #28]
 80016f0:	3304      	adds	r3, #4
 80016f2:	2b06      	cmp	r3, #6
 80016f4:	d902      	bls.n	80016fc <NVIC_EncodePriority+0x30>
 80016f6:	69fb      	ldr	r3, [r7, #28]
 80016f8:	3b03      	subs	r3, #3
 80016fa:	e000      	b.n	80016fe <NVIC_EncodePriority+0x32>
 80016fc:	2300      	movs	r3, #0
 80016fe:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001700:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8001704:	69bb      	ldr	r3, [r7, #24]
 8001706:	fa02 f303 	lsl.w	r3, r2, r3
 800170a:	43da      	mvns	r2, r3
 800170c:	68bb      	ldr	r3, [r7, #8]
 800170e:	401a      	ands	r2, r3
 8001710:	697b      	ldr	r3, [r7, #20]
 8001712:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001714:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8001718:	697b      	ldr	r3, [r7, #20]
 800171a:	fa01 f303 	lsl.w	r3, r1, r3
 800171e:	43d9      	mvns	r1, r3
 8001720:	687b      	ldr	r3, [r7, #4]
 8001722:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001724:	4313      	orrs	r3, r2
         );
}
 8001726:	4618      	mov	r0, r3
 8001728:	3724      	adds	r7, #36	@ 0x24
 800172a:	46bd      	mov	sp, r7
 800172c:	bc80      	pop	{r7}
 800172e:	4770      	bx	lr

08001730 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8001730:	b580      	push	{r7, lr}
 8001732:	b082      	sub	sp, #8
 8001734:	af00      	add	r7, sp, #0
 8001736:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001738:	687b      	ldr	r3, [r7, #4]
 800173a:	3b01      	subs	r3, #1
 800173c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8001740:	d301      	bcc.n	8001746 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8001742:	2301      	movs	r3, #1
 8001744:	e00f      	b.n	8001766 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001746:	4a0a      	ldr	r2, [pc, #40]	@ (8001770 <SysTick_Config+0x40>)
 8001748:	687b      	ldr	r3, [r7, #4]
 800174a:	3b01      	subs	r3, #1
 800174c:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800174e:	210f      	movs	r1, #15
 8001750:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001754:	f7ff ff90 	bl	8001678 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001758:	4b05      	ldr	r3, [pc, #20]	@ (8001770 <SysTick_Config+0x40>)
 800175a:	2200      	movs	r2, #0
 800175c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800175e:	4b04      	ldr	r3, [pc, #16]	@ (8001770 <SysTick_Config+0x40>)
 8001760:	2207      	movs	r2, #7
 8001762:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8001764:	2300      	movs	r3, #0
}
 8001766:	4618      	mov	r0, r3
 8001768:	3708      	adds	r7, #8
 800176a:	46bd      	mov	sp, r7
 800176c:	bd80      	pop	{r7, pc}
 800176e:	bf00      	nop
 8001770:	e000e010 	.word	0xe000e010

08001774 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001774:	b580      	push	{r7, lr}
 8001776:	b082      	sub	sp, #8
 8001778:	af00      	add	r7, sp, #0
 800177a:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 800177c:	6878      	ldr	r0, [r7, #4]
 800177e:	f7ff ff49 	bl	8001614 <__NVIC_SetPriorityGrouping>
}
 8001782:	bf00      	nop
 8001784:	3708      	adds	r7, #8
 8001786:	46bd      	mov	sp, r7
 8001788:	bd80      	pop	{r7, pc}

0800178a <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800178a:	b580      	push	{r7, lr}
 800178c:	b086      	sub	sp, #24
 800178e:	af00      	add	r7, sp, #0
 8001790:	4603      	mov	r3, r0
 8001792:	60b9      	str	r1, [r7, #8]
 8001794:	607a      	str	r2, [r7, #4]
 8001796:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8001798:	2300      	movs	r3, #0
 800179a:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 800179c:	f7ff ff5e 	bl	800165c <__NVIC_GetPriorityGrouping>
 80017a0:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 80017a2:	687a      	ldr	r2, [r7, #4]
 80017a4:	68b9      	ldr	r1, [r7, #8]
 80017a6:	6978      	ldr	r0, [r7, #20]
 80017a8:	f7ff ff90 	bl	80016cc <NVIC_EncodePriority>
 80017ac:	4602      	mov	r2, r0
 80017ae:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80017b2:	4611      	mov	r1, r2
 80017b4:	4618      	mov	r0, r3
 80017b6:	f7ff ff5f 	bl	8001678 <__NVIC_SetPriority>
}
 80017ba:	bf00      	nop
 80017bc:	3718      	adds	r7, #24
 80017be:	46bd      	mov	sp, r7
 80017c0:	bd80      	pop	{r7, pc}

080017c2 <HAL_SYSTICK_Config>:
  * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80017c2:	b580      	push	{r7, lr}
 80017c4:	b082      	sub	sp, #8
 80017c6:	af00      	add	r7, sp, #0
 80017c8:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80017ca:	6878      	ldr	r0, [r7, #4]
 80017cc:	f7ff ffb0 	bl	8001730 <SysTick_Config>
 80017d0:	4603      	mov	r3, r0
}
 80017d2:	4618      	mov	r0, r3
 80017d4:	3708      	adds	r7, #8
 80017d6:	46bd      	mov	sp, r7
 80017d8:	bd80      	pop	{r7, pc}
	...

080017dc <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80017dc:	b580      	push	{r7, lr}
 80017de:	b086      	sub	sp, #24
 80017e0:	af00      	add	r7, sp, #0
 80017e2:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 80017e4:	687b      	ldr	r3, [r7, #4]
 80017e6:	2b00      	cmp	r3, #0
 80017e8:	d101      	bne.n	80017ee <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 80017ea:	2301      	movs	r3, #1
 80017ec:	e272      	b.n	8001cd4 <HAL_RCC_OscConfig+0x4f8>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80017ee:	687b      	ldr	r3, [r7, #4]
 80017f0:	681b      	ldr	r3, [r3, #0]
 80017f2:	f003 0301 	and.w	r3, r3, #1
 80017f6:	2b00      	cmp	r3, #0
 80017f8:	f000 8087 	beq.w	800190a <HAL_RCC_OscConfig+0x12e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 80017fc:	4b92      	ldr	r3, [pc, #584]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 80017fe:	685b      	ldr	r3, [r3, #4]
 8001800:	f003 030c 	and.w	r3, r3, #12
 8001804:	2b04      	cmp	r3, #4
 8001806:	d00c      	beq.n	8001822 <HAL_RCC_OscConfig+0x46>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 8001808:	4b8f      	ldr	r3, [pc, #572]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 800180a:	685b      	ldr	r3, [r3, #4]
 800180c:	f003 030c 	and.w	r3, r3, #12
 8001810:	2b08      	cmp	r3, #8
 8001812:	d112      	bne.n	800183a <HAL_RCC_OscConfig+0x5e>
 8001814:	4b8c      	ldr	r3, [pc, #560]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 8001816:	685b      	ldr	r3, [r3, #4]
 8001818:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800181c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001820:	d10b      	bne.n	800183a <HAL_RCC_OscConfig+0x5e>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8001822:	4b89      	ldr	r3, [pc, #548]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 8001824:	681b      	ldr	r3, [r3, #0]
 8001826:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800182a:	2b00      	cmp	r3, #0
 800182c:	d06c      	beq.n	8001908 <HAL_RCC_OscConfig+0x12c>
 800182e:	687b      	ldr	r3, [r7, #4]
 8001830:	685b      	ldr	r3, [r3, #4]
 8001832:	2b00      	cmp	r3, #0
 8001834:	d168      	bne.n	8001908 <HAL_RCC_OscConfig+0x12c>
      {
        return HAL_ERROR;
 8001836:	2301      	movs	r3, #1
 8001838:	e24c      	b.n	8001cd4 <HAL_RCC_OscConfig+0x4f8>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800183a:	687b      	ldr	r3, [r7, #4]
 800183c:	685b      	ldr	r3, [r3, #4]
 800183e:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001842:	d106      	bne.n	8001852 <HAL_RCC_OscConfig+0x76>
 8001844:	4b80      	ldr	r3, [pc, #512]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 8001846:	681b      	ldr	r3, [r3, #0]
 8001848:	4a7f      	ldr	r2, [pc, #508]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 800184a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800184e:	6013      	str	r3, [r2, #0]
 8001850:	e02e      	b.n	80018b0 <HAL_RCC_OscConfig+0xd4>
 8001852:	687b      	ldr	r3, [r7, #4]
 8001854:	685b      	ldr	r3, [r3, #4]
 8001856:	2b00      	cmp	r3, #0
 8001858:	d10c      	bne.n	8001874 <HAL_RCC_OscConfig+0x98>
 800185a:	4b7b      	ldr	r3, [pc, #492]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 800185c:	681b      	ldr	r3, [r3, #0]
 800185e:	4a7a      	ldr	r2, [pc, #488]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 8001860:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001864:	6013      	str	r3, [r2, #0]
 8001866:	4b78      	ldr	r3, [pc, #480]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 8001868:	681b      	ldr	r3, [r3, #0]
 800186a:	4a77      	ldr	r2, [pc, #476]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 800186c:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001870:	6013      	str	r3, [r2, #0]
 8001872:	e01d      	b.n	80018b0 <HAL_RCC_OscConfig+0xd4>
 8001874:	687b      	ldr	r3, [r7, #4]
 8001876:	685b      	ldr	r3, [r3, #4]
 8001878:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800187c:	d10c      	bne.n	8001898 <HAL_RCC_OscConfig+0xbc>
 800187e:	4b72      	ldr	r3, [pc, #456]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 8001880:	681b      	ldr	r3, [r3, #0]
 8001882:	4a71      	ldr	r2, [pc, #452]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 8001884:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001888:	6013      	str	r3, [r2, #0]
 800188a:	4b6f      	ldr	r3, [pc, #444]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 800188c:	681b      	ldr	r3, [r3, #0]
 800188e:	4a6e      	ldr	r2, [pc, #440]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 8001890:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001894:	6013      	str	r3, [r2, #0]
 8001896:	e00b      	b.n	80018b0 <HAL_RCC_OscConfig+0xd4>
 8001898:	4b6b      	ldr	r3, [pc, #428]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 800189a:	681b      	ldr	r3, [r3, #0]
 800189c:	4a6a      	ldr	r2, [pc, #424]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 800189e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80018a2:	6013      	str	r3, [r2, #0]
 80018a4:	4b68      	ldr	r3, [pc, #416]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 80018a6:	681b      	ldr	r3, [r3, #0]
 80018a8:	4a67      	ldr	r2, [pc, #412]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 80018aa:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80018ae:	6013      	str	r3, [r2, #0]


      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 80018b0:	687b      	ldr	r3, [r7, #4]
 80018b2:	685b      	ldr	r3, [r3, #4]
 80018b4:	2b00      	cmp	r3, #0
 80018b6:	d013      	beq.n	80018e0 <HAL_RCC_OscConfig+0x104>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80018b8:	f7ff fea2 	bl	8001600 <HAL_GetTick>
 80018bc:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80018be:	e008      	b.n	80018d2 <HAL_RCC_OscConfig+0xf6>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80018c0:	f7ff fe9e 	bl	8001600 <HAL_GetTick>
 80018c4:	4602      	mov	r2, r0
 80018c6:	693b      	ldr	r3, [r7, #16]
 80018c8:	1ad3      	subs	r3, r2, r3
 80018ca:	2b64      	cmp	r3, #100	@ 0x64
 80018cc:	d901      	bls.n	80018d2 <HAL_RCC_OscConfig+0xf6>
          {
            return HAL_TIMEOUT;
 80018ce:	2303      	movs	r3, #3
 80018d0:	e200      	b.n	8001cd4 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80018d2:	4b5d      	ldr	r3, [pc, #372]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 80018d4:	681b      	ldr	r3, [r3, #0]
 80018d6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80018da:	2b00      	cmp	r3, #0
 80018dc:	d0f0      	beq.n	80018c0 <HAL_RCC_OscConfig+0xe4>
 80018de:	e014      	b.n	800190a <HAL_RCC_OscConfig+0x12e>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80018e0:	f7ff fe8e 	bl	8001600 <HAL_GetTick>
 80018e4:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80018e6:	e008      	b.n	80018fa <HAL_RCC_OscConfig+0x11e>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80018e8:	f7ff fe8a 	bl	8001600 <HAL_GetTick>
 80018ec:	4602      	mov	r2, r0
 80018ee:	693b      	ldr	r3, [r7, #16]
 80018f0:	1ad3      	subs	r3, r2, r3
 80018f2:	2b64      	cmp	r3, #100	@ 0x64
 80018f4:	d901      	bls.n	80018fa <HAL_RCC_OscConfig+0x11e>
          {
            return HAL_TIMEOUT;
 80018f6:	2303      	movs	r3, #3
 80018f8:	e1ec      	b.n	8001cd4 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80018fa:	4b53      	ldr	r3, [pc, #332]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 80018fc:	681b      	ldr	r3, [r3, #0]
 80018fe:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001902:	2b00      	cmp	r3, #0
 8001904:	d1f0      	bne.n	80018e8 <HAL_RCC_OscConfig+0x10c>
 8001906:	e000      	b.n	800190a <HAL_RCC_OscConfig+0x12e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8001908:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800190a:	687b      	ldr	r3, [r7, #4]
 800190c:	681b      	ldr	r3, [r3, #0]
 800190e:	f003 0302 	and.w	r3, r3, #2
 8001912:	2b00      	cmp	r3, #0
 8001914:	d063      	beq.n	80019de <HAL_RCC_OscConfig+0x202>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8001916:	4b4c      	ldr	r3, [pc, #304]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 8001918:	685b      	ldr	r3, [r3, #4]
 800191a:	f003 030c 	and.w	r3, r3, #12
 800191e:	2b00      	cmp	r3, #0
 8001920:	d00b      	beq.n	800193a <HAL_RCC_OscConfig+0x15e>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI_DIV2)))
 8001922:	4b49      	ldr	r3, [pc, #292]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 8001924:	685b      	ldr	r3, [r3, #4]
 8001926:	f003 030c 	and.w	r3, r3, #12
 800192a:	2b08      	cmp	r3, #8
 800192c:	d11c      	bne.n	8001968 <HAL_RCC_OscConfig+0x18c>
 800192e:	4b46      	ldr	r3, [pc, #280]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 8001930:	685b      	ldr	r3, [r3, #4]
 8001932:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001936:	2b00      	cmp	r3, #0
 8001938:	d116      	bne.n	8001968 <HAL_RCC_OscConfig+0x18c>
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800193a:	4b43      	ldr	r3, [pc, #268]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 800193c:	681b      	ldr	r3, [r3, #0]
 800193e:	f003 0302 	and.w	r3, r3, #2
 8001942:	2b00      	cmp	r3, #0
 8001944:	d005      	beq.n	8001952 <HAL_RCC_OscConfig+0x176>
 8001946:	687b      	ldr	r3, [r7, #4]
 8001948:	691b      	ldr	r3, [r3, #16]
 800194a:	2b01      	cmp	r3, #1
 800194c:	d001      	beq.n	8001952 <HAL_RCC_OscConfig+0x176>
      {
        return HAL_ERROR;
 800194e:	2301      	movs	r3, #1
 8001950:	e1c0      	b.n	8001cd4 <HAL_RCC_OscConfig+0x4f8>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001952:	4b3d      	ldr	r3, [pc, #244]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 8001954:	681b      	ldr	r3, [r3, #0]
 8001956:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800195a:	687b      	ldr	r3, [r7, #4]
 800195c:	695b      	ldr	r3, [r3, #20]
 800195e:	00db      	lsls	r3, r3, #3
 8001960:	4939      	ldr	r1, [pc, #228]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 8001962:	4313      	orrs	r3, r2
 8001964:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8001966:	e03a      	b.n	80019de <HAL_RCC_OscConfig+0x202>
      }
    }
    else
    {
      /* Check the HSI State */
      if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8001968:	687b      	ldr	r3, [r7, #4]
 800196a:	691b      	ldr	r3, [r3, #16]
 800196c:	2b00      	cmp	r3, #0
 800196e:	d020      	beq.n	80019b2 <HAL_RCC_OscConfig+0x1d6>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8001970:	4b36      	ldr	r3, [pc, #216]	@ (8001a4c <HAL_RCC_OscConfig+0x270>)
 8001972:	2201      	movs	r2, #1
 8001974:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001976:	f7ff fe43 	bl	8001600 <HAL_GetTick>
 800197a:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800197c:	e008      	b.n	8001990 <HAL_RCC_OscConfig+0x1b4>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800197e:	f7ff fe3f 	bl	8001600 <HAL_GetTick>
 8001982:	4602      	mov	r2, r0
 8001984:	693b      	ldr	r3, [r7, #16]
 8001986:	1ad3      	subs	r3, r2, r3
 8001988:	2b02      	cmp	r3, #2
 800198a:	d901      	bls.n	8001990 <HAL_RCC_OscConfig+0x1b4>
          {
            return HAL_TIMEOUT;
 800198c:	2303      	movs	r3, #3
 800198e:	e1a1      	b.n	8001cd4 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001990:	4b2d      	ldr	r3, [pc, #180]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 8001992:	681b      	ldr	r3, [r3, #0]
 8001994:	f003 0302 	and.w	r3, r3, #2
 8001998:	2b00      	cmp	r3, #0
 800199a:	d0f0      	beq.n	800197e <HAL_RCC_OscConfig+0x1a2>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800199c:	4b2a      	ldr	r3, [pc, #168]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 800199e:	681b      	ldr	r3, [r3, #0]
 80019a0:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80019a4:	687b      	ldr	r3, [r7, #4]
 80019a6:	695b      	ldr	r3, [r3, #20]
 80019a8:	00db      	lsls	r3, r3, #3
 80019aa:	4927      	ldr	r1, [pc, #156]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 80019ac:	4313      	orrs	r3, r2
 80019ae:	600b      	str	r3, [r1, #0]
 80019b0:	e015      	b.n	80019de <HAL_RCC_OscConfig+0x202>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80019b2:	4b26      	ldr	r3, [pc, #152]	@ (8001a4c <HAL_RCC_OscConfig+0x270>)
 80019b4:	2200      	movs	r2, #0
 80019b6:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80019b8:	f7ff fe22 	bl	8001600 <HAL_GetTick>
 80019bc:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80019be:	e008      	b.n	80019d2 <HAL_RCC_OscConfig+0x1f6>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80019c0:	f7ff fe1e 	bl	8001600 <HAL_GetTick>
 80019c4:	4602      	mov	r2, r0
 80019c6:	693b      	ldr	r3, [r7, #16]
 80019c8:	1ad3      	subs	r3, r2, r3
 80019ca:	2b02      	cmp	r3, #2
 80019cc:	d901      	bls.n	80019d2 <HAL_RCC_OscConfig+0x1f6>
          {
            return HAL_TIMEOUT;
 80019ce:	2303      	movs	r3, #3
 80019d0:	e180      	b.n	8001cd4 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80019d2:	4b1d      	ldr	r3, [pc, #116]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 80019d4:	681b      	ldr	r3, [r3, #0]
 80019d6:	f003 0302 	and.w	r3, r3, #2
 80019da:	2b00      	cmp	r3, #0
 80019dc:	d1f0      	bne.n	80019c0 <HAL_RCC_OscConfig+0x1e4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80019de:	687b      	ldr	r3, [r7, #4]
 80019e0:	681b      	ldr	r3, [r3, #0]
 80019e2:	f003 0308 	and.w	r3, r3, #8
 80019e6:	2b00      	cmp	r3, #0
 80019e8:	d03a      	beq.n	8001a60 <HAL_RCC_OscConfig+0x284>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if (RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 80019ea:	687b      	ldr	r3, [r7, #4]
 80019ec:	699b      	ldr	r3, [r3, #24]
 80019ee:	2b00      	cmp	r3, #0
 80019f0:	d019      	beq.n	8001a26 <HAL_RCC_OscConfig+0x24a>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80019f2:	4b17      	ldr	r3, [pc, #92]	@ (8001a50 <HAL_RCC_OscConfig+0x274>)
 80019f4:	2201      	movs	r2, #1
 80019f6:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80019f8:	f7ff fe02 	bl	8001600 <HAL_GetTick>
 80019fc:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80019fe:	e008      	b.n	8001a12 <HAL_RCC_OscConfig+0x236>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8001a00:	f7ff fdfe 	bl	8001600 <HAL_GetTick>
 8001a04:	4602      	mov	r2, r0
 8001a06:	693b      	ldr	r3, [r7, #16]
 8001a08:	1ad3      	subs	r3, r2, r3
 8001a0a:	2b02      	cmp	r3, #2
 8001a0c:	d901      	bls.n	8001a12 <HAL_RCC_OscConfig+0x236>
        {
          return HAL_TIMEOUT;
 8001a0e:	2303      	movs	r3, #3
 8001a10:	e160      	b.n	8001cd4 <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8001a12:	4b0d      	ldr	r3, [pc, #52]	@ (8001a48 <HAL_RCC_OscConfig+0x26c>)
 8001a14:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001a16:	f003 0302 	and.w	r3, r3, #2
 8001a1a:	2b00      	cmp	r3, #0
 8001a1c:	d0f0      	beq.n	8001a00 <HAL_RCC_OscConfig+0x224>
        }
      }
      /*  To have a fully stabilized clock in the specified range, a software delay of 1ms
          should be added.*/
      RCC_Delay(1);
 8001a1e:	2001      	movs	r0, #1
 8001a20:	f000 fa9c 	bl	8001f5c <RCC_Delay>
 8001a24:	e01c      	b.n	8001a60 <HAL_RCC_OscConfig+0x284>
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8001a26:	4b0a      	ldr	r3, [pc, #40]	@ (8001a50 <HAL_RCC_OscConfig+0x274>)
 8001a28:	2200      	movs	r2, #0
 8001a2a:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001a2c:	f7ff fde8 	bl	8001600 <HAL_GetTick>
 8001a30:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8001a32:	e00f      	b.n	8001a54 <HAL_RCC_OscConfig+0x278>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8001a34:	f7ff fde4 	bl	8001600 <HAL_GetTick>
 8001a38:	4602      	mov	r2, r0
 8001a3a:	693b      	ldr	r3, [r7, #16]
 8001a3c:	1ad3      	subs	r3, r2, r3
 8001a3e:	2b02      	cmp	r3, #2
 8001a40:	d908      	bls.n	8001a54 <HAL_RCC_OscConfig+0x278>
        {
          return HAL_TIMEOUT;
 8001a42:	2303      	movs	r3, #3
 8001a44:	e146      	b.n	8001cd4 <HAL_RCC_OscConfig+0x4f8>
 8001a46:	bf00      	nop
 8001a48:	40021000 	.word	0x40021000
 8001a4c:	42420000 	.word	0x42420000
 8001a50:	42420480 	.word	0x42420480
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8001a54:	4b92      	ldr	r3, [pc, #584]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001a56:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001a58:	f003 0302 	and.w	r3, r3, #2
 8001a5c:	2b00      	cmp	r3, #0
 8001a5e:	d1e9      	bne.n	8001a34 <HAL_RCC_OscConfig+0x258>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8001a60:	687b      	ldr	r3, [r7, #4]
 8001a62:	681b      	ldr	r3, [r3, #0]
 8001a64:	f003 0304 	and.w	r3, r3, #4
 8001a68:	2b00      	cmp	r3, #0
 8001a6a:	f000 80a6 	beq.w	8001bba <HAL_RCC_OscConfig+0x3de>
  {
    FlagStatus       pwrclkchanged = RESET;
 8001a6e:	2300      	movs	r3, #0
 8001a70:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8001a72:	4b8b      	ldr	r3, [pc, #556]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001a74:	69db      	ldr	r3, [r3, #28]
 8001a76:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001a7a:	2b00      	cmp	r3, #0
 8001a7c:	d10d      	bne.n	8001a9a <HAL_RCC_OscConfig+0x2be>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8001a7e:	4b88      	ldr	r3, [pc, #544]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001a80:	69db      	ldr	r3, [r3, #28]
 8001a82:	4a87      	ldr	r2, [pc, #540]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001a84:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001a88:	61d3      	str	r3, [r2, #28]
 8001a8a:	4b85      	ldr	r3, [pc, #532]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001a8c:	69db      	ldr	r3, [r3, #28]
 8001a8e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001a92:	60bb      	str	r3, [r7, #8]
 8001a94:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8001a96:	2301      	movs	r3, #1
 8001a98:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8001a9a:	4b82      	ldr	r3, [pc, #520]	@ (8001ca4 <HAL_RCC_OscConfig+0x4c8>)
 8001a9c:	681b      	ldr	r3, [r3, #0]
 8001a9e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001aa2:	2b00      	cmp	r3, #0
 8001aa4:	d118      	bne.n	8001ad8 <HAL_RCC_OscConfig+0x2fc>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8001aa6:	4b7f      	ldr	r3, [pc, #508]	@ (8001ca4 <HAL_RCC_OscConfig+0x4c8>)
 8001aa8:	681b      	ldr	r3, [r3, #0]
 8001aaa:	4a7e      	ldr	r2, [pc, #504]	@ (8001ca4 <HAL_RCC_OscConfig+0x4c8>)
 8001aac:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001ab0:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8001ab2:	f7ff fda5 	bl	8001600 <HAL_GetTick>
 8001ab6:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8001ab8:	e008      	b.n	8001acc <HAL_RCC_OscConfig+0x2f0>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8001aba:	f7ff fda1 	bl	8001600 <HAL_GetTick>
 8001abe:	4602      	mov	r2, r0
 8001ac0:	693b      	ldr	r3, [r7, #16]
 8001ac2:	1ad3      	subs	r3, r2, r3
 8001ac4:	2b64      	cmp	r3, #100	@ 0x64
 8001ac6:	d901      	bls.n	8001acc <HAL_RCC_OscConfig+0x2f0>
        {
          return HAL_TIMEOUT;
 8001ac8:	2303      	movs	r3, #3
 8001aca:	e103      	b.n	8001cd4 <HAL_RCC_OscConfig+0x4f8>
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8001acc:	4b75      	ldr	r3, [pc, #468]	@ (8001ca4 <HAL_RCC_OscConfig+0x4c8>)
 8001ace:	681b      	ldr	r3, [r3, #0]
 8001ad0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001ad4:	2b00      	cmp	r3, #0
 8001ad6:	d0f0      	beq.n	8001aba <HAL_RCC_OscConfig+0x2de>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001ad8:	687b      	ldr	r3, [r7, #4]
 8001ada:	68db      	ldr	r3, [r3, #12]
 8001adc:	2b01      	cmp	r3, #1
 8001ade:	d106      	bne.n	8001aee <HAL_RCC_OscConfig+0x312>
 8001ae0:	4b6f      	ldr	r3, [pc, #444]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001ae2:	6a1b      	ldr	r3, [r3, #32]
 8001ae4:	4a6e      	ldr	r2, [pc, #440]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001ae6:	f043 0301 	orr.w	r3, r3, #1
 8001aea:	6213      	str	r3, [r2, #32]
 8001aec:	e02d      	b.n	8001b4a <HAL_RCC_OscConfig+0x36e>
 8001aee:	687b      	ldr	r3, [r7, #4]
 8001af0:	68db      	ldr	r3, [r3, #12]
 8001af2:	2b00      	cmp	r3, #0
 8001af4:	d10c      	bne.n	8001b10 <HAL_RCC_OscConfig+0x334>
 8001af6:	4b6a      	ldr	r3, [pc, #424]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001af8:	6a1b      	ldr	r3, [r3, #32]
 8001afa:	4a69      	ldr	r2, [pc, #420]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001afc:	f023 0301 	bic.w	r3, r3, #1
 8001b00:	6213      	str	r3, [r2, #32]
 8001b02:	4b67      	ldr	r3, [pc, #412]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001b04:	6a1b      	ldr	r3, [r3, #32]
 8001b06:	4a66      	ldr	r2, [pc, #408]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001b08:	f023 0304 	bic.w	r3, r3, #4
 8001b0c:	6213      	str	r3, [r2, #32]
 8001b0e:	e01c      	b.n	8001b4a <HAL_RCC_OscConfig+0x36e>
 8001b10:	687b      	ldr	r3, [r7, #4]
 8001b12:	68db      	ldr	r3, [r3, #12]
 8001b14:	2b05      	cmp	r3, #5
 8001b16:	d10c      	bne.n	8001b32 <HAL_RCC_OscConfig+0x356>
 8001b18:	4b61      	ldr	r3, [pc, #388]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001b1a:	6a1b      	ldr	r3, [r3, #32]
 8001b1c:	4a60      	ldr	r2, [pc, #384]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001b1e:	f043 0304 	orr.w	r3, r3, #4
 8001b22:	6213      	str	r3, [r2, #32]
 8001b24:	4b5e      	ldr	r3, [pc, #376]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001b26:	6a1b      	ldr	r3, [r3, #32]
 8001b28:	4a5d      	ldr	r2, [pc, #372]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001b2a:	f043 0301 	orr.w	r3, r3, #1
 8001b2e:	6213      	str	r3, [r2, #32]
 8001b30:	e00b      	b.n	8001b4a <HAL_RCC_OscConfig+0x36e>
 8001b32:	4b5b      	ldr	r3, [pc, #364]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001b34:	6a1b      	ldr	r3, [r3, #32]
 8001b36:	4a5a      	ldr	r2, [pc, #360]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001b38:	f023 0301 	bic.w	r3, r3, #1
 8001b3c:	6213      	str	r3, [r2, #32]
 8001b3e:	4b58      	ldr	r3, [pc, #352]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001b40:	6a1b      	ldr	r3, [r3, #32]
 8001b42:	4a57      	ldr	r2, [pc, #348]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001b44:	f023 0304 	bic.w	r3, r3, #4
 8001b48:	6213      	str	r3, [r2, #32]
    /* Check the LSE State */
    if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8001b4a:	687b      	ldr	r3, [r7, #4]
 8001b4c:	68db      	ldr	r3, [r3, #12]
 8001b4e:	2b00      	cmp	r3, #0
 8001b50:	d015      	beq.n	8001b7e <HAL_RCC_OscConfig+0x3a2>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001b52:	f7ff fd55 	bl	8001600 <HAL_GetTick>
 8001b56:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001b58:	e00a      	b.n	8001b70 <HAL_RCC_OscConfig+0x394>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001b5a:	f7ff fd51 	bl	8001600 <HAL_GetTick>
 8001b5e:	4602      	mov	r2, r0
 8001b60:	693b      	ldr	r3, [r7, #16]
 8001b62:	1ad3      	subs	r3, r2, r3
 8001b64:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001b68:	4293      	cmp	r3, r2
 8001b6a:	d901      	bls.n	8001b70 <HAL_RCC_OscConfig+0x394>
        {
          return HAL_TIMEOUT;
 8001b6c:	2303      	movs	r3, #3
 8001b6e:	e0b1      	b.n	8001cd4 <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001b70:	4b4b      	ldr	r3, [pc, #300]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001b72:	6a1b      	ldr	r3, [r3, #32]
 8001b74:	f003 0302 	and.w	r3, r3, #2
 8001b78:	2b00      	cmp	r3, #0
 8001b7a:	d0ee      	beq.n	8001b5a <HAL_RCC_OscConfig+0x37e>
 8001b7c:	e014      	b.n	8001ba8 <HAL_RCC_OscConfig+0x3cc>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001b7e:	f7ff fd3f 	bl	8001600 <HAL_GetTick>
 8001b82:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001b84:	e00a      	b.n	8001b9c <HAL_RCC_OscConfig+0x3c0>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001b86:	f7ff fd3b 	bl	8001600 <HAL_GetTick>
 8001b8a:	4602      	mov	r2, r0
 8001b8c:	693b      	ldr	r3, [r7, #16]
 8001b8e:	1ad3      	subs	r3, r2, r3
 8001b90:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001b94:	4293      	cmp	r3, r2
 8001b96:	d901      	bls.n	8001b9c <HAL_RCC_OscConfig+0x3c0>
        {
          return HAL_TIMEOUT;
 8001b98:	2303      	movs	r3, #3
 8001b9a:	e09b      	b.n	8001cd4 <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001b9c:	4b40      	ldr	r3, [pc, #256]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001b9e:	6a1b      	ldr	r3, [r3, #32]
 8001ba0:	f003 0302 	and.w	r3, r3, #2
 8001ba4:	2b00      	cmp	r3, #0
 8001ba6:	d1ee      	bne.n	8001b86 <HAL_RCC_OscConfig+0x3aa>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if (pwrclkchanged == SET)
 8001ba8:	7dfb      	ldrb	r3, [r7, #23]
 8001baa:	2b01      	cmp	r3, #1
 8001bac:	d105      	bne.n	8001bba <HAL_RCC_OscConfig+0x3de>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8001bae:	4b3c      	ldr	r3, [pc, #240]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001bb0:	69db      	ldr	r3, [r3, #28]
 8001bb2:	4a3b      	ldr	r2, [pc, #236]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001bb4:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8001bb8:	61d3      	str	r3, [r2, #28]

#endif /* RCC_CR_PLL2ON */
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8001bba:	687b      	ldr	r3, [r7, #4]
 8001bbc:	69db      	ldr	r3, [r3, #28]
 8001bbe:	2b00      	cmp	r3, #0
 8001bc0:	f000 8087 	beq.w	8001cd2 <HAL_RCC_OscConfig+0x4f6>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8001bc4:	4b36      	ldr	r3, [pc, #216]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001bc6:	685b      	ldr	r3, [r3, #4]
 8001bc8:	f003 030c 	and.w	r3, r3, #12
 8001bcc:	2b08      	cmp	r3, #8
 8001bce:	d061      	beq.n	8001c94 <HAL_RCC_OscConfig+0x4b8>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8001bd0:	687b      	ldr	r3, [r7, #4]
 8001bd2:	69db      	ldr	r3, [r3, #28]
 8001bd4:	2b02      	cmp	r3, #2
 8001bd6:	d146      	bne.n	8001c66 <HAL_RCC_OscConfig+0x48a>
        /* Check the parameters */
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8001bd8:	4b33      	ldr	r3, [pc, #204]	@ (8001ca8 <HAL_RCC_OscConfig+0x4cc>)
 8001bda:	2200      	movs	r2, #0
 8001bdc:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001bde:	f7ff fd0f 	bl	8001600 <HAL_GetTick>
 8001be2:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8001be4:	e008      	b.n	8001bf8 <HAL_RCC_OscConfig+0x41c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001be6:	f7ff fd0b 	bl	8001600 <HAL_GetTick>
 8001bea:	4602      	mov	r2, r0
 8001bec:	693b      	ldr	r3, [r7, #16]
 8001bee:	1ad3      	subs	r3, r2, r3
 8001bf0:	2b02      	cmp	r3, #2
 8001bf2:	d901      	bls.n	8001bf8 <HAL_RCC_OscConfig+0x41c>
          {
            return HAL_TIMEOUT;
 8001bf4:	2303      	movs	r3, #3
 8001bf6:	e06d      	b.n	8001cd4 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8001bf8:	4b29      	ldr	r3, [pc, #164]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001bfa:	681b      	ldr	r3, [r3, #0]
 8001bfc:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001c00:	2b00      	cmp	r3, #0
 8001c02:	d1f0      	bne.n	8001be6 <HAL_RCC_OscConfig+0x40a>
          }
        }

        /* Configure the HSE prediv factor --------------------------------*/
        /* It can be written only when the PLL is disabled. Not used in PLL source is different than HSE */
        if (RCC_OscInitStruct->PLL.PLLSource == RCC_PLLSOURCE_HSE)
 8001c04:	687b      	ldr	r3, [r7, #4]
 8001c06:	6a1b      	ldr	r3, [r3, #32]
 8001c08:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001c0c:	d108      	bne.n	8001c20 <HAL_RCC_OscConfig+0x444>
          /* Set PREDIV1 source */
          SET_BIT(RCC->CFGR2, RCC_OscInitStruct->Prediv1Source);
#endif /* RCC_CFGR2_PREDIV1SRC */

          /* Set PREDIV1 Value */
          __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 8001c0e:	4b24      	ldr	r3, [pc, #144]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001c10:	685b      	ldr	r3, [r3, #4]
 8001c12:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 8001c16:	687b      	ldr	r3, [r7, #4]
 8001c18:	689b      	ldr	r3, [r3, #8]
 8001c1a:	4921      	ldr	r1, [pc, #132]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001c1c:	4313      	orrs	r3, r2
 8001c1e:	604b      	str	r3, [r1, #4]
        }

        /* Configure the main PLL clock source and multiplication factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8001c20:	4b1f      	ldr	r3, [pc, #124]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001c22:	685b      	ldr	r3, [r3, #4]
 8001c24:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8001c28:	687b      	ldr	r3, [r7, #4]
 8001c2a:	6a19      	ldr	r1, [r3, #32]
 8001c2c:	687b      	ldr	r3, [r7, #4]
 8001c2e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001c30:	430b      	orrs	r3, r1
 8001c32:	491b      	ldr	r1, [pc, #108]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001c34:	4313      	orrs	r3, r2
 8001c36:	604b      	str	r3, [r1, #4]
                             RCC_OscInitStruct->PLL.PLLMUL);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8001c38:	4b1b      	ldr	r3, [pc, #108]	@ (8001ca8 <HAL_RCC_OscConfig+0x4cc>)
 8001c3a:	2201      	movs	r2, #1
 8001c3c:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001c3e:	f7ff fcdf 	bl	8001600 <HAL_GetTick>
 8001c42:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8001c44:	e008      	b.n	8001c58 <HAL_RCC_OscConfig+0x47c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001c46:	f7ff fcdb 	bl	8001600 <HAL_GetTick>
 8001c4a:	4602      	mov	r2, r0
 8001c4c:	693b      	ldr	r3, [r7, #16]
 8001c4e:	1ad3      	subs	r3, r2, r3
 8001c50:	2b02      	cmp	r3, #2
 8001c52:	d901      	bls.n	8001c58 <HAL_RCC_OscConfig+0x47c>
          {
            return HAL_TIMEOUT;
 8001c54:	2303      	movs	r3, #3
 8001c56:	e03d      	b.n	8001cd4 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8001c58:	4b11      	ldr	r3, [pc, #68]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001c5a:	681b      	ldr	r3, [r3, #0]
 8001c5c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001c60:	2b00      	cmp	r3, #0
 8001c62:	d0f0      	beq.n	8001c46 <HAL_RCC_OscConfig+0x46a>
 8001c64:	e035      	b.n	8001cd2 <HAL_RCC_OscConfig+0x4f6>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8001c66:	4b10      	ldr	r3, [pc, #64]	@ (8001ca8 <HAL_RCC_OscConfig+0x4cc>)
 8001c68:	2200      	movs	r2, #0
 8001c6a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001c6c:	f7ff fcc8 	bl	8001600 <HAL_GetTick>
 8001c70:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8001c72:	e008      	b.n	8001c86 <HAL_RCC_OscConfig+0x4aa>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001c74:	f7ff fcc4 	bl	8001600 <HAL_GetTick>
 8001c78:	4602      	mov	r2, r0
 8001c7a:	693b      	ldr	r3, [r7, #16]
 8001c7c:	1ad3      	subs	r3, r2, r3
 8001c7e:	2b02      	cmp	r3, #2
 8001c80:	d901      	bls.n	8001c86 <HAL_RCC_OscConfig+0x4aa>
          {
            return HAL_TIMEOUT;
 8001c82:	2303      	movs	r3, #3
 8001c84:	e026      	b.n	8001cd4 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8001c86:	4b06      	ldr	r3, [pc, #24]	@ (8001ca0 <HAL_RCC_OscConfig+0x4c4>)
 8001c88:	681b      	ldr	r3, [r3, #0]
 8001c8a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001c8e:	2b00      	cmp	r3, #0
 8001c90:	d1f0      	bne.n	8001c74 <HAL_RCC_OscConfig+0x498>
 8001c92:	e01e      	b.n	8001cd2 <HAL_RCC_OscConfig+0x4f6>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8001c94:	687b      	ldr	r3, [r7, #4]
 8001c96:	69db      	ldr	r3, [r3, #28]
 8001c98:	2b01      	cmp	r3, #1
 8001c9a:	d107      	bne.n	8001cac <HAL_RCC_OscConfig+0x4d0>
      {
        return HAL_ERROR;
 8001c9c:	2301      	movs	r3, #1
 8001c9e:	e019      	b.n	8001cd4 <HAL_RCC_OscConfig+0x4f8>
 8001ca0:	40021000 	.word	0x40021000
 8001ca4:	40007000 	.word	0x40007000
 8001ca8:	42420060 	.word	0x42420060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 8001cac:	4b0b      	ldr	r3, [pc, #44]	@ (8001cdc <HAL_RCC_OscConfig+0x500>)
 8001cae:	685b      	ldr	r3, [r3, #4]
 8001cb0:	60fb      	str	r3, [r7, #12]
        if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001cb2:	68fb      	ldr	r3, [r7, #12]
 8001cb4:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8001cb8:	687b      	ldr	r3, [r7, #4]
 8001cba:	6a1b      	ldr	r3, [r3, #32]
 8001cbc:	429a      	cmp	r2, r3
 8001cbe:	d106      	bne.n	8001cce <HAL_RCC_OscConfig+0x4f2>
            (READ_BIT(pll_config, RCC_CFGR_PLLMULL) != RCC_OscInitStruct->PLL.PLLMUL))
 8001cc0:	68fb      	ldr	r3, [r7, #12]
 8001cc2:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8001cc6:	687b      	ldr	r3, [r7, #4]
 8001cc8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
        if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001cca:	429a      	cmp	r2, r3
 8001ccc:	d001      	beq.n	8001cd2 <HAL_RCC_OscConfig+0x4f6>
        {
          return HAL_ERROR;
 8001cce:	2301      	movs	r3, #1
 8001cd0:	e000      	b.n	8001cd4 <HAL_RCC_OscConfig+0x4f8>
        }
      }
    }
  }

  return HAL_OK;
 8001cd2:	2300      	movs	r3, #0
}
 8001cd4:	4618      	mov	r0, r3
 8001cd6:	3718      	adds	r7, #24
 8001cd8:	46bd      	mov	sp, r7
 8001cda:	bd80      	pop	{r7, pc}
 8001cdc:	40021000 	.word	0x40021000

08001ce0 <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8001ce0:	b580      	push	{r7, lr}
 8001ce2:	b084      	sub	sp, #16
 8001ce4:	af00      	add	r7, sp, #0
 8001ce6:	6078      	str	r0, [r7, #4]
 8001ce8:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 8001cea:	687b      	ldr	r3, [r7, #4]
 8001cec:	2b00      	cmp	r3, #0
 8001cee:	d101      	bne.n	8001cf4 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8001cf0:	2301      	movs	r3, #1
 8001cf2:	e0d0      	b.n	8001e96 <HAL_RCC_ClockConfig+0x1b6>
  must be correctly programmed according to the frequency of the CPU clock
    (HCLK) of the device. */

#if defined(FLASH_ACR_LATENCY)
  /* Increasing the number of wait states because of higher CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8001cf4:	4b6a      	ldr	r3, [pc, #424]	@ (8001ea0 <HAL_RCC_ClockConfig+0x1c0>)
 8001cf6:	681b      	ldr	r3, [r3, #0]
 8001cf8:	f003 0307 	and.w	r3, r3, #7
 8001cfc:	683a      	ldr	r2, [r7, #0]
 8001cfe:	429a      	cmp	r2, r3
 8001d00:	d910      	bls.n	8001d24 <HAL_RCC_ClockConfig+0x44>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001d02:	4b67      	ldr	r3, [pc, #412]	@ (8001ea0 <HAL_RCC_ClockConfig+0x1c0>)
 8001d04:	681b      	ldr	r3, [r3, #0]
 8001d06:	f023 0207 	bic.w	r2, r3, #7
 8001d0a:	4965      	ldr	r1, [pc, #404]	@ (8001ea0 <HAL_RCC_ClockConfig+0x1c0>)
 8001d0c:	683b      	ldr	r3, [r7, #0]
 8001d0e:	4313      	orrs	r3, r2
 8001d10:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8001d12:	4b63      	ldr	r3, [pc, #396]	@ (8001ea0 <HAL_RCC_ClockConfig+0x1c0>)
 8001d14:	681b      	ldr	r3, [r3, #0]
 8001d16:	f003 0307 	and.w	r3, r3, #7
 8001d1a:	683a      	ldr	r2, [r7, #0]
 8001d1c:	429a      	cmp	r2, r3
 8001d1e:	d001      	beq.n	8001d24 <HAL_RCC_ClockConfig+0x44>
  {
    return HAL_ERROR;
 8001d20:	2301      	movs	r3, #1
 8001d22:	e0b8      	b.n	8001e96 <HAL_RCC_ClockConfig+0x1b6>
  }
}

#endif /* FLASH_ACR_LATENCY */
/*-------------------------- HCLK Configuration --------------------------*/
if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8001d24:	687b      	ldr	r3, [r7, #4]
 8001d26:	681b      	ldr	r3, [r3, #0]
 8001d28:	f003 0302 	and.w	r3, r3, #2
 8001d2c:	2b00      	cmp	r3, #0
 8001d2e:	d020      	beq.n	8001d72 <HAL_RCC_ClockConfig+0x92>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
    a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001d30:	687b      	ldr	r3, [r7, #4]
 8001d32:	681b      	ldr	r3, [r3, #0]
 8001d34:	f003 0304 	and.w	r3, r3, #4
 8001d38:	2b00      	cmp	r3, #0
 8001d3a:	d005      	beq.n	8001d48 <HAL_RCC_ClockConfig+0x68>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8001d3c:	4b59      	ldr	r3, [pc, #356]	@ (8001ea4 <HAL_RCC_ClockConfig+0x1c4>)
 8001d3e:	685b      	ldr	r3, [r3, #4]
 8001d40:	4a58      	ldr	r2, [pc, #352]	@ (8001ea4 <HAL_RCC_ClockConfig+0x1c4>)
 8001d42:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8001d46:	6053      	str	r3, [r2, #4]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8001d48:	687b      	ldr	r3, [r7, #4]
 8001d4a:	681b      	ldr	r3, [r3, #0]
 8001d4c:	f003 0308 	and.w	r3, r3, #8
 8001d50:	2b00      	cmp	r3, #0
 8001d52:	d005      	beq.n	8001d60 <HAL_RCC_ClockConfig+0x80>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8001d54:	4b53      	ldr	r3, [pc, #332]	@ (8001ea4 <HAL_RCC_ClockConfig+0x1c4>)
 8001d56:	685b      	ldr	r3, [r3, #4]
 8001d58:	4a52      	ldr	r2, [pc, #328]	@ (8001ea4 <HAL_RCC_ClockConfig+0x1c4>)
 8001d5a:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 8001d5e:	6053      	str	r3, [r2, #4]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8001d60:	4b50      	ldr	r3, [pc, #320]	@ (8001ea4 <HAL_RCC_ClockConfig+0x1c4>)
 8001d62:	685b      	ldr	r3, [r3, #4]
 8001d64:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8001d68:	687b      	ldr	r3, [r7, #4]
 8001d6a:	689b      	ldr	r3, [r3, #8]
 8001d6c:	494d      	ldr	r1, [pc, #308]	@ (8001ea4 <HAL_RCC_ClockConfig+0x1c4>)
 8001d6e:	4313      	orrs	r3, r2
 8001d70:	604b      	str	r3, [r1, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8001d72:	687b      	ldr	r3, [r7, #4]
 8001d74:	681b      	ldr	r3, [r3, #0]
 8001d76:	f003 0301 	and.w	r3, r3, #1
 8001d7a:	2b00      	cmp	r3, #0
 8001d7c:	d040      	beq.n	8001e00 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8001d7e:	687b      	ldr	r3, [r7, #4]
 8001d80:	685b      	ldr	r3, [r3, #4]
 8001d82:	2b01      	cmp	r3, #1
 8001d84:	d107      	bne.n	8001d96 <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001d86:	4b47      	ldr	r3, [pc, #284]	@ (8001ea4 <HAL_RCC_ClockConfig+0x1c4>)
 8001d88:	681b      	ldr	r3, [r3, #0]
 8001d8a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001d8e:	2b00      	cmp	r3, #0
 8001d90:	d115      	bne.n	8001dbe <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8001d92:	2301      	movs	r3, #1
 8001d94:	e07f      	b.n	8001e96 <HAL_RCC_ClockConfig+0x1b6>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8001d96:	687b      	ldr	r3, [r7, #4]
 8001d98:	685b      	ldr	r3, [r3, #4]
 8001d9a:	2b02      	cmp	r3, #2
 8001d9c:	d107      	bne.n	8001dae <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001d9e:	4b41      	ldr	r3, [pc, #260]	@ (8001ea4 <HAL_RCC_ClockConfig+0x1c4>)
 8001da0:	681b      	ldr	r3, [r3, #0]
 8001da2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001da6:	2b00      	cmp	r3, #0
 8001da8:	d109      	bne.n	8001dbe <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8001daa:	2301      	movs	r3, #1
 8001dac:	e073      	b.n	8001e96 <HAL_RCC_ClockConfig+0x1b6>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001dae:	4b3d      	ldr	r3, [pc, #244]	@ (8001ea4 <HAL_RCC_ClockConfig+0x1c4>)
 8001db0:	681b      	ldr	r3, [r3, #0]
 8001db2:	f003 0302 	and.w	r3, r3, #2
 8001db6:	2b00      	cmp	r3, #0
 8001db8:	d101      	bne.n	8001dbe <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8001dba:	2301      	movs	r3, #1
 8001dbc:	e06b      	b.n	8001e96 <HAL_RCC_ClockConfig+0x1b6>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8001dbe:	4b39      	ldr	r3, [pc, #228]	@ (8001ea4 <HAL_RCC_ClockConfig+0x1c4>)
 8001dc0:	685b      	ldr	r3, [r3, #4]
 8001dc2:	f023 0203 	bic.w	r2, r3, #3
 8001dc6:	687b      	ldr	r3, [r7, #4]
 8001dc8:	685b      	ldr	r3, [r3, #4]
 8001dca:	4936      	ldr	r1, [pc, #216]	@ (8001ea4 <HAL_RCC_ClockConfig+0x1c4>)
 8001dcc:	4313      	orrs	r3, r2
 8001dce:	604b      	str	r3, [r1, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8001dd0:	f7ff fc16 	bl	8001600 <HAL_GetTick>
 8001dd4:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001dd6:	e00a      	b.n	8001dee <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001dd8:	f7ff fc12 	bl	8001600 <HAL_GetTick>
 8001ddc:	4602      	mov	r2, r0
 8001dde:	68fb      	ldr	r3, [r7, #12]
 8001de0:	1ad3      	subs	r3, r2, r3
 8001de2:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001de6:	4293      	cmp	r3, r2
 8001de8:	d901      	bls.n	8001dee <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8001dea:	2303      	movs	r3, #3
 8001dec:	e053      	b.n	8001e96 <HAL_RCC_ClockConfig+0x1b6>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001dee:	4b2d      	ldr	r3, [pc, #180]	@ (8001ea4 <HAL_RCC_ClockConfig+0x1c4>)
 8001df0:	685b      	ldr	r3, [r3, #4]
 8001df2:	f003 020c 	and.w	r2, r3, #12
 8001df6:	687b      	ldr	r3, [r7, #4]
 8001df8:	685b      	ldr	r3, [r3, #4]
 8001dfa:	009b      	lsls	r3, r3, #2
 8001dfc:	429a      	cmp	r2, r3
 8001dfe:	d1eb      	bne.n	8001dd8 <HAL_RCC_ClockConfig+0xf8>
    }
  }

#if defined(FLASH_ACR_LATENCY)
  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8001e00:	4b27      	ldr	r3, [pc, #156]	@ (8001ea0 <HAL_RCC_ClockConfig+0x1c0>)
 8001e02:	681b      	ldr	r3, [r3, #0]
 8001e04:	f003 0307 	and.w	r3, r3, #7
 8001e08:	683a      	ldr	r2, [r7, #0]
 8001e0a:	429a      	cmp	r2, r3
 8001e0c:	d210      	bcs.n	8001e30 <HAL_RCC_ClockConfig+0x150>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001e0e:	4b24      	ldr	r3, [pc, #144]	@ (8001ea0 <HAL_RCC_ClockConfig+0x1c0>)
 8001e10:	681b      	ldr	r3, [r3, #0]
 8001e12:	f023 0207 	bic.w	r2, r3, #7
 8001e16:	4922      	ldr	r1, [pc, #136]	@ (8001ea0 <HAL_RCC_ClockConfig+0x1c0>)
 8001e18:	683b      	ldr	r3, [r7, #0]
 8001e1a:	4313      	orrs	r3, r2
 8001e1c:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8001e1e:	4b20      	ldr	r3, [pc, #128]	@ (8001ea0 <HAL_RCC_ClockConfig+0x1c0>)
 8001e20:	681b      	ldr	r3, [r3, #0]
 8001e22:	f003 0307 	and.w	r3, r3, #7
 8001e26:	683a      	ldr	r2, [r7, #0]
 8001e28:	429a      	cmp	r2, r3
 8001e2a:	d001      	beq.n	8001e30 <HAL_RCC_ClockConfig+0x150>
  {
    return HAL_ERROR;
 8001e2c:	2301      	movs	r3, #1
 8001e2e:	e032      	b.n	8001e96 <HAL_RCC_ClockConfig+0x1b6>
  }
}
#endif /* FLASH_ACR_LATENCY */

/*-------------------------- PCLK1 Configuration ---------------------------*/
if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001e30:	687b      	ldr	r3, [r7, #4]
 8001e32:	681b      	ldr	r3, [r3, #0]
 8001e34:	f003 0304 	and.w	r3, r3, #4
 8001e38:	2b00      	cmp	r3, #0
 8001e3a:	d008      	beq.n	8001e4e <HAL_RCC_ClockConfig+0x16e>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8001e3c:	4b19      	ldr	r3, [pc, #100]	@ (8001ea4 <HAL_RCC_ClockConfig+0x1c4>)
 8001e3e:	685b      	ldr	r3, [r3, #4]
 8001e40:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8001e44:	687b      	ldr	r3, [r7, #4]
 8001e46:	68db      	ldr	r3, [r3, #12]
 8001e48:	4916      	ldr	r1, [pc, #88]	@ (8001ea4 <HAL_RCC_ClockConfig+0x1c4>)
 8001e4a:	4313      	orrs	r3, r2
 8001e4c:	604b      	str	r3, [r1, #4]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8001e4e:	687b      	ldr	r3, [r7, #4]
 8001e50:	681b      	ldr	r3, [r3, #0]
 8001e52:	f003 0308 	and.w	r3, r3, #8
 8001e56:	2b00      	cmp	r3, #0
 8001e58:	d009      	beq.n	8001e6e <HAL_RCC_ClockConfig+0x18e>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8001e5a:	4b12      	ldr	r3, [pc, #72]	@ (8001ea4 <HAL_RCC_ClockConfig+0x1c4>)
 8001e5c:	685b      	ldr	r3, [r3, #4]
 8001e5e:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8001e62:	687b      	ldr	r3, [r7, #4]
 8001e64:	691b      	ldr	r3, [r3, #16]
 8001e66:	00db      	lsls	r3, r3, #3
 8001e68:	490e      	ldr	r1, [pc, #56]	@ (8001ea4 <HAL_RCC_ClockConfig+0x1c4>)
 8001e6a:	4313      	orrs	r3, r2
 8001e6c:	604b      	str	r3, [r1, #4]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8001e6e:	f000 f821 	bl	8001eb4 <HAL_RCC_GetSysClockFreq>
 8001e72:	4602      	mov	r2, r0
 8001e74:	4b0b      	ldr	r3, [pc, #44]	@ (8001ea4 <HAL_RCC_ClockConfig+0x1c4>)
 8001e76:	685b      	ldr	r3, [r3, #4]
 8001e78:	091b      	lsrs	r3, r3, #4
 8001e7a:	f003 030f 	and.w	r3, r3, #15
 8001e7e:	490a      	ldr	r1, [pc, #40]	@ (8001ea8 <HAL_RCC_ClockConfig+0x1c8>)
 8001e80:	5ccb      	ldrb	r3, [r1, r3]
 8001e82:	fa22 f303 	lsr.w	r3, r2, r3
 8001e86:	4a09      	ldr	r2, [pc, #36]	@ (8001eac <HAL_RCC_ClockConfig+0x1cc>)
 8001e88:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick(uwTickPrio);
 8001e8a:	4b09      	ldr	r3, [pc, #36]	@ (8001eb0 <HAL_RCC_ClockConfig+0x1d0>)
 8001e8c:	681b      	ldr	r3, [r3, #0]
 8001e8e:	4618      	mov	r0, r3
 8001e90:	f7ff fb74 	bl	800157c <HAL_InitTick>

  return HAL_OK;
 8001e94:	2300      	movs	r3, #0
}
 8001e96:	4618      	mov	r0, r3
 8001e98:	3710      	adds	r7, #16
 8001e9a:	46bd      	mov	sp, r7
 8001e9c:	bd80      	pop	{r7, pc}
 8001e9e:	bf00      	nop
 8001ea0:	40022000 	.word	0x40022000
 8001ea4:	40021000 	.word	0x40021000
 8001ea8:	08006668 	.word	0x08006668
 8001eac:	20000000 	.word	0x20000000
 8001eb0:	20000004 	.word	0x20000004

08001eb4 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8001eb4:	b480      	push	{r7}
 8001eb6:	b087      	sub	sp, #28
 8001eb8:	af00      	add	r7, sp, #0
#else
  static const uint8_t aPredivFactorTable[2U] = {1, 2};
#endif /*RCC_CFGR2_PREDIV1*/

#endif
  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 8001eba:	2300      	movs	r3, #0
 8001ebc:	60fb      	str	r3, [r7, #12]
 8001ebe:	2300      	movs	r3, #0
 8001ec0:	60bb      	str	r3, [r7, #8]
 8001ec2:	2300      	movs	r3, #0
 8001ec4:	617b      	str	r3, [r7, #20]
 8001ec6:	2300      	movs	r3, #0
 8001ec8:	607b      	str	r3, [r7, #4]
  uint32_t sysclockfreq = 0U;
 8001eca:	2300      	movs	r3, #0
 8001ecc:	613b      	str	r3, [r7, #16]
#if defined(RCC_CFGR2_PREDIV1SRC)
  uint32_t prediv2 = 0U, pll2mul = 0U;
#endif /*RCC_CFGR2_PREDIV1SRC*/

  tmpreg = RCC->CFGR;
 8001ece:	4b1e      	ldr	r3, [pc, #120]	@ (8001f48 <HAL_RCC_GetSysClockFreq+0x94>)
 8001ed0:	685b      	ldr	r3, [r3, #4]
 8001ed2:	60fb      	str	r3, [r7, #12]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8001ed4:	68fb      	ldr	r3, [r7, #12]
 8001ed6:	f003 030c 	and.w	r3, r3, #12
 8001eda:	2b04      	cmp	r3, #4
 8001edc:	d002      	beq.n	8001ee4 <HAL_RCC_GetSysClockFreq+0x30>
 8001ede:	2b08      	cmp	r3, #8
 8001ee0:	d003      	beq.n	8001eea <HAL_RCC_GetSysClockFreq+0x36>
 8001ee2:	e027      	b.n	8001f34 <HAL_RCC_GetSysClockFreq+0x80>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 8001ee4:	4b19      	ldr	r3, [pc, #100]	@ (8001f4c <HAL_RCC_GetSysClockFreq+0x98>)
 8001ee6:	613b      	str	r3, [r7, #16]
      break;
 8001ee8:	e027      	b.n	8001f3a <HAL_RCC_GetSysClockFreq+0x86>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMULL) >> RCC_CFGR_PLLMULL_Pos];
 8001eea:	68fb      	ldr	r3, [r7, #12]
 8001eec:	0c9b      	lsrs	r3, r3, #18
 8001eee:	f003 030f 	and.w	r3, r3, #15
 8001ef2:	4a17      	ldr	r2, [pc, #92]	@ (8001f50 <HAL_RCC_GetSysClockFreq+0x9c>)
 8001ef4:	5cd3      	ldrb	r3, [r2, r3]
 8001ef6:	607b      	str	r3, [r7, #4]
      if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
 8001ef8:	68fb      	ldr	r3, [r7, #12]
 8001efa:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001efe:	2b00      	cmp	r3, #0
 8001f00:	d010      	beq.n	8001f24 <HAL_RCC_GetSysClockFreq+0x70>
      {
#if defined(RCC_CFGR2_PREDIV1)
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV1) >> RCC_CFGR2_PREDIV1_Pos];
#else
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR & RCC_CFGR_PLLXTPRE) >> RCC_CFGR_PLLXTPRE_Pos];
 8001f02:	4b11      	ldr	r3, [pc, #68]	@ (8001f48 <HAL_RCC_GetSysClockFreq+0x94>)
 8001f04:	685b      	ldr	r3, [r3, #4]
 8001f06:	0c5b      	lsrs	r3, r3, #17
 8001f08:	f003 0301 	and.w	r3, r3, #1
 8001f0c:	4a11      	ldr	r2, [pc, #68]	@ (8001f54 <HAL_RCC_GetSysClockFreq+0xa0>)
 8001f0e:	5cd3      	ldrb	r3, [r2, r3]
 8001f10:	60bb      	str	r3, [r7, #8]
        {
          pllclk = pllclk / 2;
        }
#else
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
        pllclk = (uint32_t)((HSE_VALUE  * pllmul) / prediv);
 8001f12:	687b      	ldr	r3, [r7, #4]
 8001f14:	4a0d      	ldr	r2, [pc, #52]	@ (8001f4c <HAL_RCC_GetSysClockFreq+0x98>)
 8001f16:	fb03 f202 	mul.w	r2, r3, r2
 8001f1a:	68bb      	ldr	r3, [r7, #8]
 8001f1c:	fbb2 f3f3 	udiv	r3, r2, r3
 8001f20:	617b      	str	r3, [r7, #20]
 8001f22:	e004      	b.n	8001f2e <HAL_RCC_GetSysClockFreq+0x7a>
#endif /*RCC_CFGR2_PREDIV1SRC*/
      }
      else
      {
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((HSI_VALUE >> 1) * pllmul);
 8001f24:	687b      	ldr	r3, [r7, #4]
 8001f26:	4a0c      	ldr	r2, [pc, #48]	@ (8001f58 <HAL_RCC_GetSysClockFreq+0xa4>)
 8001f28:	fb02 f303 	mul.w	r3, r2, r3
 8001f2c:	617b      	str	r3, [r7, #20]
      }
      sysclockfreq = pllclk;
 8001f2e:	697b      	ldr	r3, [r7, #20]
 8001f30:	613b      	str	r3, [r7, #16]
      break;
 8001f32:	e002      	b.n	8001f3a <HAL_RCC_GetSysClockFreq+0x86>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 8001f34:	4b05      	ldr	r3, [pc, #20]	@ (8001f4c <HAL_RCC_GetSysClockFreq+0x98>)
 8001f36:	613b      	str	r3, [r7, #16]
      break;
 8001f38:	bf00      	nop
    }
  }
  return sysclockfreq;
 8001f3a:	693b      	ldr	r3, [r7, #16]
}
 8001f3c:	4618      	mov	r0, r3
 8001f3e:	371c      	adds	r7, #28
 8001f40:	46bd      	mov	sp, r7
 8001f42:	bc80      	pop	{r7}
 8001f44:	4770      	bx	lr
 8001f46:	bf00      	nop
 8001f48:	40021000 	.word	0x40021000
 8001f4c:	007a1200 	.word	0x007a1200
 8001f50:	08006678 	.word	0x08006678
 8001f54:	08006688 	.word	0x08006688
 8001f58:	003d0900 	.word	0x003d0900

08001f5c <RCC_Delay>:
  * @brief  This function provides delay (in milliseconds) based on CPU cycles method.
  * @param  mdelay: specifies the delay time length, in milliseconds.
  * @retval None
  */
static void RCC_Delay(uint32_t mdelay)
{
 8001f5c:	b480      	push	{r7}
 8001f5e:	b085      	sub	sp, #20
 8001f60:	af00      	add	r7, sp, #0
 8001f62:	6078      	str	r0, [r7, #4]
  __IO uint32_t Delay = mdelay * (SystemCoreClock / 8U / 1000U);
 8001f64:	4b0a      	ldr	r3, [pc, #40]	@ (8001f90 <RCC_Delay+0x34>)
 8001f66:	681b      	ldr	r3, [r3, #0]
 8001f68:	4a0a      	ldr	r2, [pc, #40]	@ (8001f94 <RCC_Delay+0x38>)
 8001f6a:	fba2 2303 	umull	r2, r3, r2, r3
 8001f6e:	0a5b      	lsrs	r3, r3, #9
 8001f70:	687a      	ldr	r2, [r7, #4]
 8001f72:	fb02 f303 	mul.w	r3, r2, r3
 8001f76:	60fb      	str	r3, [r7, #12]
  do
  {
    __NOP();
 8001f78:	bf00      	nop
  }
  while (Delay --);
 8001f7a:	68fb      	ldr	r3, [r7, #12]
 8001f7c:	1e5a      	subs	r2, r3, #1
 8001f7e:	60fa      	str	r2, [r7, #12]
 8001f80:	2b00      	cmp	r3, #0
 8001f82:	d1f9      	bne.n	8001f78 <RCC_Delay+0x1c>
}
 8001f84:	bf00      	nop
 8001f86:	bf00      	nop
 8001f88:	3714      	adds	r7, #20
 8001f8a:	46bd      	mov	sp, r7
 8001f8c:	bc80      	pop	{r7}
 8001f8e:	4770      	bx	lr
 8001f90:	20000000 	.word	0x20000000
 8001f94:	10624dd3 	.word	0x10624dd3

08001f98 <malloc>:
 8001f98:	4b02      	ldr	r3, [pc, #8]	@ (8001fa4 <malloc+0xc>)
 8001f9a:	4601      	mov	r1, r0
 8001f9c:	6818      	ldr	r0, [r3, #0]
 8001f9e:	f000 b825 	b.w	8001fec <_malloc_r>
 8001fa2:	bf00      	nop
 8001fa4:	20000018 	.word	0x20000018

08001fa8 <sbrk_aligned>:
 8001fa8:	b570      	push	{r4, r5, r6, lr}
 8001faa:	4e0f      	ldr	r6, [pc, #60]	@ (8001fe8 <sbrk_aligned+0x40>)
 8001fac:	460c      	mov	r4, r1
 8001fae:	6831      	ldr	r1, [r6, #0]
 8001fb0:	4605      	mov	r5, r0
 8001fb2:	b911      	cbnz	r1, 8001fba <sbrk_aligned+0x12>
 8001fb4:	f001 f872 	bl	800309c <_sbrk_r>
 8001fb8:	6030      	str	r0, [r6, #0]
 8001fba:	4621      	mov	r1, r4
 8001fbc:	4628      	mov	r0, r5
 8001fbe:	f001 f86d 	bl	800309c <_sbrk_r>
 8001fc2:	1c43      	adds	r3, r0, #1
 8001fc4:	d103      	bne.n	8001fce <sbrk_aligned+0x26>
 8001fc6:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8001fca:	4620      	mov	r0, r4
 8001fcc:	bd70      	pop	{r4, r5, r6, pc}
 8001fce:	1cc4      	adds	r4, r0, #3
 8001fd0:	f024 0403 	bic.w	r4, r4, #3
 8001fd4:	42a0      	cmp	r0, r4
 8001fd6:	d0f8      	beq.n	8001fca <sbrk_aligned+0x22>
 8001fd8:	1a21      	subs	r1, r4, r0
 8001fda:	4628      	mov	r0, r5
 8001fdc:	f001 f85e 	bl	800309c <_sbrk_r>
 8001fe0:	3001      	adds	r0, #1
 8001fe2:	d1f2      	bne.n	8001fca <sbrk_aligned+0x22>
 8001fe4:	e7ef      	b.n	8001fc6 <sbrk_aligned+0x1e>
 8001fe6:	bf00      	nop
 8001fe8:	2000020c 	.word	0x2000020c

08001fec <_malloc_r>:
 8001fec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001ff0:	1ccd      	adds	r5, r1, #3
 8001ff2:	f025 0503 	bic.w	r5, r5, #3
 8001ff6:	3508      	adds	r5, #8
 8001ff8:	2d0c      	cmp	r5, #12
 8001ffa:	bf38      	it	cc
 8001ffc:	250c      	movcc	r5, #12
 8001ffe:	2d00      	cmp	r5, #0
 8002000:	4606      	mov	r6, r0
 8002002:	db01      	blt.n	8002008 <_malloc_r+0x1c>
 8002004:	42a9      	cmp	r1, r5
 8002006:	d904      	bls.n	8002012 <_malloc_r+0x26>
 8002008:	230c      	movs	r3, #12
 800200a:	6033      	str	r3, [r6, #0]
 800200c:	2000      	movs	r0, #0
 800200e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002012:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80020e8 <_malloc_r+0xfc>
 8002016:	f000 f869 	bl	80020ec <__malloc_lock>
 800201a:	f8d8 3000 	ldr.w	r3, [r8]
 800201e:	461c      	mov	r4, r3
 8002020:	bb44      	cbnz	r4, 8002074 <_malloc_r+0x88>
 8002022:	4629      	mov	r1, r5
 8002024:	4630      	mov	r0, r6
 8002026:	f7ff ffbf 	bl	8001fa8 <sbrk_aligned>
 800202a:	1c43      	adds	r3, r0, #1
 800202c:	4604      	mov	r4, r0
 800202e:	d158      	bne.n	80020e2 <_malloc_r+0xf6>
 8002030:	f8d8 4000 	ldr.w	r4, [r8]
 8002034:	4627      	mov	r7, r4
 8002036:	2f00      	cmp	r7, #0
 8002038:	d143      	bne.n	80020c2 <_malloc_r+0xd6>
 800203a:	2c00      	cmp	r4, #0
 800203c:	d04b      	beq.n	80020d6 <_malloc_r+0xea>
 800203e:	6823      	ldr	r3, [r4, #0]
 8002040:	4639      	mov	r1, r7
 8002042:	4630      	mov	r0, r6
 8002044:	eb04 0903 	add.w	r9, r4, r3
 8002048:	f001 f828 	bl	800309c <_sbrk_r>
 800204c:	4581      	cmp	r9, r0
 800204e:	d142      	bne.n	80020d6 <_malloc_r+0xea>
 8002050:	6821      	ldr	r1, [r4, #0]
 8002052:	4630      	mov	r0, r6
 8002054:	1a6d      	subs	r5, r5, r1
 8002056:	4629      	mov	r1, r5
 8002058:	f7ff ffa6 	bl	8001fa8 <sbrk_aligned>
 800205c:	3001      	adds	r0, #1
 800205e:	d03a      	beq.n	80020d6 <_malloc_r+0xea>
 8002060:	6823      	ldr	r3, [r4, #0]
 8002062:	442b      	add	r3, r5
 8002064:	6023      	str	r3, [r4, #0]
 8002066:	f8d8 3000 	ldr.w	r3, [r8]
 800206a:	685a      	ldr	r2, [r3, #4]
 800206c:	bb62      	cbnz	r2, 80020c8 <_malloc_r+0xdc>
 800206e:	f8c8 7000 	str.w	r7, [r8]
 8002072:	e00f      	b.n	8002094 <_malloc_r+0xa8>
 8002074:	6822      	ldr	r2, [r4, #0]
 8002076:	1b52      	subs	r2, r2, r5
 8002078:	d420      	bmi.n	80020bc <_malloc_r+0xd0>
 800207a:	2a0b      	cmp	r2, #11
 800207c:	d917      	bls.n	80020ae <_malloc_r+0xc2>
 800207e:	1961      	adds	r1, r4, r5
 8002080:	42a3      	cmp	r3, r4
 8002082:	6025      	str	r5, [r4, #0]
 8002084:	bf18      	it	ne
 8002086:	6059      	strne	r1, [r3, #4]
 8002088:	6863      	ldr	r3, [r4, #4]
 800208a:	bf08      	it	eq
 800208c:	f8c8 1000 	streq.w	r1, [r8]
 8002090:	5162      	str	r2, [r4, r5]
 8002092:	604b      	str	r3, [r1, #4]
 8002094:	4630      	mov	r0, r6
 8002096:	f000 f82f 	bl	80020f8 <__malloc_unlock>
 800209a:	f104 000b 	add.w	r0, r4, #11
 800209e:	1d23      	adds	r3, r4, #4
 80020a0:	f020 0007 	bic.w	r0, r0, #7
 80020a4:	1ac2      	subs	r2, r0, r3
 80020a6:	bf1c      	itt	ne
 80020a8:	1a1b      	subne	r3, r3, r0
 80020aa:	50a3      	strne	r3, [r4, r2]
 80020ac:	e7af      	b.n	800200e <_malloc_r+0x22>
 80020ae:	6862      	ldr	r2, [r4, #4]
 80020b0:	42a3      	cmp	r3, r4
 80020b2:	bf0c      	ite	eq
 80020b4:	f8c8 2000 	streq.w	r2, [r8]
 80020b8:	605a      	strne	r2, [r3, #4]
 80020ba:	e7eb      	b.n	8002094 <_malloc_r+0xa8>
 80020bc:	4623      	mov	r3, r4
 80020be:	6864      	ldr	r4, [r4, #4]
 80020c0:	e7ae      	b.n	8002020 <_malloc_r+0x34>
 80020c2:	463c      	mov	r4, r7
 80020c4:	687f      	ldr	r7, [r7, #4]
 80020c6:	e7b6      	b.n	8002036 <_malloc_r+0x4a>
 80020c8:	461a      	mov	r2, r3
 80020ca:	685b      	ldr	r3, [r3, #4]
 80020cc:	42a3      	cmp	r3, r4
 80020ce:	d1fb      	bne.n	80020c8 <_malloc_r+0xdc>
 80020d0:	2300      	movs	r3, #0
 80020d2:	6053      	str	r3, [r2, #4]
 80020d4:	e7de      	b.n	8002094 <_malloc_r+0xa8>
 80020d6:	230c      	movs	r3, #12
 80020d8:	4630      	mov	r0, r6
 80020da:	6033      	str	r3, [r6, #0]
 80020dc:	f000 f80c 	bl	80020f8 <__malloc_unlock>
 80020e0:	e794      	b.n	800200c <_malloc_r+0x20>
 80020e2:	6005      	str	r5, [r0, #0]
 80020e4:	e7d6      	b.n	8002094 <_malloc_r+0xa8>
 80020e6:	bf00      	nop
 80020e8:	20000210 	.word	0x20000210

080020ec <__malloc_lock>:
 80020ec:	4801      	ldr	r0, [pc, #4]	@ (80020f4 <__malloc_lock+0x8>)
 80020ee:	f001 b822 	b.w	8003136 <__retarget_lock_acquire_recursive>
 80020f2:	bf00      	nop
 80020f4:	20000354 	.word	0x20000354

080020f8 <__malloc_unlock>:
 80020f8:	4801      	ldr	r0, [pc, #4]	@ (8002100 <__malloc_unlock+0x8>)
 80020fa:	f001 b81d 	b.w	8003138 <__retarget_lock_release_recursive>
 80020fe:	bf00      	nop
 8002100:	20000354 	.word	0x20000354

08002104 <__cvt>:
 8002104:	2b00      	cmp	r3, #0
 8002106:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800210a:	461d      	mov	r5, r3
 800210c:	bfbb      	ittet	lt
 800210e:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 8002112:	461d      	movlt	r5, r3
 8002114:	2300      	movge	r3, #0
 8002116:	232d      	movlt	r3, #45	@ 0x2d
 8002118:	b088      	sub	sp, #32
 800211a:	4614      	mov	r4, r2
 800211c:	bfb8      	it	lt
 800211e:	4614      	movlt	r4, r2
 8002120:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8002122:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 8002124:	7013      	strb	r3, [r2, #0]
 8002126:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8002128:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 800212c:	f023 0820 	bic.w	r8, r3, #32
 8002130:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8002134:	d005      	beq.n	8002142 <__cvt+0x3e>
 8002136:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 800213a:	d100      	bne.n	800213e <__cvt+0x3a>
 800213c:	3601      	adds	r6, #1
 800213e:	2302      	movs	r3, #2
 8002140:	e000      	b.n	8002144 <__cvt+0x40>
 8002142:	2303      	movs	r3, #3
 8002144:	aa07      	add	r2, sp, #28
 8002146:	9204      	str	r2, [sp, #16]
 8002148:	aa06      	add	r2, sp, #24
 800214a:	e9cd a202 	strd	sl, r2, [sp, #8]
 800214e:	e9cd 3600 	strd	r3, r6, [sp]
 8002152:	4622      	mov	r2, r4
 8002154:	462b      	mov	r3, r5
 8002156:	f001 f88b 	bl	8003270 <_dtoa_r>
 800215a:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 800215e:	4607      	mov	r7, r0
 8002160:	d119      	bne.n	8002196 <__cvt+0x92>
 8002162:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8002164:	07db      	lsls	r3, r3, #31
 8002166:	d50e      	bpl.n	8002186 <__cvt+0x82>
 8002168:	eb00 0906 	add.w	r9, r0, r6
 800216c:	2200      	movs	r2, #0
 800216e:	2300      	movs	r3, #0
 8002170:	4620      	mov	r0, r4
 8002172:	4629      	mov	r1, r5
 8002174:	f7fe fc18 	bl	80009a8 <__aeabi_dcmpeq>
 8002178:	b108      	cbz	r0, 800217e <__cvt+0x7a>
 800217a:	f8cd 901c 	str.w	r9, [sp, #28]
 800217e:	2230      	movs	r2, #48	@ 0x30
 8002180:	9b07      	ldr	r3, [sp, #28]
 8002182:	454b      	cmp	r3, r9
 8002184:	d31e      	bcc.n	80021c4 <__cvt+0xc0>
 8002186:	4638      	mov	r0, r7
 8002188:	9b07      	ldr	r3, [sp, #28]
 800218a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 800218c:	1bdb      	subs	r3, r3, r7
 800218e:	6013      	str	r3, [r2, #0]
 8002190:	b008      	add	sp, #32
 8002192:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002196:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800219a:	eb00 0906 	add.w	r9, r0, r6
 800219e:	d1e5      	bne.n	800216c <__cvt+0x68>
 80021a0:	7803      	ldrb	r3, [r0, #0]
 80021a2:	2b30      	cmp	r3, #48	@ 0x30
 80021a4:	d10a      	bne.n	80021bc <__cvt+0xb8>
 80021a6:	2200      	movs	r2, #0
 80021a8:	2300      	movs	r3, #0
 80021aa:	4620      	mov	r0, r4
 80021ac:	4629      	mov	r1, r5
 80021ae:	f7fe fbfb 	bl	80009a8 <__aeabi_dcmpeq>
 80021b2:	b918      	cbnz	r0, 80021bc <__cvt+0xb8>
 80021b4:	f1c6 0601 	rsb	r6, r6, #1
 80021b8:	f8ca 6000 	str.w	r6, [sl]
 80021bc:	f8da 3000 	ldr.w	r3, [sl]
 80021c0:	4499      	add	r9, r3
 80021c2:	e7d3      	b.n	800216c <__cvt+0x68>
 80021c4:	1c59      	adds	r1, r3, #1
 80021c6:	9107      	str	r1, [sp, #28]
 80021c8:	701a      	strb	r2, [r3, #0]
 80021ca:	e7d9      	b.n	8002180 <__cvt+0x7c>

080021cc <__exponent>:
 80021cc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80021ce:	2900      	cmp	r1, #0
 80021d0:	bfb6      	itet	lt
 80021d2:	232d      	movlt	r3, #45	@ 0x2d
 80021d4:	232b      	movge	r3, #43	@ 0x2b
 80021d6:	4249      	neglt	r1, r1
 80021d8:	2909      	cmp	r1, #9
 80021da:	7002      	strb	r2, [r0, #0]
 80021dc:	7043      	strb	r3, [r0, #1]
 80021de:	dd29      	ble.n	8002234 <__exponent+0x68>
 80021e0:	f10d 0307 	add.w	r3, sp, #7
 80021e4:	461d      	mov	r5, r3
 80021e6:	270a      	movs	r7, #10
 80021e8:	fbb1 f6f7 	udiv	r6, r1, r7
 80021ec:	461a      	mov	r2, r3
 80021ee:	fb07 1416 	mls	r4, r7, r6, r1
 80021f2:	3430      	adds	r4, #48	@ 0x30
 80021f4:	f802 4c01 	strb.w	r4, [r2, #-1]
 80021f8:	460c      	mov	r4, r1
 80021fa:	2c63      	cmp	r4, #99	@ 0x63
 80021fc:	4631      	mov	r1, r6
 80021fe:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 8002202:	dcf1      	bgt.n	80021e8 <__exponent+0x1c>
 8002204:	3130      	adds	r1, #48	@ 0x30
 8002206:	1e94      	subs	r4, r2, #2
 8002208:	f803 1c01 	strb.w	r1, [r3, #-1]
 800220c:	4623      	mov	r3, r4
 800220e:	1c41      	adds	r1, r0, #1
 8002210:	42ab      	cmp	r3, r5
 8002212:	d30a      	bcc.n	800222a <__exponent+0x5e>
 8002214:	f10d 0309 	add.w	r3, sp, #9
 8002218:	1a9b      	subs	r3, r3, r2
 800221a:	42ac      	cmp	r4, r5
 800221c:	bf88      	it	hi
 800221e:	2300      	movhi	r3, #0
 8002220:	3302      	adds	r3, #2
 8002222:	4403      	add	r3, r0
 8002224:	1a18      	subs	r0, r3, r0
 8002226:	b003      	add	sp, #12
 8002228:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800222a:	f813 6b01 	ldrb.w	r6, [r3], #1
 800222e:	f801 6f01 	strb.w	r6, [r1, #1]!
 8002232:	e7ed      	b.n	8002210 <__exponent+0x44>
 8002234:	2330      	movs	r3, #48	@ 0x30
 8002236:	3130      	adds	r1, #48	@ 0x30
 8002238:	7083      	strb	r3, [r0, #2]
 800223a:	70c1      	strb	r1, [r0, #3]
 800223c:	1d03      	adds	r3, r0, #4
 800223e:	e7f1      	b.n	8002224 <__exponent+0x58>

08002240 <_printf_float>:
 8002240:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002244:	b091      	sub	sp, #68	@ 0x44
 8002246:	460c      	mov	r4, r1
 8002248:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 800224c:	4616      	mov	r6, r2
 800224e:	461f      	mov	r7, r3
 8002250:	4605      	mov	r5, r0
 8002252:	f000 feeb 	bl	800302c <_localeconv_r>
 8002256:	6803      	ldr	r3, [r0, #0]
 8002258:	4618      	mov	r0, r3
 800225a:	9308      	str	r3, [sp, #32]
 800225c:	f7fd ff78 	bl	8000150 <strlen>
 8002260:	2300      	movs	r3, #0
 8002262:	930e      	str	r3, [sp, #56]	@ 0x38
 8002264:	f8d8 3000 	ldr.w	r3, [r8]
 8002268:	9009      	str	r0, [sp, #36]	@ 0x24
 800226a:	3307      	adds	r3, #7
 800226c:	f023 0307 	bic.w	r3, r3, #7
 8002270:	f103 0208 	add.w	r2, r3, #8
 8002274:	f894 a018 	ldrb.w	sl, [r4, #24]
 8002278:	f8d4 b000 	ldr.w	fp, [r4]
 800227c:	f8c8 2000 	str.w	r2, [r8]
 8002280:	e9d3 8900 	ldrd	r8, r9, [r3]
 8002284:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8002288:	930b      	str	r3, [sp, #44]	@ 0x2c
 800228a:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 800228e:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8002292:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8002296:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 800229a:	4b9c      	ldr	r3, [pc, #624]	@ (800250c <_printf_float+0x2cc>)
 800229c:	f7fe fbb6 	bl	8000a0c <__aeabi_dcmpun>
 80022a0:	bb70      	cbnz	r0, 8002300 <_printf_float+0xc0>
 80022a2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80022a6:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80022aa:	4b98      	ldr	r3, [pc, #608]	@ (800250c <_printf_float+0x2cc>)
 80022ac:	f7fe fb90 	bl	80009d0 <__aeabi_dcmple>
 80022b0:	bb30      	cbnz	r0, 8002300 <_printf_float+0xc0>
 80022b2:	2200      	movs	r2, #0
 80022b4:	2300      	movs	r3, #0
 80022b6:	4640      	mov	r0, r8
 80022b8:	4649      	mov	r1, r9
 80022ba:	f7fe fb7f 	bl	80009bc <__aeabi_dcmplt>
 80022be:	b110      	cbz	r0, 80022c6 <_printf_float+0x86>
 80022c0:	232d      	movs	r3, #45	@ 0x2d
 80022c2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80022c6:	4a92      	ldr	r2, [pc, #584]	@ (8002510 <_printf_float+0x2d0>)
 80022c8:	4b92      	ldr	r3, [pc, #584]	@ (8002514 <_printf_float+0x2d4>)
 80022ca:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 80022ce:	bf8c      	ite	hi
 80022d0:	4690      	movhi	r8, r2
 80022d2:	4698      	movls	r8, r3
 80022d4:	2303      	movs	r3, #3
 80022d6:	f04f 0900 	mov.w	r9, #0
 80022da:	6123      	str	r3, [r4, #16]
 80022dc:	f02b 0304 	bic.w	r3, fp, #4
 80022e0:	6023      	str	r3, [r4, #0]
 80022e2:	4633      	mov	r3, r6
 80022e4:	4621      	mov	r1, r4
 80022e6:	4628      	mov	r0, r5
 80022e8:	9700      	str	r7, [sp, #0]
 80022ea:	aa0f      	add	r2, sp, #60	@ 0x3c
 80022ec:	f000 f9d4 	bl	8002698 <_printf_common>
 80022f0:	3001      	adds	r0, #1
 80022f2:	f040 8090 	bne.w	8002416 <_printf_float+0x1d6>
 80022f6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80022fa:	b011      	add	sp, #68	@ 0x44
 80022fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002300:	4642      	mov	r2, r8
 8002302:	464b      	mov	r3, r9
 8002304:	4640      	mov	r0, r8
 8002306:	4649      	mov	r1, r9
 8002308:	f7fe fb80 	bl	8000a0c <__aeabi_dcmpun>
 800230c:	b148      	cbz	r0, 8002322 <_printf_float+0xe2>
 800230e:	464b      	mov	r3, r9
 8002310:	2b00      	cmp	r3, #0
 8002312:	bfb8      	it	lt
 8002314:	232d      	movlt	r3, #45	@ 0x2d
 8002316:	4a80      	ldr	r2, [pc, #512]	@ (8002518 <_printf_float+0x2d8>)
 8002318:	bfb8      	it	lt
 800231a:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 800231e:	4b7f      	ldr	r3, [pc, #508]	@ (800251c <_printf_float+0x2dc>)
 8002320:	e7d3      	b.n	80022ca <_printf_float+0x8a>
 8002322:	6863      	ldr	r3, [r4, #4]
 8002324:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 8002328:	1c5a      	adds	r2, r3, #1
 800232a:	d13f      	bne.n	80023ac <_printf_float+0x16c>
 800232c:	2306      	movs	r3, #6
 800232e:	6063      	str	r3, [r4, #4]
 8002330:	2200      	movs	r2, #0
 8002332:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 8002336:	6023      	str	r3, [r4, #0]
 8002338:	9206      	str	r2, [sp, #24]
 800233a:	aa0e      	add	r2, sp, #56	@ 0x38
 800233c:	e9cd a204 	strd	sl, r2, [sp, #16]
 8002340:	aa0d      	add	r2, sp, #52	@ 0x34
 8002342:	9203      	str	r2, [sp, #12]
 8002344:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 8002348:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800234c:	6863      	ldr	r3, [r4, #4]
 800234e:	4642      	mov	r2, r8
 8002350:	9300      	str	r3, [sp, #0]
 8002352:	4628      	mov	r0, r5
 8002354:	464b      	mov	r3, r9
 8002356:	910a      	str	r1, [sp, #40]	@ 0x28
 8002358:	f7ff fed4 	bl	8002104 <__cvt>
 800235c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800235e:	4680      	mov	r8, r0
 8002360:	2947      	cmp	r1, #71	@ 0x47
 8002362:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8002364:	d128      	bne.n	80023b8 <_printf_float+0x178>
 8002366:	1cc8      	adds	r0, r1, #3
 8002368:	db02      	blt.n	8002370 <_printf_float+0x130>
 800236a:	6863      	ldr	r3, [r4, #4]
 800236c:	4299      	cmp	r1, r3
 800236e:	dd40      	ble.n	80023f2 <_printf_float+0x1b2>
 8002370:	f1aa 0a02 	sub.w	sl, sl, #2
 8002374:	fa5f fa8a 	uxtb.w	sl, sl
 8002378:	4652      	mov	r2, sl
 800237a:	3901      	subs	r1, #1
 800237c:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8002380:	910d      	str	r1, [sp, #52]	@ 0x34
 8002382:	f7ff ff23 	bl	80021cc <__exponent>
 8002386:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8002388:	4681      	mov	r9, r0
 800238a:	1813      	adds	r3, r2, r0
 800238c:	2a01      	cmp	r2, #1
 800238e:	6123      	str	r3, [r4, #16]
 8002390:	dc02      	bgt.n	8002398 <_printf_float+0x158>
 8002392:	6822      	ldr	r2, [r4, #0]
 8002394:	07d2      	lsls	r2, r2, #31
 8002396:	d501      	bpl.n	800239c <_printf_float+0x15c>
 8002398:	3301      	adds	r3, #1
 800239a:	6123      	str	r3, [r4, #16]
 800239c:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 80023a0:	2b00      	cmp	r3, #0
 80023a2:	d09e      	beq.n	80022e2 <_printf_float+0xa2>
 80023a4:	232d      	movs	r3, #45	@ 0x2d
 80023a6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80023aa:	e79a      	b.n	80022e2 <_printf_float+0xa2>
 80023ac:	2947      	cmp	r1, #71	@ 0x47
 80023ae:	d1bf      	bne.n	8002330 <_printf_float+0xf0>
 80023b0:	2b00      	cmp	r3, #0
 80023b2:	d1bd      	bne.n	8002330 <_printf_float+0xf0>
 80023b4:	2301      	movs	r3, #1
 80023b6:	e7ba      	b.n	800232e <_printf_float+0xee>
 80023b8:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80023bc:	d9dc      	bls.n	8002378 <_printf_float+0x138>
 80023be:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 80023c2:	d118      	bne.n	80023f6 <_printf_float+0x1b6>
 80023c4:	2900      	cmp	r1, #0
 80023c6:	6863      	ldr	r3, [r4, #4]
 80023c8:	dd0b      	ble.n	80023e2 <_printf_float+0x1a2>
 80023ca:	6121      	str	r1, [r4, #16]
 80023cc:	b913      	cbnz	r3, 80023d4 <_printf_float+0x194>
 80023ce:	6822      	ldr	r2, [r4, #0]
 80023d0:	07d0      	lsls	r0, r2, #31
 80023d2:	d502      	bpl.n	80023da <_printf_float+0x19a>
 80023d4:	3301      	adds	r3, #1
 80023d6:	440b      	add	r3, r1
 80023d8:	6123      	str	r3, [r4, #16]
 80023da:	f04f 0900 	mov.w	r9, #0
 80023de:	65a1      	str	r1, [r4, #88]	@ 0x58
 80023e0:	e7dc      	b.n	800239c <_printf_float+0x15c>
 80023e2:	b913      	cbnz	r3, 80023ea <_printf_float+0x1aa>
 80023e4:	6822      	ldr	r2, [r4, #0]
 80023e6:	07d2      	lsls	r2, r2, #31
 80023e8:	d501      	bpl.n	80023ee <_printf_float+0x1ae>
 80023ea:	3302      	adds	r3, #2
 80023ec:	e7f4      	b.n	80023d8 <_printf_float+0x198>
 80023ee:	2301      	movs	r3, #1
 80023f0:	e7f2      	b.n	80023d8 <_printf_float+0x198>
 80023f2:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 80023f6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80023f8:	4299      	cmp	r1, r3
 80023fa:	db05      	blt.n	8002408 <_printf_float+0x1c8>
 80023fc:	6823      	ldr	r3, [r4, #0]
 80023fe:	6121      	str	r1, [r4, #16]
 8002400:	07d8      	lsls	r0, r3, #31
 8002402:	d5ea      	bpl.n	80023da <_printf_float+0x19a>
 8002404:	1c4b      	adds	r3, r1, #1
 8002406:	e7e7      	b.n	80023d8 <_printf_float+0x198>
 8002408:	2900      	cmp	r1, #0
 800240a:	bfcc      	ite	gt
 800240c:	2201      	movgt	r2, #1
 800240e:	f1c1 0202 	rsble	r2, r1, #2
 8002412:	4413      	add	r3, r2
 8002414:	e7e0      	b.n	80023d8 <_printf_float+0x198>
 8002416:	6823      	ldr	r3, [r4, #0]
 8002418:	055a      	lsls	r2, r3, #21
 800241a:	d407      	bmi.n	800242c <_printf_float+0x1ec>
 800241c:	6923      	ldr	r3, [r4, #16]
 800241e:	4642      	mov	r2, r8
 8002420:	4631      	mov	r1, r6
 8002422:	4628      	mov	r0, r5
 8002424:	47b8      	blx	r7
 8002426:	3001      	adds	r0, #1
 8002428:	d12b      	bne.n	8002482 <_printf_float+0x242>
 800242a:	e764      	b.n	80022f6 <_printf_float+0xb6>
 800242c:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8002430:	f240 80dc 	bls.w	80025ec <_printf_float+0x3ac>
 8002434:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8002438:	2200      	movs	r2, #0
 800243a:	2300      	movs	r3, #0
 800243c:	f7fe fab4 	bl	80009a8 <__aeabi_dcmpeq>
 8002440:	2800      	cmp	r0, #0
 8002442:	d033      	beq.n	80024ac <_printf_float+0x26c>
 8002444:	2301      	movs	r3, #1
 8002446:	4631      	mov	r1, r6
 8002448:	4628      	mov	r0, r5
 800244a:	4a35      	ldr	r2, [pc, #212]	@ (8002520 <_printf_float+0x2e0>)
 800244c:	47b8      	blx	r7
 800244e:	3001      	adds	r0, #1
 8002450:	f43f af51 	beq.w	80022f6 <_printf_float+0xb6>
 8002454:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 8002458:	4543      	cmp	r3, r8
 800245a:	db02      	blt.n	8002462 <_printf_float+0x222>
 800245c:	6823      	ldr	r3, [r4, #0]
 800245e:	07d8      	lsls	r0, r3, #31
 8002460:	d50f      	bpl.n	8002482 <_printf_float+0x242>
 8002462:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8002466:	4631      	mov	r1, r6
 8002468:	4628      	mov	r0, r5
 800246a:	47b8      	blx	r7
 800246c:	3001      	adds	r0, #1
 800246e:	f43f af42 	beq.w	80022f6 <_printf_float+0xb6>
 8002472:	f04f 0900 	mov.w	r9, #0
 8002476:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 800247a:	f104 0a1a 	add.w	sl, r4, #26
 800247e:	45c8      	cmp	r8, r9
 8002480:	dc09      	bgt.n	8002496 <_printf_float+0x256>
 8002482:	6823      	ldr	r3, [r4, #0]
 8002484:	079b      	lsls	r3, r3, #30
 8002486:	f100 8102 	bmi.w	800268e <_printf_float+0x44e>
 800248a:	68e0      	ldr	r0, [r4, #12]
 800248c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800248e:	4298      	cmp	r0, r3
 8002490:	bfb8      	it	lt
 8002492:	4618      	movlt	r0, r3
 8002494:	e731      	b.n	80022fa <_printf_float+0xba>
 8002496:	2301      	movs	r3, #1
 8002498:	4652      	mov	r2, sl
 800249a:	4631      	mov	r1, r6
 800249c:	4628      	mov	r0, r5
 800249e:	47b8      	blx	r7
 80024a0:	3001      	adds	r0, #1
 80024a2:	f43f af28 	beq.w	80022f6 <_printf_float+0xb6>
 80024a6:	f109 0901 	add.w	r9, r9, #1
 80024aa:	e7e8      	b.n	800247e <_printf_float+0x23e>
 80024ac:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80024ae:	2b00      	cmp	r3, #0
 80024b0:	dc38      	bgt.n	8002524 <_printf_float+0x2e4>
 80024b2:	2301      	movs	r3, #1
 80024b4:	4631      	mov	r1, r6
 80024b6:	4628      	mov	r0, r5
 80024b8:	4a19      	ldr	r2, [pc, #100]	@ (8002520 <_printf_float+0x2e0>)
 80024ba:	47b8      	blx	r7
 80024bc:	3001      	adds	r0, #1
 80024be:	f43f af1a 	beq.w	80022f6 <_printf_float+0xb6>
 80024c2:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 80024c6:	ea59 0303 	orrs.w	r3, r9, r3
 80024ca:	d102      	bne.n	80024d2 <_printf_float+0x292>
 80024cc:	6823      	ldr	r3, [r4, #0]
 80024ce:	07d9      	lsls	r1, r3, #31
 80024d0:	d5d7      	bpl.n	8002482 <_printf_float+0x242>
 80024d2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80024d6:	4631      	mov	r1, r6
 80024d8:	4628      	mov	r0, r5
 80024da:	47b8      	blx	r7
 80024dc:	3001      	adds	r0, #1
 80024de:	f43f af0a 	beq.w	80022f6 <_printf_float+0xb6>
 80024e2:	f04f 0a00 	mov.w	sl, #0
 80024e6:	f104 0b1a 	add.w	fp, r4, #26
 80024ea:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80024ec:	425b      	negs	r3, r3
 80024ee:	4553      	cmp	r3, sl
 80024f0:	dc01      	bgt.n	80024f6 <_printf_float+0x2b6>
 80024f2:	464b      	mov	r3, r9
 80024f4:	e793      	b.n	800241e <_printf_float+0x1de>
 80024f6:	2301      	movs	r3, #1
 80024f8:	465a      	mov	r2, fp
 80024fa:	4631      	mov	r1, r6
 80024fc:	4628      	mov	r0, r5
 80024fe:	47b8      	blx	r7
 8002500:	3001      	adds	r0, #1
 8002502:	f43f aef8 	beq.w	80022f6 <_printf_float+0xb6>
 8002506:	f10a 0a01 	add.w	sl, sl, #1
 800250a:	e7ee      	b.n	80024ea <_printf_float+0x2aa>
 800250c:	7fefffff 	.word	0x7fefffff
 8002510:	0800668e 	.word	0x0800668e
 8002514:	0800668a 	.word	0x0800668a
 8002518:	08006696 	.word	0x08006696
 800251c:	08006692 	.word	0x08006692
 8002520:	0800669a 	.word	0x0800669a
 8002524:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8002526:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 800252a:	4553      	cmp	r3, sl
 800252c:	bfa8      	it	ge
 800252e:	4653      	movge	r3, sl
 8002530:	2b00      	cmp	r3, #0
 8002532:	4699      	mov	r9, r3
 8002534:	dc36      	bgt.n	80025a4 <_printf_float+0x364>
 8002536:	f04f 0b00 	mov.w	fp, #0
 800253a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800253e:	f104 021a 	add.w	r2, r4, #26
 8002542:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8002544:	930a      	str	r3, [sp, #40]	@ 0x28
 8002546:	eba3 0309 	sub.w	r3, r3, r9
 800254a:	455b      	cmp	r3, fp
 800254c:	dc31      	bgt.n	80025b2 <_printf_float+0x372>
 800254e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002550:	459a      	cmp	sl, r3
 8002552:	dc3a      	bgt.n	80025ca <_printf_float+0x38a>
 8002554:	6823      	ldr	r3, [r4, #0]
 8002556:	07da      	lsls	r2, r3, #31
 8002558:	d437      	bmi.n	80025ca <_printf_float+0x38a>
 800255a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800255c:	ebaa 0903 	sub.w	r9, sl, r3
 8002560:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002562:	ebaa 0303 	sub.w	r3, sl, r3
 8002566:	4599      	cmp	r9, r3
 8002568:	bfa8      	it	ge
 800256a:	4699      	movge	r9, r3
 800256c:	f1b9 0f00 	cmp.w	r9, #0
 8002570:	dc33      	bgt.n	80025da <_printf_float+0x39a>
 8002572:	f04f 0800 	mov.w	r8, #0
 8002576:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800257a:	f104 0b1a 	add.w	fp, r4, #26
 800257e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002580:	ebaa 0303 	sub.w	r3, sl, r3
 8002584:	eba3 0309 	sub.w	r3, r3, r9
 8002588:	4543      	cmp	r3, r8
 800258a:	f77f af7a 	ble.w	8002482 <_printf_float+0x242>
 800258e:	2301      	movs	r3, #1
 8002590:	465a      	mov	r2, fp
 8002592:	4631      	mov	r1, r6
 8002594:	4628      	mov	r0, r5
 8002596:	47b8      	blx	r7
 8002598:	3001      	adds	r0, #1
 800259a:	f43f aeac 	beq.w	80022f6 <_printf_float+0xb6>
 800259e:	f108 0801 	add.w	r8, r8, #1
 80025a2:	e7ec      	b.n	800257e <_printf_float+0x33e>
 80025a4:	4642      	mov	r2, r8
 80025a6:	4631      	mov	r1, r6
 80025a8:	4628      	mov	r0, r5
 80025aa:	47b8      	blx	r7
 80025ac:	3001      	adds	r0, #1
 80025ae:	d1c2      	bne.n	8002536 <_printf_float+0x2f6>
 80025b0:	e6a1      	b.n	80022f6 <_printf_float+0xb6>
 80025b2:	2301      	movs	r3, #1
 80025b4:	4631      	mov	r1, r6
 80025b6:	4628      	mov	r0, r5
 80025b8:	920a      	str	r2, [sp, #40]	@ 0x28
 80025ba:	47b8      	blx	r7
 80025bc:	3001      	adds	r0, #1
 80025be:	f43f ae9a 	beq.w	80022f6 <_printf_float+0xb6>
 80025c2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80025c4:	f10b 0b01 	add.w	fp, fp, #1
 80025c8:	e7bb      	b.n	8002542 <_printf_float+0x302>
 80025ca:	4631      	mov	r1, r6
 80025cc:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80025d0:	4628      	mov	r0, r5
 80025d2:	47b8      	blx	r7
 80025d4:	3001      	adds	r0, #1
 80025d6:	d1c0      	bne.n	800255a <_printf_float+0x31a>
 80025d8:	e68d      	b.n	80022f6 <_printf_float+0xb6>
 80025da:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80025dc:	464b      	mov	r3, r9
 80025de:	4631      	mov	r1, r6
 80025e0:	4628      	mov	r0, r5
 80025e2:	4442      	add	r2, r8
 80025e4:	47b8      	blx	r7
 80025e6:	3001      	adds	r0, #1
 80025e8:	d1c3      	bne.n	8002572 <_printf_float+0x332>
 80025ea:	e684      	b.n	80022f6 <_printf_float+0xb6>
 80025ec:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 80025f0:	f1ba 0f01 	cmp.w	sl, #1
 80025f4:	dc01      	bgt.n	80025fa <_printf_float+0x3ba>
 80025f6:	07db      	lsls	r3, r3, #31
 80025f8:	d536      	bpl.n	8002668 <_printf_float+0x428>
 80025fa:	2301      	movs	r3, #1
 80025fc:	4642      	mov	r2, r8
 80025fe:	4631      	mov	r1, r6
 8002600:	4628      	mov	r0, r5
 8002602:	47b8      	blx	r7
 8002604:	3001      	adds	r0, #1
 8002606:	f43f ae76 	beq.w	80022f6 <_printf_float+0xb6>
 800260a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800260e:	4631      	mov	r1, r6
 8002610:	4628      	mov	r0, r5
 8002612:	47b8      	blx	r7
 8002614:	3001      	adds	r0, #1
 8002616:	f43f ae6e 	beq.w	80022f6 <_printf_float+0xb6>
 800261a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800261e:	2200      	movs	r2, #0
 8002620:	2300      	movs	r3, #0
 8002622:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8002626:	f7fe f9bf 	bl	80009a8 <__aeabi_dcmpeq>
 800262a:	b9c0      	cbnz	r0, 800265e <_printf_float+0x41e>
 800262c:	4653      	mov	r3, sl
 800262e:	f108 0201 	add.w	r2, r8, #1
 8002632:	4631      	mov	r1, r6
 8002634:	4628      	mov	r0, r5
 8002636:	47b8      	blx	r7
 8002638:	3001      	adds	r0, #1
 800263a:	d10c      	bne.n	8002656 <_printf_float+0x416>
 800263c:	e65b      	b.n	80022f6 <_printf_float+0xb6>
 800263e:	2301      	movs	r3, #1
 8002640:	465a      	mov	r2, fp
 8002642:	4631      	mov	r1, r6
 8002644:	4628      	mov	r0, r5
 8002646:	47b8      	blx	r7
 8002648:	3001      	adds	r0, #1
 800264a:	f43f ae54 	beq.w	80022f6 <_printf_float+0xb6>
 800264e:	f108 0801 	add.w	r8, r8, #1
 8002652:	45d0      	cmp	r8, sl
 8002654:	dbf3      	blt.n	800263e <_printf_float+0x3fe>
 8002656:	464b      	mov	r3, r9
 8002658:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 800265c:	e6e0      	b.n	8002420 <_printf_float+0x1e0>
 800265e:	f04f 0800 	mov.w	r8, #0
 8002662:	f104 0b1a 	add.w	fp, r4, #26
 8002666:	e7f4      	b.n	8002652 <_printf_float+0x412>
 8002668:	2301      	movs	r3, #1
 800266a:	4642      	mov	r2, r8
 800266c:	e7e1      	b.n	8002632 <_printf_float+0x3f2>
 800266e:	2301      	movs	r3, #1
 8002670:	464a      	mov	r2, r9
 8002672:	4631      	mov	r1, r6
 8002674:	4628      	mov	r0, r5
 8002676:	47b8      	blx	r7
 8002678:	3001      	adds	r0, #1
 800267a:	f43f ae3c 	beq.w	80022f6 <_printf_float+0xb6>
 800267e:	f108 0801 	add.w	r8, r8, #1
 8002682:	68e3      	ldr	r3, [r4, #12]
 8002684:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8002686:	1a5b      	subs	r3, r3, r1
 8002688:	4543      	cmp	r3, r8
 800268a:	dcf0      	bgt.n	800266e <_printf_float+0x42e>
 800268c:	e6fd      	b.n	800248a <_printf_float+0x24a>
 800268e:	f04f 0800 	mov.w	r8, #0
 8002692:	f104 0919 	add.w	r9, r4, #25
 8002696:	e7f4      	b.n	8002682 <_printf_float+0x442>

08002698 <_printf_common>:
 8002698:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800269c:	4616      	mov	r6, r2
 800269e:	4698      	mov	r8, r3
 80026a0:	688a      	ldr	r2, [r1, #8]
 80026a2:	690b      	ldr	r3, [r1, #16]
 80026a4:	4607      	mov	r7, r0
 80026a6:	4293      	cmp	r3, r2
 80026a8:	bfb8      	it	lt
 80026aa:	4613      	movlt	r3, r2
 80026ac:	6033      	str	r3, [r6, #0]
 80026ae:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80026b2:	460c      	mov	r4, r1
 80026b4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80026b8:	b10a      	cbz	r2, 80026be <_printf_common+0x26>
 80026ba:	3301      	adds	r3, #1
 80026bc:	6033      	str	r3, [r6, #0]
 80026be:	6823      	ldr	r3, [r4, #0]
 80026c0:	0699      	lsls	r1, r3, #26
 80026c2:	bf42      	ittt	mi
 80026c4:	6833      	ldrmi	r3, [r6, #0]
 80026c6:	3302      	addmi	r3, #2
 80026c8:	6033      	strmi	r3, [r6, #0]
 80026ca:	6825      	ldr	r5, [r4, #0]
 80026cc:	f015 0506 	ands.w	r5, r5, #6
 80026d0:	d106      	bne.n	80026e0 <_printf_common+0x48>
 80026d2:	f104 0a19 	add.w	sl, r4, #25
 80026d6:	68e3      	ldr	r3, [r4, #12]
 80026d8:	6832      	ldr	r2, [r6, #0]
 80026da:	1a9b      	subs	r3, r3, r2
 80026dc:	42ab      	cmp	r3, r5
 80026de:	dc2b      	bgt.n	8002738 <_printf_common+0xa0>
 80026e0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80026e4:	6822      	ldr	r2, [r4, #0]
 80026e6:	3b00      	subs	r3, #0
 80026e8:	bf18      	it	ne
 80026ea:	2301      	movne	r3, #1
 80026ec:	0692      	lsls	r2, r2, #26
 80026ee:	d430      	bmi.n	8002752 <_printf_common+0xba>
 80026f0:	4641      	mov	r1, r8
 80026f2:	4638      	mov	r0, r7
 80026f4:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80026f8:	47c8      	blx	r9
 80026fa:	3001      	adds	r0, #1
 80026fc:	d023      	beq.n	8002746 <_printf_common+0xae>
 80026fe:	6823      	ldr	r3, [r4, #0]
 8002700:	6922      	ldr	r2, [r4, #16]
 8002702:	f003 0306 	and.w	r3, r3, #6
 8002706:	2b04      	cmp	r3, #4
 8002708:	bf14      	ite	ne
 800270a:	2500      	movne	r5, #0
 800270c:	6833      	ldreq	r3, [r6, #0]
 800270e:	f04f 0600 	mov.w	r6, #0
 8002712:	bf08      	it	eq
 8002714:	68e5      	ldreq	r5, [r4, #12]
 8002716:	f104 041a 	add.w	r4, r4, #26
 800271a:	bf08      	it	eq
 800271c:	1aed      	subeq	r5, r5, r3
 800271e:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8002722:	bf08      	it	eq
 8002724:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002728:	4293      	cmp	r3, r2
 800272a:	bfc4      	itt	gt
 800272c:	1a9b      	subgt	r3, r3, r2
 800272e:	18ed      	addgt	r5, r5, r3
 8002730:	42b5      	cmp	r5, r6
 8002732:	d11a      	bne.n	800276a <_printf_common+0xd2>
 8002734:	2000      	movs	r0, #0
 8002736:	e008      	b.n	800274a <_printf_common+0xb2>
 8002738:	2301      	movs	r3, #1
 800273a:	4652      	mov	r2, sl
 800273c:	4641      	mov	r1, r8
 800273e:	4638      	mov	r0, r7
 8002740:	47c8      	blx	r9
 8002742:	3001      	adds	r0, #1
 8002744:	d103      	bne.n	800274e <_printf_common+0xb6>
 8002746:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800274a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800274e:	3501      	adds	r5, #1
 8002750:	e7c1      	b.n	80026d6 <_printf_common+0x3e>
 8002752:	2030      	movs	r0, #48	@ 0x30
 8002754:	18e1      	adds	r1, r4, r3
 8002756:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800275a:	1c5a      	adds	r2, r3, #1
 800275c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8002760:	4422      	add	r2, r4
 8002762:	3302      	adds	r3, #2
 8002764:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8002768:	e7c2      	b.n	80026f0 <_printf_common+0x58>
 800276a:	2301      	movs	r3, #1
 800276c:	4622      	mov	r2, r4
 800276e:	4641      	mov	r1, r8
 8002770:	4638      	mov	r0, r7
 8002772:	47c8      	blx	r9
 8002774:	3001      	adds	r0, #1
 8002776:	d0e6      	beq.n	8002746 <_printf_common+0xae>
 8002778:	3601      	adds	r6, #1
 800277a:	e7d9      	b.n	8002730 <_printf_common+0x98>

0800277c <_printf_i>:
 800277c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002780:	7e0f      	ldrb	r7, [r1, #24]
 8002782:	4691      	mov	r9, r2
 8002784:	2f78      	cmp	r7, #120	@ 0x78
 8002786:	4680      	mov	r8, r0
 8002788:	460c      	mov	r4, r1
 800278a:	469a      	mov	sl, r3
 800278c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800278e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8002792:	d807      	bhi.n	80027a4 <_printf_i+0x28>
 8002794:	2f62      	cmp	r7, #98	@ 0x62
 8002796:	d80a      	bhi.n	80027ae <_printf_i+0x32>
 8002798:	2f00      	cmp	r7, #0
 800279a:	f000 80d1 	beq.w	8002940 <_printf_i+0x1c4>
 800279e:	2f58      	cmp	r7, #88	@ 0x58
 80027a0:	f000 80b8 	beq.w	8002914 <_printf_i+0x198>
 80027a4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80027a8:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80027ac:	e03a      	b.n	8002824 <_printf_i+0xa8>
 80027ae:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80027b2:	2b15      	cmp	r3, #21
 80027b4:	d8f6      	bhi.n	80027a4 <_printf_i+0x28>
 80027b6:	a101      	add	r1, pc, #4	@ (adr r1, 80027bc <_printf_i+0x40>)
 80027b8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80027bc:	08002815 	.word	0x08002815
 80027c0:	08002829 	.word	0x08002829
 80027c4:	080027a5 	.word	0x080027a5
 80027c8:	080027a5 	.word	0x080027a5
 80027cc:	080027a5 	.word	0x080027a5
 80027d0:	080027a5 	.word	0x080027a5
 80027d4:	08002829 	.word	0x08002829
 80027d8:	080027a5 	.word	0x080027a5
 80027dc:	080027a5 	.word	0x080027a5
 80027e0:	080027a5 	.word	0x080027a5
 80027e4:	080027a5 	.word	0x080027a5
 80027e8:	08002927 	.word	0x08002927
 80027ec:	08002853 	.word	0x08002853
 80027f0:	080028e1 	.word	0x080028e1
 80027f4:	080027a5 	.word	0x080027a5
 80027f8:	080027a5 	.word	0x080027a5
 80027fc:	08002949 	.word	0x08002949
 8002800:	080027a5 	.word	0x080027a5
 8002804:	08002853 	.word	0x08002853
 8002808:	080027a5 	.word	0x080027a5
 800280c:	080027a5 	.word	0x080027a5
 8002810:	080028e9 	.word	0x080028e9
 8002814:	6833      	ldr	r3, [r6, #0]
 8002816:	1d1a      	adds	r2, r3, #4
 8002818:	681b      	ldr	r3, [r3, #0]
 800281a:	6032      	str	r2, [r6, #0]
 800281c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002820:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8002824:	2301      	movs	r3, #1
 8002826:	e09c      	b.n	8002962 <_printf_i+0x1e6>
 8002828:	6833      	ldr	r3, [r6, #0]
 800282a:	6820      	ldr	r0, [r4, #0]
 800282c:	1d19      	adds	r1, r3, #4
 800282e:	6031      	str	r1, [r6, #0]
 8002830:	0606      	lsls	r6, r0, #24
 8002832:	d501      	bpl.n	8002838 <_printf_i+0xbc>
 8002834:	681d      	ldr	r5, [r3, #0]
 8002836:	e003      	b.n	8002840 <_printf_i+0xc4>
 8002838:	0645      	lsls	r5, r0, #25
 800283a:	d5fb      	bpl.n	8002834 <_printf_i+0xb8>
 800283c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8002840:	2d00      	cmp	r5, #0
 8002842:	da03      	bge.n	800284c <_printf_i+0xd0>
 8002844:	232d      	movs	r3, #45	@ 0x2d
 8002846:	426d      	negs	r5, r5
 8002848:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800284c:	230a      	movs	r3, #10
 800284e:	4858      	ldr	r0, [pc, #352]	@ (80029b0 <_printf_i+0x234>)
 8002850:	e011      	b.n	8002876 <_printf_i+0xfa>
 8002852:	6821      	ldr	r1, [r4, #0]
 8002854:	6833      	ldr	r3, [r6, #0]
 8002856:	0608      	lsls	r0, r1, #24
 8002858:	f853 5b04 	ldr.w	r5, [r3], #4
 800285c:	d402      	bmi.n	8002864 <_printf_i+0xe8>
 800285e:	0649      	lsls	r1, r1, #25
 8002860:	bf48      	it	mi
 8002862:	b2ad      	uxthmi	r5, r5
 8002864:	2f6f      	cmp	r7, #111	@ 0x6f
 8002866:	6033      	str	r3, [r6, #0]
 8002868:	bf14      	ite	ne
 800286a:	230a      	movne	r3, #10
 800286c:	2308      	moveq	r3, #8
 800286e:	4850      	ldr	r0, [pc, #320]	@ (80029b0 <_printf_i+0x234>)
 8002870:	2100      	movs	r1, #0
 8002872:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8002876:	6866      	ldr	r6, [r4, #4]
 8002878:	2e00      	cmp	r6, #0
 800287a:	60a6      	str	r6, [r4, #8]
 800287c:	db05      	blt.n	800288a <_printf_i+0x10e>
 800287e:	6821      	ldr	r1, [r4, #0]
 8002880:	432e      	orrs	r6, r5
 8002882:	f021 0104 	bic.w	r1, r1, #4
 8002886:	6021      	str	r1, [r4, #0]
 8002888:	d04b      	beq.n	8002922 <_printf_i+0x1a6>
 800288a:	4616      	mov	r6, r2
 800288c:	fbb5 f1f3 	udiv	r1, r5, r3
 8002890:	fb03 5711 	mls	r7, r3, r1, r5
 8002894:	5dc7      	ldrb	r7, [r0, r7]
 8002896:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800289a:	462f      	mov	r7, r5
 800289c:	42bb      	cmp	r3, r7
 800289e:	460d      	mov	r5, r1
 80028a0:	d9f4      	bls.n	800288c <_printf_i+0x110>
 80028a2:	2b08      	cmp	r3, #8
 80028a4:	d10b      	bne.n	80028be <_printf_i+0x142>
 80028a6:	6823      	ldr	r3, [r4, #0]
 80028a8:	07df      	lsls	r7, r3, #31
 80028aa:	d508      	bpl.n	80028be <_printf_i+0x142>
 80028ac:	6923      	ldr	r3, [r4, #16]
 80028ae:	6861      	ldr	r1, [r4, #4]
 80028b0:	4299      	cmp	r1, r3
 80028b2:	bfde      	ittt	le
 80028b4:	2330      	movle	r3, #48	@ 0x30
 80028b6:	f806 3c01 	strble.w	r3, [r6, #-1]
 80028ba:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 80028be:	1b92      	subs	r2, r2, r6
 80028c0:	6122      	str	r2, [r4, #16]
 80028c2:	464b      	mov	r3, r9
 80028c4:	4621      	mov	r1, r4
 80028c6:	4640      	mov	r0, r8
 80028c8:	f8cd a000 	str.w	sl, [sp]
 80028cc:	aa03      	add	r2, sp, #12
 80028ce:	f7ff fee3 	bl	8002698 <_printf_common>
 80028d2:	3001      	adds	r0, #1
 80028d4:	d14a      	bne.n	800296c <_printf_i+0x1f0>
 80028d6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80028da:	b004      	add	sp, #16
 80028dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80028e0:	6823      	ldr	r3, [r4, #0]
 80028e2:	f043 0320 	orr.w	r3, r3, #32
 80028e6:	6023      	str	r3, [r4, #0]
 80028e8:	2778      	movs	r7, #120	@ 0x78
 80028ea:	4832      	ldr	r0, [pc, #200]	@ (80029b4 <_printf_i+0x238>)
 80028ec:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80028f0:	6823      	ldr	r3, [r4, #0]
 80028f2:	6831      	ldr	r1, [r6, #0]
 80028f4:	061f      	lsls	r7, r3, #24
 80028f6:	f851 5b04 	ldr.w	r5, [r1], #4
 80028fa:	d402      	bmi.n	8002902 <_printf_i+0x186>
 80028fc:	065f      	lsls	r7, r3, #25
 80028fe:	bf48      	it	mi
 8002900:	b2ad      	uxthmi	r5, r5
 8002902:	6031      	str	r1, [r6, #0]
 8002904:	07d9      	lsls	r1, r3, #31
 8002906:	bf44      	itt	mi
 8002908:	f043 0320 	orrmi.w	r3, r3, #32
 800290c:	6023      	strmi	r3, [r4, #0]
 800290e:	b11d      	cbz	r5, 8002918 <_printf_i+0x19c>
 8002910:	2310      	movs	r3, #16
 8002912:	e7ad      	b.n	8002870 <_printf_i+0xf4>
 8002914:	4826      	ldr	r0, [pc, #152]	@ (80029b0 <_printf_i+0x234>)
 8002916:	e7e9      	b.n	80028ec <_printf_i+0x170>
 8002918:	6823      	ldr	r3, [r4, #0]
 800291a:	f023 0320 	bic.w	r3, r3, #32
 800291e:	6023      	str	r3, [r4, #0]
 8002920:	e7f6      	b.n	8002910 <_printf_i+0x194>
 8002922:	4616      	mov	r6, r2
 8002924:	e7bd      	b.n	80028a2 <_printf_i+0x126>
 8002926:	6833      	ldr	r3, [r6, #0]
 8002928:	6825      	ldr	r5, [r4, #0]
 800292a:	1d18      	adds	r0, r3, #4
 800292c:	6961      	ldr	r1, [r4, #20]
 800292e:	6030      	str	r0, [r6, #0]
 8002930:	062e      	lsls	r6, r5, #24
 8002932:	681b      	ldr	r3, [r3, #0]
 8002934:	d501      	bpl.n	800293a <_printf_i+0x1be>
 8002936:	6019      	str	r1, [r3, #0]
 8002938:	e002      	b.n	8002940 <_printf_i+0x1c4>
 800293a:	0668      	lsls	r0, r5, #25
 800293c:	d5fb      	bpl.n	8002936 <_printf_i+0x1ba>
 800293e:	8019      	strh	r1, [r3, #0]
 8002940:	2300      	movs	r3, #0
 8002942:	4616      	mov	r6, r2
 8002944:	6123      	str	r3, [r4, #16]
 8002946:	e7bc      	b.n	80028c2 <_printf_i+0x146>
 8002948:	6833      	ldr	r3, [r6, #0]
 800294a:	2100      	movs	r1, #0
 800294c:	1d1a      	adds	r2, r3, #4
 800294e:	6032      	str	r2, [r6, #0]
 8002950:	681e      	ldr	r6, [r3, #0]
 8002952:	6862      	ldr	r2, [r4, #4]
 8002954:	4630      	mov	r0, r6
 8002956:	f000 fbf0 	bl	800313a <memchr>
 800295a:	b108      	cbz	r0, 8002960 <_printf_i+0x1e4>
 800295c:	1b80      	subs	r0, r0, r6
 800295e:	6060      	str	r0, [r4, #4]
 8002960:	6863      	ldr	r3, [r4, #4]
 8002962:	6123      	str	r3, [r4, #16]
 8002964:	2300      	movs	r3, #0
 8002966:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800296a:	e7aa      	b.n	80028c2 <_printf_i+0x146>
 800296c:	4632      	mov	r2, r6
 800296e:	4649      	mov	r1, r9
 8002970:	4640      	mov	r0, r8
 8002972:	6923      	ldr	r3, [r4, #16]
 8002974:	47d0      	blx	sl
 8002976:	3001      	adds	r0, #1
 8002978:	d0ad      	beq.n	80028d6 <_printf_i+0x15a>
 800297a:	6823      	ldr	r3, [r4, #0]
 800297c:	079b      	lsls	r3, r3, #30
 800297e:	d413      	bmi.n	80029a8 <_printf_i+0x22c>
 8002980:	68e0      	ldr	r0, [r4, #12]
 8002982:	9b03      	ldr	r3, [sp, #12]
 8002984:	4298      	cmp	r0, r3
 8002986:	bfb8      	it	lt
 8002988:	4618      	movlt	r0, r3
 800298a:	e7a6      	b.n	80028da <_printf_i+0x15e>
 800298c:	2301      	movs	r3, #1
 800298e:	4632      	mov	r2, r6
 8002990:	4649      	mov	r1, r9
 8002992:	4640      	mov	r0, r8
 8002994:	47d0      	blx	sl
 8002996:	3001      	adds	r0, #1
 8002998:	d09d      	beq.n	80028d6 <_printf_i+0x15a>
 800299a:	3501      	adds	r5, #1
 800299c:	68e3      	ldr	r3, [r4, #12]
 800299e:	9903      	ldr	r1, [sp, #12]
 80029a0:	1a5b      	subs	r3, r3, r1
 80029a2:	42ab      	cmp	r3, r5
 80029a4:	dcf2      	bgt.n	800298c <_printf_i+0x210>
 80029a6:	e7eb      	b.n	8002980 <_printf_i+0x204>
 80029a8:	2500      	movs	r5, #0
 80029aa:	f104 0619 	add.w	r6, r4, #25
 80029ae:	e7f5      	b.n	800299c <_printf_i+0x220>
 80029b0:	0800669c 	.word	0x0800669c
 80029b4:	080066ad 	.word	0x080066ad

080029b8 <_scanf_float>:
 80029b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80029bc:	b087      	sub	sp, #28
 80029be:	9303      	str	r3, [sp, #12]
 80029c0:	688b      	ldr	r3, [r1, #8]
 80029c2:	4691      	mov	r9, r2
 80029c4:	1e5a      	subs	r2, r3, #1
 80029c6:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 80029ca:	bf82      	ittt	hi
 80029cc:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 80029d0:	eb03 0b05 	addhi.w	fp, r3, r5
 80029d4:	f240 135d 	movwhi	r3, #349	@ 0x15d
 80029d8:	460a      	mov	r2, r1
 80029da:	f04f 0500 	mov.w	r5, #0
 80029de:	bf88      	it	hi
 80029e0:	608b      	strhi	r3, [r1, #8]
 80029e2:	680b      	ldr	r3, [r1, #0]
 80029e4:	4680      	mov	r8, r0
 80029e6:	f443 63f0 	orr.w	r3, r3, #1920	@ 0x780
 80029ea:	f842 3b1c 	str.w	r3, [r2], #28
 80029ee:	460c      	mov	r4, r1
 80029f0:	bf98      	it	ls
 80029f2:	f04f 0b00 	movls.w	fp, #0
 80029f6:	4616      	mov	r6, r2
 80029f8:	46aa      	mov	sl, r5
 80029fa:	462f      	mov	r7, r5
 80029fc:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8002a00:	9201      	str	r2, [sp, #4]
 8002a02:	9502      	str	r5, [sp, #8]
 8002a04:	68a2      	ldr	r2, [r4, #8]
 8002a06:	b15a      	cbz	r2, 8002a20 <_scanf_float+0x68>
 8002a08:	f8d9 3000 	ldr.w	r3, [r9]
 8002a0c:	781b      	ldrb	r3, [r3, #0]
 8002a0e:	2b4e      	cmp	r3, #78	@ 0x4e
 8002a10:	d862      	bhi.n	8002ad8 <_scanf_float+0x120>
 8002a12:	2b40      	cmp	r3, #64	@ 0x40
 8002a14:	d83a      	bhi.n	8002a8c <_scanf_float+0xd4>
 8002a16:	f1a3 012b 	sub.w	r1, r3, #43	@ 0x2b
 8002a1a:	b2c8      	uxtb	r0, r1
 8002a1c:	280e      	cmp	r0, #14
 8002a1e:	d938      	bls.n	8002a92 <_scanf_float+0xda>
 8002a20:	b11f      	cbz	r7, 8002a2a <_scanf_float+0x72>
 8002a22:	6823      	ldr	r3, [r4, #0]
 8002a24:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8002a28:	6023      	str	r3, [r4, #0]
 8002a2a:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8002a2e:	f1ba 0f01 	cmp.w	sl, #1
 8002a32:	f200 8114 	bhi.w	8002c5e <_scanf_float+0x2a6>
 8002a36:	9b01      	ldr	r3, [sp, #4]
 8002a38:	429e      	cmp	r6, r3
 8002a3a:	f200 8105 	bhi.w	8002c48 <_scanf_float+0x290>
 8002a3e:	2001      	movs	r0, #1
 8002a40:	b007      	add	sp, #28
 8002a42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002a46:	f1a3 0261 	sub.w	r2, r3, #97	@ 0x61
 8002a4a:	2a0d      	cmp	r2, #13
 8002a4c:	d8e8      	bhi.n	8002a20 <_scanf_float+0x68>
 8002a4e:	a101      	add	r1, pc, #4	@ (adr r1, 8002a54 <_scanf_float+0x9c>)
 8002a50:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8002a54:	08002b9d 	.word	0x08002b9d
 8002a58:	08002a21 	.word	0x08002a21
 8002a5c:	08002a21 	.word	0x08002a21
 8002a60:	08002a21 	.word	0x08002a21
 8002a64:	08002bf9 	.word	0x08002bf9
 8002a68:	08002bd3 	.word	0x08002bd3
 8002a6c:	08002a21 	.word	0x08002a21
 8002a70:	08002a21 	.word	0x08002a21
 8002a74:	08002bab 	.word	0x08002bab
 8002a78:	08002a21 	.word	0x08002a21
 8002a7c:	08002a21 	.word	0x08002a21
 8002a80:	08002a21 	.word	0x08002a21
 8002a84:	08002a21 	.word	0x08002a21
 8002a88:	08002b67 	.word	0x08002b67
 8002a8c:	f1a3 0241 	sub.w	r2, r3, #65	@ 0x41
 8002a90:	e7db      	b.n	8002a4a <_scanf_float+0x92>
 8002a92:	290e      	cmp	r1, #14
 8002a94:	d8c4      	bhi.n	8002a20 <_scanf_float+0x68>
 8002a96:	a001      	add	r0, pc, #4	@ (adr r0, 8002a9c <_scanf_float+0xe4>)
 8002a98:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8002a9c:	08002b57 	.word	0x08002b57
 8002aa0:	08002a21 	.word	0x08002a21
 8002aa4:	08002b57 	.word	0x08002b57
 8002aa8:	08002be7 	.word	0x08002be7
 8002aac:	08002a21 	.word	0x08002a21
 8002ab0:	08002af9 	.word	0x08002af9
 8002ab4:	08002b3d 	.word	0x08002b3d
 8002ab8:	08002b3d 	.word	0x08002b3d
 8002abc:	08002b3d 	.word	0x08002b3d
 8002ac0:	08002b3d 	.word	0x08002b3d
 8002ac4:	08002b3d 	.word	0x08002b3d
 8002ac8:	08002b3d 	.word	0x08002b3d
 8002acc:	08002b3d 	.word	0x08002b3d
 8002ad0:	08002b3d 	.word	0x08002b3d
 8002ad4:	08002b3d 	.word	0x08002b3d
 8002ad8:	2b6e      	cmp	r3, #110	@ 0x6e
 8002ada:	d809      	bhi.n	8002af0 <_scanf_float+0x138>
 8002adc:	2b60      	cmp	r3, #96	@ 0x60
 8002ade:	d8b2      	bhi.n	8002a46 <_scanf_float+0x8e>
 8002ae0:	2b54      	cmp	r3, #84	@ 0x54
 8002ae2:	d07b      	beq.n	8002bdc <_scanf_float+0x224>
 8002ae4:	2b59      	cmp	r3, #89	@ 0x59
 8002ae6:	d19b      	bne.n	8002a20 <_scanf_float+0x68>
 8002ae8:	2d07      	cmp	r5, #7
 8002aea:	d199      	bne.n	8002a20 <_scanf_float+0x68>
 8002aec:	2508      	movs	r5, #8
 8002aee:	e02f      	b.n	8002b50 <_scanf_float+0x198>
 8002af0:	2b74      	cmp	r3, #116	@ 0x74
 8002af2:	d073      	beq.n	8002bdc <_scanf_float+0x224>
 8002af4:	2b79      	cmp	r3, #121	@ 0x79
 8002af6:	e7f6      	b.n	8002ae6 <_scanf_float+0x12e>
 8002af8:	6821      	ldr	r1, [r4, #0]
 8002afa:	05c8      	lsls	r0, r1, #23
 8002afc:	d51e      	bpl.n	8002b3c <_scanf_float+0x184>
 8002afe:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 8002b02:	6021      	str	r1, [r4, #0]
 8002b04:	3701      	adds	r7, #1
 8002b06:	f1bb 0f00 	cmp.w	fp, #0
 8002b0a:	d003      	beq.n	8002b14 <_scanf_float+0x15c>
 8002b0c:	3201      	adds	r2, #1
 8002b0e:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
 8002b12:	60a2      	str	r2, [r4, #8]
 8002b14:	68a3      	ldr	r3, [r4, #8]
 8002b16:	3b01      	subs	r3, #1
 8002b18:	60a3      	str	r3, [r4, #8]
 8002b1a:	6923      	ldr	r3, [r4, #16]
 8002b1c:	3301      	adds	r3, #1
 8002b1e:	6123      	str	r3, [r4, #16]
 8002b20:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8002b24:	3b01      	subs	r3, #1
 8002b26:	2b00      	cmp	r3, #0
 8002b28:	f8c9 3004 	str.w	r3, [r9, #4]
 8002b2c:	f340 8083 	ble.w	8002c36 <_scanf_float+0x27e>
 8002b30:	f8d9 3000 	ldr.w	r3, [r9]
 8002b34:	3301      	adds	r3, #1
 8002b36:	f8c9 3000 	str.w	r3, [r9]
 8002b3a:	e763      	b.n	8002a04 <_scanf_float+0x4c>
 8002b3c:	eb1a 0105 	adds.w	r1, sl, r5
 8002b40:	f47f af6e 	bne.w	8002a20 <_scanf_float+0x68>
 8002b44:	460d      	mov	r5, r1
 8002b46:	468a      	mov	sl, r1
 8002b48:	6822      	ldr	r2, [r4, #0]
 8002b4a:	f422 72c0 	bic.w	r2, r2, #384	@ 0x180
 8002b4e:	6022      	str	r2, [r4, #0]
 8002b50:	f806 3b01 	strb.w	r3, [r6], #1
 8002b54:	e7de      	b.n	8002b14 <_scanf_float+0x15c>
 8002b56:	6822      	ldr	r2, [r4, #0]
 8002b58:	0610      	lsls	r0, r2, #24
 8002b5a:	f57f af61 	bpl.w	8002a20 <_scanf_float+0x68>
 8002b5e:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002b62:	6022      	str	r2, [r4, #0]
 8002b64:	e7f4      	b.n	8002b50 <_scanf_float+0x198>
 8002b66:	f1ba 0f00 	cmp.w	sl, #0
 8002b6a:	d10c      	bne.n	8002b86 <_scanf_float+0x1ce>
 8002b6c:	b977      	cbnz	r7, 8002b8c <_scanf_float+0x1d4>
 8002b6e:	6822      	ldr	r2, [r4, #0]
 8002b70:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 8002b74:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8002b78:	d108      	bne.n	8002b8c <_scanf_float+0x1d4>
 8002b7a:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8002b7e:	f04f 0a01 	mov.w	sl, #1
 8002b82:	6022      	str	r2, [r4, #0]
 8002b84:	e7e4      	b.n	8002b50 <_scanf_float+0x198>
 8002b86:	f1ba 0f02 	cmp.w	sl, #2
 8002b8a:	d051      	beq.n	8002c30 <_scanf_float+0x278>
 8002b8c:	2d01      	cmp	r5, #1
 8002b8e:	d002      	beq.n	8002b96 <_scanf_float+0x1de>
 8002b90:	2d04      	cmp	r5, #4
 8002b92:	f47f af45 	bne.w	8002a20 <_scanf_float+0x68>
 8002b96:	3501      	adds	r5, #1
 8002b98:	b2ed      	uxtb	r5, r5
 8002b9a:	e7d9      	b.n	8002b50 <_scanf_float+0x198>
 8002b9c:	f1ba 0f01 	cmp.w	sl, #1
 8002ba0:	f47f af3e 	bne.w	8002a20 <_scanf_float+0x68>
 8002ba4:	f04f 0a02 	mov.w	sl, #2
 8002ba8:	e7d2      	b.n	8002b50 <_scanf_float+0x198>
 8002baa:	b975      	cbnz	r5, 8002bca <_scanf_float+0x212>
 8002bac:	2f00      	cmp	r7, #0
 8002bae:	f47f af38 	bne.w	8002a22 <_scanf_float+0x6a>
 8002bb2:	6822      	ldr	r2, [r4, #0]
 8002bb4:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 8002bb8:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8002bbc:	f040 80ff 	bne.w	8002dbe <_scanf_float+0x406>
 8002bc0:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8002bc4:	2501      	movs	r5, #1
 8002bc6:	6022      	str	r2, [r4, #0]
 8002bc8:	e7c2      	b.n	8002b50 <_scanf_float+0x198>
 8002bca:	2d03      	cmp	r5, #3
 8002bcc:	d0e3      	beq.n	8002b96 <_scanf_float+0x1de>
 8002bce:	2d05      	cmp	r5, #5
 8002bd0:	e7df      	b.n	8002b92 <_scanf_float+0x1da>
 8002bd2:	2d02      	cmp	r5, #2
 8002bd4:	f47f af24 	bne.w	8002a20 <_scanf_float+0x68>
 8002bd8:	2503      	movs	r5, #3
 8002bda:	e7b9      	b.n	8002b50 <_scanf_float+0x198>
 8002bdc:	2d06      	cmp	r5, #6
 8002bde:	f47f af1f 	bne.w	8002a20 <_scanf_float+0x68>
 8002be2:	2507      	movs	r5, #7
 8002be4:	e7b4      	b.n	8002b50 <_scanf_float+0x198>
 8002be6:	6822      	ldr	r2, [r4, #0]
 8002be8:	0591      	lsls	r1, r2, #22
 8002bea:	f57f af19 	bpl.w	8002a20 <_scanf_float+0x68>
 8002bee:	f422 7220 	bic.w	r2, r2, #640	@ 0x280
 8002bf2:	6022      	str	r2, [r4, #0]
 8002bf4:	9702      	str	r7, [sp, #8]
 8002bf6:	e7ab      	b.n	8002b50 <_scanf_float+0x198>
 8002bf8:	6822      	ldr	r2, [r4, #0]
 8002bfa:	f402 61a0 	and.w	r1, r2, #1280	@ 0x500
 8002bfe:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8002c02:	d005      	beq.n	8002c10 <_scanf_float+0x258>
 8002c04:	0550      	lsls	r0, r2, #21
 8002c06:	f57f af0b 	bpl.w	8002a20 <_scanf_float+0x68>
 8002c0a:	2f00      	cmp	r7, #0
 8002c0c:	f000 80d7 	beq.w	8002dbe <_scanf_float+0x406>
 8002c10:	0591      	lsls	r1, r2, #22
 8002c12:	bf58      	it	pl
 8002c14:	9902      	ldrpl	r1, [sp, #8]
 8002c16:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8002c1a:	bf58      	it	pl
 8002c1c:	1a79      	subpl	r1, r7, r1
 8002c1e:	f442 72c0 	orr.w	r2, r2, #384	@ 0x180
 8002c22:	f04f 0700 	mov.w	r7, #0
 8002c26:	bf58      	it	pl
 8002c28:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8002c2c:	6022      	str	r2, [r4, #0]
 8002c2e:	e78f      	b.n	8002b50 <_scanf_float+0x198>
 8002c30:	f04f 0a03 	mov.w	sl, #3
 8002c34:	e78c      	b.n	8002b50 <_scanf_float+0x198>
 8002c36:	4649      	mov	r1, r9
 8002c38:	4640      	mov	r0, r8
 8002c3a:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 8002c3e:	4798      	blx	r3
 8002c40:	2800      	cmp	r0, #0
 8002c42:	f43f aedf 	beq.w	8002a04 <_scanf_float+0x4c>
 8002c46:	e6eb      	b.n	8002a20 <_scanf_float+0x68>
 8002c48:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002c4c:	464a      	mov	r2, r9
 8002c4e:	4640      	mov	r0, r8
 8002c50:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002c54:	4798      	blx	r3
 8002c56:	6923      	ldr	r3, [r4, #16]
 8002c58:	3b01      	subs	r3, #1
 8002c5a:	6123      	str	r3, [r4, #16]
 8002c5c:	e6eb      	b.n	8002a36 <_scanf_float+0x7e>
 8002c5e:	1e6b      	subs	r3, r5, #1
 8002c60:	2b06      	cmp	r3, #6
 8002c62:	d824      	bhi.n	8002cae <_scanf_float+0x2f6>
 8002c64:	2d02      	cmp	r5, #2
 8002c66:	d836      	bhi.n	8002cd6 <_scanf_float+0x31e>
 8002c68:	9b01      	ldr	r3, [sp, #4]
 8002c6a:	429e      	cmp	r6, r3
 8002c6c:	f67f aee7 	bls.w	8002a3e <_scanf_float+0x86>
 8002c70:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002c74:	464a      	mov	r2, r9
 8002c76:	4640      	mov	r0, r8
 8002c78:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002c7c:	4798      	blx	r3
 8002c7e:	6923      	ldr	r3, [r4, #16]
 8002c80:	3b01      	subs	r3, #1
 8002c82:	6123      	str	r3, [r4, #16]
 8002c84:	e7f0      	b.n	8002c68 <_scanf_float+0x2b0>
 8002c86:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002c8a:	464a      	mov	r2, r9
 8002c8c:	4640      	mov	r0, r8
 8002c8e:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
 8002c92:	4798      	blx	r3
 8002c94:	6923      	ldr	r3, [r4, #16]
 8002c96:	3b01      	subs	r3, #1
 8002c98:	6123      	str	r3, [r4, #16]
 8002c9a:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8002c9e:	fa5f fa8a 	uxtb.w	sl, sl
 8002ca2:	f1ba 0f02 	cmp.w	sl, #2
 8002ca6:	d1ee      	bne.n	8002c86 <_scanf_float+0x2ce>
 8002ca8:	3d03      	subs	r5, #3
 8002caa:	b2ed      	uxtb	r5, r5
 8002cac:	1b76      	subs	r6, r6, r5
 8002cae:	6823      	ldr	r3, [r4, #0]
 8002cb0:	05da      	lsls	r2, r3, #23
 8002cb2:	d530      	bpl.n	8002d16 <_scanf_float+0x35e>
 8002cb4:	055b      	lsls	r3, r3, #21
 8002cb6:	d511      	bpl.n	8002cdc <_scanf_float+0x324>
 8002cb8:	9b01      	ldr	r3, [sp, #4]
 8002cba:	429e      	cmp	r6, r3
 8002cbc:	f67f aebf 	bls.w	8002a3e <_scanf_float+0x86>
 8002cc0:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002cc4:	464a      	mov	r2, r9
 8002cc6:	4640      	mov	r0, r8
 8002cc8:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002ccc:	4798      	blx	r3
 8002cce:	6923      	ldr	r3, [r4, #16]
 8002cd0:	3b01      	subs	r3, #1
 8002cd2:	6123      	str	r3, [r4, #16]
 8002cd4:	e7f0      	b.n	8002cb8 <_scanf_float+0x300>
 8002cd6:	46aa      	mov	sl, r5
 8002cd8:	46b3      	mov	fp, r6
 8002cda:	e7de      	b.n	8002c9a <_scanf_float+0x2e2>
 8002cdc:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8002ce0:	6923      	ldr	r3, [r4, #16]
 8002ce2:	2965      	cmp	r1, #101	@ 0x65
 8002ce4:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 8002ce8:	f106 35ff 	add.w	r5, r6, #4294967295	@ 0xffffffff
 8002cec:	6123      	str	r3, [r4, #16]
 8002cee:	d00c      	beq.n	8002d0a <_scanf_float+0x352>
 8002cf0:	2945      	cmp	r1, #69	@ 0x45
 8002cf2:	d00a      	beq.n	8002d0a <_scanf_float+0x352>
 8002cf4:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002cf8:	464a      	mov	r2, r9
 8002cfa:	4640      	mov	r0, r8
 8002cfc:	4798      	blx	r3
 8002cfe:	6923      	ldr	r3, [r4, #16]
 8002d00:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8002d04:	3b01      	subs	r3, #1
 8002d06:	1eb5      	subs	r5, r6, #2
 8002d08:	6123      	str	r3, [r4, #16]
 8002d0a:	464a      	mov	r2, r9
 8002d0c:	4640      	mov	r0, r8
 8002d0e:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002d12:	4798      	blx	r3
 8002d14:	462e      	mov	r6, r5
 8002d16:	6822      	ldr	r2, [r4, #0]
 8002d18:	f012 0210 	ands.w	r2, r2, #16
 8002d1c:	d001      	beq.n	8002d22 <_scanf_float+0x36a>
 8002d1e:	2000      	movs	r0, #0
 8002d20:	e68e      	b.n	8002a40 <_scanf_float+0x88>
 8002d22:	7032      	strb	r2, [r6, #0]
 8002d24:	6823      	ldr	r3, [r4, #0]
 8002d26:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8002d2a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002d2e:	d125      	bne.n	8002d7c <_scanf_float+0x3c4>
 8002d30:	9b02      	ldr	r3, [sp, #8]
 8002d32:	429f      	cmp	r7, r3
 8002d34:	d00a      	beq.n	8002d4c <_scanf_float+0x394>
 8002d36:	1bda      	subs	r2, r3, r7
 8002d38:	f204 136f 	addw	r3, r4, #367	@ 0x16f
 8002d3c:	429e      	cmp	r6, r3
 8002d3e:	bf28      	it	cs
 8002d40:	f504 76b7 	addcs.w	r6, r4, #366	@ 0x16e
 8002d44:	4630      	mov	r0, r6
 8002d46:	491f      	ldr	r1, [pc, #124]	@ (8002dc4 <_scanf_float+0x40c>)
 8002d48:	f000 f902 	bl	8002f50 <siprintf>
 8002d4c:	2200      	movs	r2, #0
 8002d4e:	4640      	mov	r0, r8
 8002d50:	9901      	ldr	r1, [sp, #4]
 8002d52:	f002 fb45 	bl	80053e0 <_strtod_r>
 8002d56:	9b03      	ldr	r3, [sp, #12]
 8002d58:	6825      	ldr	r5, [r4, #0]
 8002d5a:	681b      	ldr	r3, [r3, #0]
 8002d5c:	f015 0f02 	tst.w	r5, #2
 8002d60:	4606      	mov	r6, r0
 8002d62:	460f      	mov	r7, r1
 8002d64:	f103 0204 	add.w	r2, r3, #4
 8002d68:	d015      	beq.n	8002d96 <_scanf_float+0x3de>
 8002d6a:	9903      	ldr	r1, [sp, #12]
 8002d6c:	600a      	str	r2, [r1, #0]
 8002d6e:	681b      	ldr	r3, [r3, #0]
 8002d70:	e9c3 6700 	strd	r6, r7, [r3]
 8002d74:	68e3      	ldr	r3, [r4, #12]
 8002d76:	3301      	adds	r3, #1
 8002d78:	60e3      	str	r3, [r4, #12]
 8002d7a:	e7d0      	b.n	8002d1e <_scanf_float+0x366>
 8002d7c:	9b04      	ldr	r3, [sp, #16]
 8002d7e:	2b00      	cmp	r3, #0
 8002d80:	d0e4      	beq.n	8002d4c <_scanf_float+0x394>
 8002d82:	9905      	ldr	r1, [sp, #20]
 8002d84:	230a      	movs	r3, #10
 8002d86:	4640      	mov	r0, r8
 8002d88:	3101      	adds	r1, #1
 8002d8a:	f002 fba9 	bl	80054e0 <_strtol_r>
 8002d8e:	9b04      	ldr	r3, [sp, #16]
 8002d90:	9e05      	ldr	r6, [sp, #20]
 8002d92:	1ac2      	subs	r2, r0, r3
 8002d94:	e7d0      	b.n	8002d38 <_scanf_float+0x380>
 8002d96:	076d      	lsls	r5, r5, #29
 8002d98:	d4e7      	bmi.n	8002d6a <_scanf_float+0x3b2>
 8002d9a:	9d03      	ldr	r5, [sp, #12]
 8002d9c:	602a      	str	r2, [r5, #0]
 8002d9e:	681d      	ldr	r5, [r3, #0]
 8002da0:	4602      	mov	r2, r0
 8002da2:	460b      	mov	r3, r1
 8002da4:	f7fd fe32 	bl	8000a0c <__aeabi_dcmpun>
 8002da8:	b120      	cbz	r0, 8002db4 <_scanf_float+0x3fc>
 8002daa:	4807      	ldr	r0, [pc, #28]	@ (8002dc8 <_scanf_float+0x410>)
 8002dac:	f000 f9d4 	bl	8003158 <nanf>
 8002db0:	6028      	str	r0, [r5, #0]
 8002db2:	e7df      	b.n	8002d74 <_scanf_float+0x3bc>
 8002db4:	4630      	mov	r0, r6
 8002db6:	4639      	mov	r1, r7
 8002db8:	f7fd fe86 	bl	8000ac8 <__aeabi_d2f>
 8002dbc:	e7f8      	b.n	8002db0 <_scanf_float+0x3f8>
 8002dbe:	2700      	movs	r7, #0
 8002dc0:	e633      	b.n	8002a2a <_scanf_float+0x72>
 8002dc2:	bf00      	nop
 8002dc4:	080066be 	.word	0x080066be
 8002dc8:	080067ff 	.word	0x080067ff

08002dcc <std>:
 8002dcc:	2300      	movs	r3, #0
 8002dce:	b510      	push	{r4, lr}
 8002dd0:	4604      	mov	r4, r0
 8002dd2:	e9c0 3300 	strd	r3, r3, [r0]
 8002dd6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002dda:	6083      	str	r3, [r0, #8]
 8002ddc:	8181      	strh	r1, [r0, #12]
 8002dde:	6643      	str	r3, [r0, #100]	@ 0x64
 8002de0:	81c2      	strh	r2, [r0, #14]
 8002de2:	6183      	str	r3, [r0, #24]
 8002de4:	4619      	mov	r1, r3
 8002de6:	2208      	movs	r2, #8
 8002de8:	305c      	adds	r0, #92	@ 0x5c
 8002dea:	f000 f916 	bl	800301a <memset>
 8002dee:	4b0d      	ldr	r3, [pc, #52]	@ (8002e24 <std+0x58>)
 8002df0:	6224      	str	r4, [r4, #32]
 8002df2:	6263      	str	r3, [r4, #36]	@ 0x24
 8002df4:	4b0c      	ldr	r3, [pc, #48]	@ (8002e28 <std+0x5c>)
 8002df6:	62a3      	str	r3, [r4, #40]	@ 0x28
 8002df8:	4b0c      	ldr	r3, [pc, #48]	@ (8002e2c <std+0x60>)
 8002dfa:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002dfc:	4b0c      	ldr	r3, [pc, #48]	@ (8002e30 <std+0x64>)
 8002dfe:	6323      	str	r3, [r4, #48]	@ 0x30
 8002e00:	4b0c      	ldr	r3, [pc, #48]	@ (8002e34 <std+0x68>)
 8002e02:	429c      	cmp	r4, r3
 8002e04:	d006      	beq.n	8002e14 <std+0x48>
 8002e06:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8002e0a:	4294      	cmp	r4, r2
 8002e0c:	d002      	beq.n	8002e14 <std+0x48>
 8002e0e:	33d0      	adds	r3, #208	@ 0xd0
 8002e10:	429c      	cmp	r4, r3
 8002e12:	d105      	bne.n	8002e20 <std+0x54>
 8002e14:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8002e18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002e1c:	f000 b98a 	b.w	8003134 <__retarget_lock_init_recursive>
 8002e20:	bd10      	pop	{r4, pc}
 8002e22:	bf00      	nop
 8002e24:	08002f95 	.word	0x08002f95
 8002e28:	08002fb7 	.word	0x08002fb7
 8002e2c:	08002fef 	.word	0x08002fef
 8002e30:	08003013 	.word	0x08003013
 8002e34:	20000214 	.word	0x20000214

08002e38 <stdio_exit_handler>:
 8002e38:	4a02      	ldr	r2, [pc, #8]	@ (8002e44 <stdio_exit_handler+0xc>)
 8002e3a:	4903      	ldr	r1, [pc, #12]	@ (8002e48 <stdio_exit_handler+0x10>)
 8002e3c:	4803      	ldr	r0, [pc, #12]	@ (8002e4c <stdio_exit_handler+0x14>)
 8002e3e:	f000 b869 	b.w	8002f14 <_fwalk_sglue>
 8002e42:	bf00      	nop
 8002e44:	2000000c 	.word	0x2000000c
 8002e48:	08005895 	.word	0x08005895
 8002e4c:	2000001c 	.word	0x2000001c

08002e50 <cleanup_stdio>:
 8002e50:	6841      	ldr	r1, [r0, #4]
 8002e52:	4b0c      	ldr	r3, [pc, #48]	@ (8002e84 <cleanup_stdio+0x34>)
 8002e54:	b510      	push	{r4, lr}
 8002e56:	4299      	cmp	r1, r3
 8002e58:	4604      	mov	r4, r0
 8002e5a:	d001      	beq.n	8002e60 <cleanup_stdio+0x10>
 8002e5c:	f002 fd1a 	bl	8005894 <_fflush_r>
 8002e60:	68a1      	ldr	r1, [r4, #8]
 8002e62:	4b09      	ldr	r3, [pc, #36]	@ (8002e88 <cleanup_stdio+0x38>)
 8002e64:	4299      	cmp	r1, r3
 8002e66:	d002      	beq.n	8002e6e <cleanup_stdio+0x1e>
 8002e68:	4620      	mov	r0, r4
 8002e6a:	f002 fd13 	bl	8005894 <_fflush_r>
 8002e6e:	68e1      	ldr	r1, [r4, #12]
 8002e70:	4b06      	ldr	r3, [pc, #24]	@ (8002e8c <cleanup_stdio+0x3c>)
 8002e72:	4299      	cmp	r1, r3
 8002e74:	d004      	beq.n	8002e80 <cleanup_stdio+0x30>
 8002e76:	4620      	mov	r0, r4
 8002e78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002e7c:	f002 bd0a 	b.w	8005894 <_fflush_r>
 8002e80:	bd10      	pop	{r4, pc}
 8002e82:	bf00      	nop
 8002e84:	20000214 	.word	0x20000214
 8002e88:	2000027c 	.word	0x2000027c
 8002e8c:	200002e4 	.word	0x200002e4

08002e90 <global_stdio_init.part.0>:
 8002e90:	b510      	push	{r4, lr}
 8002e92:	4b0b      	ldr	r3, [pc, #44]	@ (8002ec0 <global_stdio_init.part.0+0x30>)
 8002e94:	4c0b      	ldr	r4, [pc, #44]	@ (8002ec4 <global_stdio_init.part.0+0x34>)
 8002e96:	4a0c      	ldr	r2, [pc, #48]	@ (8002ec8 <global_stdio_init.part.0+0x38>)
 8002e98:	4620      	mov	r0, r4
 8002e9a:	601a      	str	r2, [r3, #0]
 8002e9c:	2104      	movs	r1, #4
 8002e9e:	2200      	movs	r2, #0
 8002ea0:	f7ff ff94 	bl	8002dcc <std>
 8002ea4:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8002ea8:	2201      	movs	r2, #1
 8002eaa:	2109      	movs	r1, #9
 8002eac:	f7ff ff8e 	bl	8002dcc <std>
 8002eb0:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8002eb4:	2202      	movs	r2, #2
 8002eb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002eba:	2112      	movs	r1, #18
 8002ebc:	f7ff bf86 	b.w	8002dcc <std>
 8002ec0:	2000034c 	.word	0x2000034c
 8002ec4:	20000214 	.word	0x20000214
 8002ec8:	08002e39 	.word	0x08002e39

08002ecc <__sfp_lock_acquire>:
 8002ecc:	4801      	ldr	r0, [pc, #4]	@ (8002ed4 <__sfp_lock_acquire+0x8>)
 8002ece:	f000 b932 	b.w	8003136 <__retarget_lock_acquire_recursive>
 8002ed2:	bf00      	nop
 8002ed4:	20000355 	.word	0x20000355

08002ed8 <__sfp_lock_release>:
 8002ed8:	4801      	ldr	r0, [pc, #4]	@ (8002ee0 <__sfp_lock_release+0x8>)
 8002eda:	f000 b92d 	b.w	8003138 <__retarget_lock_release_recursive>
 8002ede:	bf00      	nop
 8002ee0:	20000355 	.word	0x20000355

08002ee4 <__sinit>:
 8002ee4:	b510      	push	{r4, lr}
 8002ee6:	4604      	mov	r4, r0
 8002ee8:	f7ff fff0 	bl	8002ecc <__sfp_lock_acquire>
 8002eec:	6a23      	ldr	r3, [r4, #32]
 8002eee:	b11b      	cbz	r3, 8002ef8 <__sinit+0x14>
 8002ef0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002ef4:	f7ff bff0 	b.w	8002ed8 <__sfp_lock_release>
 8002ef8:	4b04      	ldr	r3, [pc, #16]	@ (8002f0c <__sinit+0x28>)
 8002efa:	6223      	str	r3, [r4, #32]
 8002efc:	4b04      	ldr	r3, [pc, #16]	@ (8002f10 <__sinit+0x2c>)
 8002efe:	681b      	ldr	r3, [r3, #0]
 8002f00:	2b00      	cmp	r3, #0
 8002f02:	d1f5      	bne.n	8002ef0 <__sinit+0xc>
 8002f04:	f7ff ffc4 	bl	8002e90 <global_stdio_init.part.0>
 8002f08:	e7f2      	b.n	8002ef0 <__sinit+0xc>
 8002f0a:	bf00      	nop
 8002f0c:	08002e51 	.word	0x08002e51
 8002f10:	2000034c 	.word	0x2000034c

08002f14 <_fwalk_sglue>:
 8002f14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002f18:	4607      	mov	r7, r0
 8002f1a:	4688      	mov	r8, r1
 8002f1c:	4614      	mov	r4, r2
 8002f1e:	2600      	movs	r6, #0
 8002f20:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002f24:	f1b9 0901 	subs.w	r9, r9, #1
 8002f28:	d505      	bpl.n	8002f36 <_fwalk_sglue+0x22>
 8002f2a:	6824      	ldr	r4, [r4, #0]
 8002f2c:	2c00      	cmp	r4, #0
 8002f2e:	d1f7      	bne.n	8002f20 <_fwalk_sglue+0xc>
 8002f30:	4630      	mov	r0, r6
 8002f32:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002f36:	89ab      	ldrh	r3, [r5, #12]
 8002f38:	2b01      	cmp	r3, #1
 8002f3a:	d907      	bls.n	8002f4c <_fwalk_sglue+0x38>
 8002f3c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002f40:	3301      	adds	r3, #1
 8002f42:	d003      	beq.n	8002f4c <_fwalk_sglue+0x38>
 8002f44:	4629      	mov	r1, r5
 8002f46:	4638      	mov	r0, r7
 8002f48:	47c0      	blx	r8
 8002f4a:	4306      	orrs	r6, r0
 8002f4c:	3568      	adds	r5, #104	@ 0x68
 8002f4e:	e7e9      	b.n	8002f24 <_fwalk_sglue+0x10>

08002f50 <siprintf>:
 8002f50:	b40e      	push	{r1, r2, r3}
 8002f52:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8002f56:	b510      	push	{r4, lr}
 8002f58:	2400      	movs	r4, #0
 8002f5a:	b09d      	sub	sp, #116	@ 0x74
 8002f5c:	ab1f      	add	r3, sp, #124	@ 0x7c
 8002f5e:	9002      	str	r0, [sp, #8]
 8002f60:	9006      	str	r0, [sp, #24]
 8002f62:	9107      	str	r1, [sp, #28]
 8002f64:	9104      	str	r1, [sp, #16]
 8002f66:	4809      	ldr	r0, [pc, #36]	@ (8002f8c <siprintf+0x3c>)
 8002f68:	4909      	ldr	r1, [pc, #36]	@ (8002f90 <siprintf+0x40>)
 8002f6a:	f853 2b04 	ldr.w	r2, [r3], #4
 8002f6e:	9105      	str	r1, [sp, #20]
 8002f70:	6800      	ldr	r0, [r0, #0]
 8002f72:	a902      	add	r1, sp, #8
 8002f74:	9301      	str	r3, [sp, #4]
 8002f76:	941b      	str	r4, [sp, #108]	@ 0x6c
 8002f78:	f002 fb10 	bl	800559c <_svfiprintf_r>
 8002f7c:	9b02      	ldr	r3, [sp, #8]
 8002f7e:	701c      	strb	r4, [r3, #0]
 8002f80:	b01d      	add	sp, #116	@ 0x74
 8002f82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002f86:	b003      	add	sp, #12
 8002f88:	4770      	bx	lr
 8002f8a:	bf00      	nop
 8002f8c:	20000018 	.word	0x20000018
 8002f90:	ffff0208 	.word	0xffff0208

08002f94 <__sread>:
 8002f94:	b510      	push	{r4, lr}
 8002f96:	460c      	mov	r4, r1
 8002f98:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002f9c:	f000 f86c 	bl	8003078 <_read_r>
 8002fa0:	2800      	cmp	r0, #0
 8002fa2:	bfab      	itete	ge
 8002fa4:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8002fa6:	89a3      	ldrhlt	r3, [r4, #12]
 8002fa8:	181b      	addge	r3, r3, r0
 8002faa:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8002fae:	bfac      	ite	ge
 8002fb0:	6563      	strge	r3, [r4, #84]	@ 0x54
 8002fb2:	81a3      	strhlt	r3, [r4, #12]
 8002fb4:	bd10      	pop	{r4, pc}

08002fb6 <__swrite>:
 8002fb6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002fba:	461f      	mov	r7, r3
 8002fbc:	898b      	ldrh	r3, [r1, #12]
 8002fbe:	4605      	mov	r5, r0
 8002fc0:	05db      	lsls	r3, r3, #23
 8002fc2:	460c      	mov	r4, r1
 8002fc4:	4616      	mov	r6, r2
 8002fc6:	d505      	bpl.n	8002fd4 <__swrite+0x1e>
 8002fc8:	2302      	movs	r3, #2
 8002fca:	2200      	movs	r2, #0
 8002fcc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002fd0:	f000 f840 	bl	8003054 <_lseek_r>
 8002fd4:	89a3      	ldrh	r3, [r4, #12]
 8002fd6:	4632      	mov	r2, r6
 8002fd8:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8002fdc:	81a3      	strh	r3, [r4, #12]
 8002fde:	4628      	mov	r0, r5
 8002fe0:	463b      	mov	r3, r7
 8002fe2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002fe6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002fea:	f000 b867 	b.w	80030bc <_write_r>

08002fee <__sseek>:
 8002fee:	b510      	push	{r4, lr}
 8002ff0:	460c      	mov	r4, r1
 8002ff2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002ff6:	f000 f82d 	bl	8003054 <_lseek_r>
 8002ffa:	1c43      	adds	r3, r0, #1
 8002ffc:	89a3      	ldrh	r3, [r4, #12]
 8002ffe:	bf15      	itete	ne
 8003000:	6560      	strne	r0, [r4, #84]	@ 0x54
 8003002:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8003006:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800300a:	81a3      	strheq	r3, [r4, #12]
 800300c:	bf18      	it	ne
 800300e:	81a3      	strhne	r3, [r4, #12]
 8003010:	bd10      	pop	{r4, pc}

08003012 <__sclose>:
 8003012:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003016:	f000 b80d 	b.w	8003034 <_close_r>

0800301a <memset>:
 800301a:	4603      	mov	r3, r0
 800301c:	4402      	add	r2, r0
 800301e:	4293      	cmp	r3, r2
 8003020:	d100      	bne.n	8003024 <memset+0xa>
 8003022:	4770      	bx	lr
 8003024:	f803 1b01 	strb.w	r1, [r3], #1
 8003028:	e7f9      	b.n	800301e <memset+0x4>
	...

0800302c <_localeconv_r>:
 800302c:	4800      	ldr	r0, [pc, #0]	@ (8003030 <_localeconv_r+0x4>)
 800302e:	4770      	bx	lr
 8003030:	20000158 	.word	0x20000158

08003034 <_close_r>:
 8003034:	b538      	push	{r3, r4, r5, lr}
 8003036:	2300      	movs	r3, #0
 8003038:	4d05      	ldr	r5, [pc, #20]	@ (8003050 <_close_r+0x1c>)
 800303a:	4604      	mov	r4, r0
 800303c:	4608      	mov	r0, r1
 800303e:	602b      	str	r3, [r5, #0]
 8003040:	f7fe f9f3 	bl	800142a <_close>
 8003044:	1c43      	adds	r3, r0, #1
 8003046:	d102      	bne.n	800304e <_close_r+0x1a>
 8003048:	682b      	ldr	r3, [r5, #0]
 800304a:	b103      	cbz	r3, 800304e <_close_r+0x1a>
 800304c:	6023      	str	r3, [r4, #0]
 800304e:	bd38      	pop	{r3, r4, r5, pc}
 8003050:	20000350 	.word	0x20000350

08003054 <_lseek_r>:
 8003054:	b538      	push	{r3, r4, r5, lr}
 8003056:	4604      	mov	r4, r0
 8003058:	4608      	mov	r0, r1
 800305a:	4611      	mov	r1, r2
 800305c:	2200      	movs	r2, #0
 800305e:	4d05      	ldr	r5, [pc, #20]	@ (8003074 <_lseek_r+0x20>)
 8003060:	602a      	str	r2, [r5, #0]
 8003062:	461a      	mov	r2, r3
 8003064:	f7fe fa05 	bl	8001472 <_lseek>
 8003068:	1c43      	adds	r3, r0, #1
 800306a:	d102      	bne.n	8003072 <_lseek_r+0x1e>
 800306c:	682b      	ldr	r3, [r5, #0]
 800306e:	b103      	cbz	r3, 8003072 <_lseek_r+0x1e>
 8003070:	6023      	str	r3, [r4, #0]
 8003072:	bd38      	pop	{r3, r4, r5, pc}
 8003074:	20000350 	.word	0x20000350

08003078 <_read_r>:
 8003078:	b538      	push	{r3, r4, r5, lr}
 800307a:	4604      	mov	r4, r0
 800307c:	4608      	mov	r0, r1
 800307e:	4611      	mov	r1, r2
 8003080:	2200      	movs	r2, #0
 8003082:	4d05      	ldr	r5, [pc, #20]	@ (8003098 <_read_r+0x20>)
 8003084:	602a      	str	r2, [r5, #0]
 8003086:	461a      	mov	r2, r3
 8003088:	f7fe f996 	bl	80013b8 <_read>
 800308c:	1c43      	adds	r3, r0, #1
 800308e:	d102      	bne.n	8003096 <_read_r+0x1e>
 8003090:	682b      	ldr	r3, [r5, #0]
 8003092:	b103      	cbz	r3, 8003096 <_read_r+0x1e>
 8003094:	6023      	str	r3, [r4, #0]
 8003096:	bd38      	pop	{r3, r4, r5, pc}
 8003098:	20000350 	.word	0x20000350

0800309c <_sbrk_r>:
 800309c:	b538      	push	{r3, r4, r5, lr}
 800309e:	2300      	movs	r3, #0
 80030a0:	4d05      	ldr	r5, [pc, #20]	@ (80030b8 <_sbrk_r+0x1c>)
 80030a2:	4604      	mov	r4, r0
 80030a4:	4608      	mov	r0, r1
 80030a6:	602b      	str	r3, [r5, #0]
 80030a8:	f7fe f9f0 	bl	800148c <_sbrk>
 80030ac:	1c43      	adds	r3, r0, #1
 80030ae:	d102      	bne.n	80030b6 <_sbrk_r+0x1a>
 80030b0:	682b      	ldr	r3, [r5, #0]
 80030b2:	b103      	cbz	r3, 80030b6 <_sbrk_r+0x1a>
 80030b4:	6023      	str	r3, [r4, #0]
 80030b6:	bd38      	pop	{r3, r4, r5, pc}
 80030b8:	20000350 	.word	0x20000350

080030bc <_write_r>:
 80030bc:	b538      	push	{r3, r4, r5, lr}
 80030be:	4604      	mov	r4, r0
 80030c0:	4608      	mov	r0, r1
 80030c2:	4611      	mov	r1, r2
 80030c4:	2200      	movs	r2, #0
 80030c6:	4d05      	ldr	r5, [pc, #20]	@ (80030dc <_write_r+0x20>)
 80030c8:	602a      	str	r2, [r5, #0]
 80030ca:	461a      	mov	r2, r3
 80030cc:	f7fe f991 	bl	80013f2 <_write>
 80030d0:	1c43      	adds	r3, r0, #1
 80030d2:	d102      	bne.n	80030da <_write_r+0x1e>
 80030d4:	682b      	ldr	r3, [r5, #0]
 80030d6:	b103      	cbz	r3, 80030da <_write_r+0x1e>
 80030d8:	6023      	str	r3, [r4, #0]
 80030da:	bd38      	pop	{r3, r4, r5, pc}
 80030dc:	20000350 	.word	0x20000350

080030e0 <__errno>:
 80030e0:	4b01      	ldr	r3, [pc, #4]	@ (80030e8 <__errno+0x8>)
 80030e2:	6818      	ldr	r0, [r3, #0]
 80030e4:	4770      	bx	lr
 80030e6:	bf00      	nop
 80030e8:	20000018 	.word	0x20000018

080030ec <__libc_init_array>:
 80030ec:	b570      	push	{r4, r5, r6, lr}
 80030ee:	2600      	movs	r6, #0
 80030f0:	4d0c      	ldr	r5, [pc, #48]	@ (8003124 <__libc_init_array+0x38>)
 80030f2:	4c0d      	ldr	r4, [pc, #52]	@ (8003128 <__libc_init_array+0x3c>)
 80030f4:	1b64      	subs	r4, r4, r5
 80030f6:	10a4      	asrs	r4, r4, #2
 80030f8:	42a6      	cmp	r6, r4
 80030fa:	d109      	bne.n	8003110 <__libc_init_array+0x24>
 80030fc:	f003 faa6 	bl	800664c <_init>
 8003100:	2600      	movs	r6, #0
 8003102:	4d0a      	ldr	r5, [pc, #40]	@ (800312c <__libc_init_array+0x40>)
 8003104:	4c0a      	ldr	r4, [pc, #40]	@ (8003130 <__libc_init_array+0x44>)
 8003106:	1b64      	subs	r4, r4, r5
 8003108:	10a4      	asrs	r4, r4, #2
 800310a:	42a6      	cmp	r6, r4
 800310c:	d105      	bne.n	800311a <__libc_init_array+0x2e>
 800310e:	bd70      	pop	{r4, r5, r6, pc}
 8003110:	f855 3b04 	ldr.w	r3, [r5], #4
 8003114:	4798      	blx	r3
 8003116:	3601      	adds	r6, #1
 8003118:	e7ee      	b.n	80030f8 <__libc_init_array+0xc>
 800311a:	f855 3b04 	ldr.w	r3, [r5], #4
 800311e:	4798      	blx	r3
 8003120:	3601      	adds	r6, #1
 8003122:	e7f2      	b.n	800310a <__libc_init_array+0x1e>
 8003124:	08006abc 	.word	0x08006abc
 8003128:	08006abc 	.word	0x08006abc
 800312c:	08006abc 	.word	0x08006abc
 8003130:	08006ac0 	.word	0x08006ac0

08003134 <__retarget_lock_init_recursive>:
 8003134:	4770      	bx	lr

08003136 <__retarget_lock_acquire_recursive>:
 8003136:	4770      	bx	lr

08003138 <__retarget_lock_release_recursive>:
 8003138:	4770      	bx	lr

0800313a <memchr>:
 800313a:	4603      	mov	r3, r0
 800313c:	b510      	push	{r4, lr}
 800313e:	b2c9      	uxtb	r1, r1
 8003140:	4402      	add	r2, r0
 8003142:	4293      	cmp	r3, r2
 8003144:	4618      	mov	r0, r3
 8003146:	d101      	bne.n	800314c <memchr+0x12>
 8003148:	2000      	movs	r0, #0
 800314a:	e003      	b.n	8003154 <memchr+0x1a>
 800314c:	7804      	ldrb	r4, [r0, #0]
 800314e:	3301      	adds	r3, #1
 8003150:	428c      	cmp	r4, r1
 8003152:	d1f6      	bne.n	8003142 <memchr+0x8>
 8003154:	bd10      	pop	{r4, pc}
	...

08003158 <nanf>:
 8003158:	4800      	ldr	r0, [pc, #0]	@ (800315c <nanf+0x4>)
 800315a:	4770      	bx	lr
 800315c:	7fc00000 	.word	0x7fc00000

08003160 <quorem>:
 8003160:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003164:	6903      	ldr	r3, [r0, #16]
 8003166:	690c      	ldr	r4, [r1, #16]
 8003168:	4607      	mov	r7, r0
 800316a:	42a3      	cmp	r3, r4
 800316c:	db7e      	blt.n	800326c <quorem+0x10c>
 800316e:	3c01      	subs	r4, #1
 8003170:	00a3      	lsls	r3, r4, #2
 8003172:	f100 0514 	add.w	r5, r0, #20
 8003176:	f101 0814 	add.w	r8, r1, #20
 800317a:	9300      	str	r3, [sp, #0]
 800317c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8003180:	9301      	str	r3, [sp, #4]
 8003182:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8003186:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800318a:	3301      	adds	r3, #1
 800318c:	429a      	cmp	r2, r3
 800318e:	fbb2 f6f3 	udiv	r6, r2, r3
 8003192:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8003196:	d32e      	bcc.n	80031f6 <quorem+0x96>
 8003198:	f04f 0a00 	mov.w	sl, #0
 800319c:	46c4      	mov	ip, r8
 800319e:	46ae      	mov	lr, r5
 80031a0:	46d3      	mov	fp, sl
 80031a2:	f85c 3b04 	ldr.w	r3, [ip], #4
 80031a6:	b298      	uxth	r0, r3
 80031a8:	fb06 a000 	mla	r0, r6, r0, sl
 80031ac:	0c1b      	lsrs	r3, r3, #16
 80031ae:	0c02      	lsrs	r2, r0, #16
 80031b0:	fb06 2303 	mla	r3, r6, r3, r2
 80031b4:	f8de 2000 	ldr.w	r2, [lr]
 80031b8:	b280      	uxth	r0, r0
 80031ba:	b292      	uxth	r2, r2
 80031bc:	1a12      	subs	r2, r2, r0
 80031be:	445a      	add	r2, fp
 80031c0:	f8de 0000 	ldr.w	r0, [lr]
 80031c4:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80031c8:	b29b      	uxth	r3, r3
 80031ca:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 80031ce:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 80031d2:	b292      	uxth	r2, r2
 80031d4:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80031d8:	45e1      	cmp	r9, ip
 80031da:	ea4f 4b23 	mov.w	fp, r3, asr #16
 80031de:	f84e 2b04 	str.w	r2, [lr], #4
 80031e2:	d2de      	bcs.n	80031a2 <quorem+0x42>
 80031e4:	9b00      	ldr	r3, [sp, #0]
 80031e6:	58eb      	ldr	r3, [r5, r3]
 80031e8:	b92b      	cbnz	r3, 80031f6 <quorem+0x96>
 80031ea:	9b01      	ldr	r3, [sp, #4]
 80031ec:	3b04      	subs	r3, #4
 80031ee:	429d      	cmp	r5, r3
 80031f0:	461a      	mov	r2, r3
 80031f2:	d32f      	bcc.n	8003254 <quorem+0xf4>
 80031f4:	613c      	str	r4, [r7, #16]
 80031f6:	4638      	mov	r0, r7
 80031f8:	f001 f912 	bl	8004420 <__mcmp>
 80031fc:	2800      	cmp	r0, #0
 80031fe:	db25      	blt.n	800324c <quorem+0xec>
 8003200:	4629      	mov	r1, r5
 8003202:	2000      	movs	r0, #0
 8003204:	f858 2b04 	ldr.w	r2, [r8], #4
 8003208:	f8d1 c000 	ldr.w	ip, [r1]
 800320c:	fa1f fe82 	uxth.w	lr, r2
 8003210:	fa1f f38c 	uxth.w	r3, ip
 8003214:	eba3 030e 	sub.w	r3, r3, lr
 8003218:	4403      	add	r3, r0
 800321a:	0c12      	lsrs	r2, r2, #16
 800321c:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8003220:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8003224:	b29b      	uxth	r3, r3
 8003226:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800322a:	45c1      	cmp	r9, r8
 800322c:	ea4f 4022 	mov.w	r0, r2, asr #16
 8003230:	f841 3b04 	str.w	r3, [r1], #4
 8003234:	d2e6      	bcs.n	8003204 <quorem+0xa4>
 8003236:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800323a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800323e:	b922      	cbnz	r2, 800324a <quorem+0xea>
 8003240:	3b04      	subs	r3, #4
 8003242:	429d      	cmp	r5, r3
 8003244:	461a      	mov	r2, r3
 8003246:	d30b      	bcc.n	8003260 <quorem+0x100>
 8003248:	613c      	str	r4, [r7, #16]
 800324a:	3601      	adds	r6, #1
 800324c:	4630      	mov	r0, r6
 800324e:	b003      	add	sp, #12
 8003250:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003254:	6812      	ldr	r2, [r2, #0]
 8003256:	3b04      	subs	r3, #4
 8003258:	2a00      	cmp	r2, #0
 800325a:	d1cb      	bne.n	80031f4 <quorem+0x94>
 800325c:	3c01      	subs	r4, #1
 800325e:	e7c6      	b.n	80031ee <quorem+0x8e>
 8003260:	6812      	ldr	r2, [r2, #0]
 8003262:	3b04      	subs	r3, #4
 8003264:	2a00      	cmp	r2, #0
 8003266:	d1ef      	bne.n	8003248 <quorem+0xe8>
 8003268:	3c01      	subs	r4, #1
 800326a:	e7ea      	b.n	8003242 <quorem+0xe2>
 800326c:	2000      	movs	r0, #0
 800326e:	e7ee      	b.n	800324e <quorem+0xee>

08003270 <_dtoa_r>:
 8003270:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003274:	4614      	mov	r4, r2
 8003276:	461d      	mov	r5, r3
 8003278:	69c7      	ldr	r7, [r0, #28]
 800327a:	b097      	sub	sp, #92	@ 0x5c
 800327c:	4681      	mov	r9, r0
 800327e:	e9cd 4506 	strd	r4, r5, [sp, #24]
 8003282:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 8003284:	b97f      	cbnz	r7, 80032a6 <_dtoa_r+0x36>
 8003286:	2010      	movs	r0, #16
 8003288:	f7fe fe86 	bl	8001f98 <malloc>
 800328c:	4602      	mov	r2, r0
 800328e:	f8c9 001c 	str.w	r0, [r9, #28]
 8003292:	b920      	cbnz	r0, 800329e <_dtoa_r+0x2e>
 8003294:	21ef      	movs	r1, #239	@ 0xef
 8003296:	4bac      	ldr	r3, [pc, #688]	@ (8003548 <_dtoa_r+0x2d8>)
 8003298:	48ac      	ldr	r0, [pc, #688]	@ (800354c <_dtoa_r+0x2dc>)
 800329a:	f002 fb63 	bl	8005964 <__assert_func>
 800329e:	e9c0 7701 	strd	r7, r7, [r0, #4]
 80032a2:	6007      	str	r7, [r0, #0]
 80032a4:	60c7      	str	r7, [r0, #12]
 80032a6:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80032aa:	6819      	ldr	r1, [r3, #0]
 80032ac:	b159      	cbz	r1, 80032c6 <_dtoa_r+0x56>
 80032ae:	685a      	ldr	r2, [r3, #4]
 80032b0:	2301      	movs	r3, #1
 80032b2:	4093      	lsls	r3, r2
 80032b4:	604a      	str	r2, [r1, #4]
 80032b6:	608b      	str	r3, [r1, #8]
 80032b8:	4648      	mov	r0, r9
 80032ba:	f000 fe35 	bl	8003f28 <_Bfree>
 80032be:	2200      	movs	r2, #0
 80032c0:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80032c4:	601a      	str	r2, [r3, #0]
 80032c6:	1e2b      	subs	r3, r5, #0
 80032c8:	bfaf      	iteee	ge
 80032ca:	2300      	movge	r3, #0
 80032cc:	2201      	movlt	r2, #1
 80032ce:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 80032d2:	9307      	strlt	r3, [sp, #28]
 80032d4:	bfa8      	it	ge
 80032d6:	6033      	strge	r3, [r6, #0]
 80032d8:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80032dc:	4b9c      	ldr	r3, [pc, #624]	@ (8003550 <_dtoa_r+0x2e0>)
 80032de:	bfb8      	it	lt
 80032e0:	6032      	strlt	r2, [r6, #0]
 80032e2:	ea33 0308 	bics.w	r3, r3, r8
 80032e6:	d112      	bne.n	800330e <_dtoa_r+0x9e>
 80032e8:	f242 730f 	movw	r3, #9999	@ 0x270f
 80032ec:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80032ee:	6013      	str	r3, [r2, #0]
 80032f0:	f3c8 0313 	ubfx	r3, r8, #0, #20
 80032f4:	4323      	orrs	r3, r4
 80032f6:	f000 855e 	beq.w	8003db6 <_dtoa_r+0xb46>
 80032fa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80032fc:	f8df a254 	ldr.w	sl, [pc, #596]	@ 8003554 <_dtoa_r+0x2e4>
 8003300:	2b00      	cmp	r3, #0
 8003302:	f000 8560 	beq.w	8003dc6 <_dtoa_r+0xb56>
 8003306:	f10a 0303 	add.w	r3, sl, #3
 800330a:	f000 bd5a 	b.w	8003dc2 <_dtoa_r+0xb52>
 800330e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003312:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 8003316:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800331a:	2200      	movs	r2, #0
 800331c:	2300      	movs	r3, #0
 800331e:	f7fd fb43 	bl	80009a8 <__aeabi_dcmpeq>
 8003322:	4607      	mov	r7, r0
 8003324:	b158      	cbz	r0, 800333e <_dtoa_r+0xce>
 8003326:	2301      	movs	r3, #1
 8003328:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 800332a:	6013      	str	r3, [r2, #0]
 800332c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800332e:	b113      	cbz	r3, 8003336 <_dtoa_r+0xc6>
 8003330:	4b89      	ldr	r3, [pc, #548]	@ (8003558 <_dtoa_r+0x2e8>)
 8003332:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8003334:	6013      	str	r3, [r2, #0]
 8003336:	f8df a224 	ldr.w	sl, [pc, #548]	@ 800355c <_dtoa_r+0x2ec>
 800333a:	f000 bd44 	b.w	8003dc6 <_dtoa_r+0xb56>
 800333e:	ab14      	add	r3, sp, #80	@ 0x50
 8003340:	9301      	str	r3, [sp, #4]
 8003342:	ab15      	add	r3, sp, #84	@ 0x54
 8003344:	9300      	str	r3, [sp, #0]
 8003346:	4648      	mov	r0, r9
 8003348:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 800334c:	f001 f980 	bl	8004650 <__d2b>
 8003350:	f3c8 560a 	ubfx	r6, r8, #20, #11
 8003354:	9003      	str	r0, [sp, #12]
 8003356:	2e00      	cmp	r6, #0
 8003358:	d078      	beq.n	800344c <_dtoa_r+0x1dc>
 800335a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800335e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003360:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8003364:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003368:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 800336c:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8003370:	9712      	str	r7, [sp, #72]	@ 0x48
 8003372:	4619      	mov	r1, r3
 8003374:	2200      	movs	r2, #0
 8003376:	4b7a      	ldr	r3, [pc, #488]	@ (8003560 <_dtoa_r+0x2f0>)
 8003378:	f7fc fef6 	bl	8000168 <__aeabi_dsub>
 800337c:	a36c      	add	r3, pc, #432	@ (adr r3, 8003530 <_dtoa_r+0x2c0>)
 800337e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003382:	f7fd f8a9 	bl	80004d8 <__aeabi_dmul>
 8003386:	a36c      	add	r3, pc, #432	@ (adr r3, 8003538 <_dtoa_r+0x2c8>)
 8003388:	e9d3 2300 	ldrd	r2, r3, [r3]
 800338c:	f7fc feee 	bl	800016c <__adddf3>
 8003390:	4604      	mov	r4, r0
 8003392:	4630      	mov	r0, r6
 8003394:	460d      	mov	r5, r1
 8003396:	f7fd f835 	bl	8000404 <__aeabi_i2d>
 800339a:	a369      	add	r3, pc, #420	@ (adr r3, 8003540 <_dtoa_r+0x2d0>)
 800339c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80033a0:	f7fd f89a 	bl	80004d8 <__aeabi_dmul>
 80033a4:	4602      	mov	r2, r0
 80033a6:	460b      	mov	r3, r1
 80033a8:	4620      	mov	r0, r4
 80033aa:	4629      	mov	r1, r5
 80033ac:	f7fc fede 	bl	800016c <__adddf3>
 80033b0:	4604      	mov	r4, r0
 80033b2:	460d      	mov	r5, r1
 80033b4:	f7fd fb40 	bl	8000a38 <__aeabi_d2iz>
 80033b8:	2200      	movs	r2, #0
 80033ba:	4607      	mov	r7, r0
 80033bc:	2300      	movs	r3, #0
 80033be:	4620      	mov	r0, r4
 80033c0:	4629      	mov	r1, r5
 80033c2:	f7fd fafb 	bl	80009bc <__aeabi_dcmplt>
 80033c6:	b140      	cbz	r0, 80033da <_dtoa_r+0x16a>
 80033c8:	4638      	mov	r0, r7
 80033ca:	f7fd f81b 	bl	8000404 <__aeabi_i2d>
 80033ce:	4622      	mov	r2, r4
 80033d0:	462b      	mov	r3, r5
 80033d2:	f7fd fae9 	bl	80009a8 <__aeabi_dcmpeq>
 80033d6:	b900      	cbnz	r0, 80033da <_dtoa_r+0x16a>
 80033d8:	3f01      	subs	r7, #1
 80033da:	2f16      	cmp	r7, #22
 80033dc:	d854      	bhi.n	8003488 <_dtoa_r+0x218>
 80033de:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80033e2:	4b60      	ldr	r3, [pc, #384]	@ (8003564 <_dtoa_r+0x2f4>)
 80033e4:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80033e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80033ec:	f7fd fae6 	bl	80009bc <__aeabi_dcmplt>
 80033f0:	2800      	cmp	r0, #0
 80033f2:	d04b      	beq.n	800348c <_dtoa_r+0x21c>
 80033f4:	2300      	movs	r3, #0
 80033f6:	3f01      	subs	r7, #1
 80033f8:	930f      	str	r3, [sp, #60]	@ 0x3c
 80033fa:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80033fc:	1b9b      	subs	r3, r3, r6
 80033fe:	1e5a      	subs	r2, r3, #1
 8003400:	bf49      	itett	mi
 8003402:	f1c3 0301 	rsbmi	r3, r3, #1
 8003406:	2300      	movpl	r3, #0
 8003408:	9304      	strmi	r3, [sp, #16]
 800340a:	2300      	movmi	r3, #0
 800340c:	9209      	str	r2, [sp, #36]	@ 0x24
 800340e:	bf54      	ite	pl
 8003410:	9304      	strpl	r3, [sp, #16]
 8003412:	9309      	strmi	r3, [sp, #36]	@ 0x24
 8003414:	2f00      	cmp	r7, #0
 8003416:	db3b      	blt.n	8003490 <_dtoa_r+0x220>
 8003418:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800341a:	970e      	str	r7, [sp, #56]	@ 0x38
 800341c:	443b      	add	r3, r7
 800341e:	9309      	str	r3, [sp, #36]	@ 0x24
 8003420:	2300      	movs	r3, #0
 8003422:	930a      	str	r3, [sp, #40]	@ 0x28
 8003424:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003426:	2b09      	cmp	r3, #9
 8003428:	d865      	bhi.n	80034f6 <_dtoa_r+0x286>
 800342a:	2b05      	cmp	r3, #5
 800342c:	bfc4      	itt	gt
 800342e:	3b04      	subgt	r3, #4
 8003430:	9320      	strgt	r3, [sp, #128]	@ 0x80
 8003432:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003434:	bfc8      	it	gt
 8003436:	2400      	movgt	r4, #0
 8003438:	f1a3 0302 	sub.w	r3, r3, #2
 800343c:	bfd8      	it	le
 800343e:	2401      	movle	r4, #1
 8003440:	2b03      	cmp	r3, #3
 8003442:	d864      	bhi.n	800350e <_dtoa_r+0x29e>
 8003444:	e8df f003 	tbb	[pc, r3]
 8003448:	2c385553 	.word	0x2c385553
 800344c:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 8003450:	441e      	add	r6, r3
 8003452:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8003456:	2b20      	cmp	r3, #32
 8003458:	bfc1      	itttt	gt
 800345a:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 800345e:	fa08 f803 	lslgt.w	r8, r8, r3
 8003462:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8003466:	fa24 f303 	lsrgt.w	r3, r4, r3
 800346a:	bfd6      	itet	le
 800346c:	f1c3 0320 	rsble	r3, r3, #32
 8003470:	ea48 0003 	orrgt.w	r0, r8, r3
 8003474:	fa04 f003 	lslle.w	r0, r4, r3
 8003478:	f7fc ffb4 	bl	80003e4 <__aeabi_ui2d>
 800347c:	2201      	movs	r2, #1
 800347e:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8003482:	3e01      	subs	r6, #1
 8003484:	9212      	str	r2, [sp, #72]	@ 0x48
 8003486:	e774      	b.n	8003372 <_dtoa_r+0x102>
 8003488:	2301      	movs	r3, #1
 800348a:	e7b5      	b.n	80033f8 <_dtoa_r+0x188>
 800348c:	900f      	str	r0, [sp, #60]	@ 0x3c
 800348e:	e7b4      	b.n	80033fa <_dtoa_r+0x18a>
 8003490:	9b04      	ldr	r3, [sp, #16]
 8003492:	1bdb      	subs	r3, r3, r7
 8003494:	9304      	str	r3, [sp, #16]
 8003496:	427b      	negs	r3, r7
 8003498:	930a      	str	r3, [sp, #40]	@ 0x28
 800349a:	2300      	movs	r3, #0
 800349c:	930e      	str	r3, [sp, #56]	@ 0x38
 800349e:	e7c1      	b.n	8003424 <_dtoa_r+0x1b4>
 80034a0:	2301      	movs	r3, #1
 80034a2:	930b      	str	r3, [sp, #44]	@ 0x2c
 80034a4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80034a6:	eb07 0b03 	add.w	fp, r7, r3
 80034aa:	f10b 0301 	add.w	r3, fp, #1
 80034ae:	2b01      	cmp	r3, #1
 80034b0:	9308      	str	r3, [sp, #32]
 80034b2:	bfb8      	it	lt
 80034b4:	2301      	movlt	r3, #1
 80034b6:	e006      	b.n	80034c6 <_dtoa_r+0x256>
 80034b8:	2301      	movs	r3, #1
 80034ba:	930b      	str	r3, [sp, #44]	@ 0x2c
 80034bc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80034be:	2b00      	cmp	r3, #0
 80034c0:	dd28      	ble.n	8003514 <_dtoa_r+0x2a4>
 80034c2:	469b      	mov	fp, r3
 80034c4:	9308      	str	r3, [sp, #32]
 80034c6:	2100      	movs	r1, #0
 80034c8:	2204      	movs	r2, #4
 80034ca:	f8d9 001c 	ldr.w	r0, [r9, #28]
 80034ce:	f102 0514 	add.w	r5, r2, #20
 80034d2:	429d      	cmp	r5, r3
 80034d4:	d926      	bls.n	8003524 <_dtoa_r+0x2b4>
 80034d6:	6041      	str	r1, [r0, #4]
 80034d8:	4648      	mov	r0, r9
 80034da:	f000 fce5 	bl	8003ea8 <_Balloc>
 80034de:	4682      	mov	sl, r0
 80034e0:	2800      	cmp	r0, #0
 80034e2:	d143      	bne.n	800356c <_dtoa_r+0x2fc>
 80034e4:	4602      	mov	r2, r0
 80034e6:	f240 11af 	movw	r1, #431	@ 0x1af
 80034ea:	4b1f      	ldr	r3, [pc, #124]	@ (8003568 <_dtoa_r+0x2f8>)
 80034ec:	e6d4      	b.n	8003298 <_dtoa_r+0x28>
 80034ee:	2300      	movs	r3, #0
 80034f0:	e7e3      	b.n	80034ba <_dtoa_r+0x24a>
 80034f2:	2300      	movs	r3, #0
 80034f4:	e7d5      	b.n	80034a2 <_dtoa_r+0x232>
 80034f6:	2401      	movs	r4, #1
 80034f8:	2300      	movs	r3, #0
 80034fa:	940b      	str	r4, [sp, #44]	@ 0x2c
 80034fc:	9320      	str	r3, [sp, #128]	@ 0x80
 80034fe:	f04f 3bff 	mov.w	fp, #4294967295	@ 0xffffffff
 8003502:	2200      	movs	r2, #0
 8003504:	2312      	movs	r3, #18
 8003506:	f8cd b020 	str.w	fp, [sp, #32]
 800350a:	9221      	str	r2, [sp, #132]	@ 0x84
 800350c:	e7db      	b.n	80034c6 <_dtoa_r+0x256>
 800350e:	2301      	movs	r3, #1
 8003510:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003512:	e7f4      	b.n	80034fe <_dtoa_r+0x28e>
 8003514:	f04f 0b01 	mov.w	fp, #1
 8003518:	465b      	mov	r3, fp
 800351a:	f8cd b020 	str.w	fp, [sp, #32]
 800351e:	f8cd b084 	str.w	fp, [sp, #132]	@ 0x84
 8003522:	e7d0      	b.n	80034c6 <_dtoa_r+0x256>
 8003524:	3101      	adds	r1, #1
 8003526:	0052      	lsls	r2, r2, #1
 8003528:	e7d1      	b.n	80034ce <_dtoa_r+0x25e>
 800352a:	bf00      	nop
 800352c:	f3af 8000 	nop.w
 8003530:	636f4361 	.word	0x636f4361
 8003534:	3fd287a7 	.word	0x3fd287a7
 8003538:	8b60c8b3 	.word	0x8b60c8b3
 800353c:	3fc68a28 	.word	0x3fc68a28
 8003540:	509f79fb 	.word	0x509f79fb
 8003544:	3fd34413 	.word	0x3fd34413
 8003548:	080066d0 	.word	0x080066d0
 800354c:	080066e7 	.word	0x080066e7
 8003550:	7ff00000 	.word	0x7ff00000
 8003554:	080066cc 	.word	0x080066cc
 8003558:	0800669b 	.word	0x0800669b
 800355c:	0800669a 	.word	0x0800669a
 8003560:	3ff80000 	.word	0x3ff80000
 8003564:	08006898 	.word	0x08006898
 8003568:	0800673f 	.word	0x0800673f
 800356c:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8003570:	6018      	str	r0, [r3, #0]
 8003572:	9b08      	ldr	r3, [sp, #32]
 8003574:	2b0e      	cmp	r3, #14
 8003576:	f200 80a1 	bhi.w	80036bc <_dtoa_r+0x44c>
 800357a:	2c00      	cmp	r4, #0
 800357c:	f000 809e 	beq.w	80036bc <_dtoa_r+0x44c>
 8003580:	2f00      	cmp	r7, #0
 8003582:	dd33      	ble.n	80035ec <_dtoa_r+0x37c>
 8003584:	4b9c      	ldr	r3, [pc, #624]	@ (80037f8 <_dtoa_r+0x588>)
 8003586:	f007 020f 	and.w	r2, r7, #15
 800358a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800358e:	05f8      	lsls	r0, r7, #23
 8003590:	e9d3 3400 	ldrd	r3, r4, [r3]
 8003594:	e9cd 3410 	strd	r3, r4, [sp, #64]	@ 0x40
 8003598:	ea4f 1427 	mov.w	r4, r7, asr #4
 800359c:	d516      	bpl.n	80035cc <_dtoa_r+0x35c>
 800359e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80035a2:	4b96      	ldr	r3, [pc, #600]	@ (80037fc <_dtoa_r+0x58c>)
 80035a4:	2603      	movs	r6, #3
 80035a6:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80035aa:	f7fd f8bf 	bl	800072c <__aeabi_ddiv>
 80035ae:	e9cd 0106 	strd	r0, r1, [sp, #24]
 80035b2:	f004 040f 	and.w	r4, r4, #15
 80035b6:	4d91      	ldr	r5, [pc, #580]	@ (80037fc <_dtoa_r+0x58c>)
 80035b8:	b954      	cbnz	r4, 80035d0 <_dtoa_r+0x360>
 80035ba:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80035be:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80035c2:	f7fd f8b3 	bl	800072c <__aeabi_ddiv>
 80035c6:	e9cd 0106 	strd	r0, r1, [sp, #24]
 80035ca:	e028      	b.n	800361e <_dtoa_r+0x3ae>
 80035cc:	2602      	movs	r6, #2
 80035ce:	e7f2      	b.n	80035b6 <_dtoa_r+0x346>
 80035d0:	07e1      	lsls	r1, r4, #31
 80035d2:	d508      	bpl.n	80035e6 <_dtoa_r+0x376>
 80035d4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 80035d8:	e9d5 2300 	ldrd	r2, r3, [r5]
 80035dc:	f7fc ff7c 	bl	80004d8 <__aeabi_dmul>
 80035e0:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80035e4:	3601      	adds	r6, #1
 80035e6:	1064      	asrs	r4, r4, #1
 80035e8:	3508      	adds	r5, #8
 80035ea:	e7e5      	b.n	80035b8 <_dtoa_r+0x348>
 80035ec:	f000 80af 	beq.w	800374e <_dtoa_r+0x4de>
 80035f0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80035f4:	427c      	negs	r4, r7
 80035f6:	4b80      	ldr	r3, [pc, #512]	@ (80037f8 <_dtoa_r+0x588>)
 80035f8:	f004 020f 	and.w	r2, r4, #15
 80035fc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003600:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003604:	f7fc ff68 	bl	80004d8 <__aeabi_dmul>
 8003608:	2602      	movs	r6, #2
 800360a:	2300      	movs	r3, #0
 800360c:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8003610:	4d7a      	ldr	r5, [pc, #488]	@ (80037fc <_dtoa_r+0x58c>)
 8003612:	1124      	asrs	r4, r4, #4
 8003614:	2c00      	cmp	r4, #0
 8003616:	f040 808f 	bne.w	8003738 <_dtoa_r+0x4c8>
 800361a:	2b00      	cmp	r3, #0
 800361c:	d1d3      	bne.n	80035c6 <_dtoa_r+0x356>
 800361e:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
 8003622:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003624:	2b00      	cmp	r3, #0
 8003626:	f000 8094 	beq.w	8003752 <_dtoa_r+0x4e2>
 800362a:	2200      	movs	r2, #0
 800362c:	4620      	mov	r0, r4
 800362e:	4629      	mov	r1, r5
 8003630:	4b73      	ldr	r3, [pc, #460]	@ (8003800 <_dtoa_r+0x590>)
 8003632:	f7fd f9c3 	bl	80009bc <__aeabi_dcmplt>
 8003636:	2800      	cmp	r0, #0
 8003638:	f000 808b 	beq.w	8003752 <_dtoa_r+0x4e2>
 800363c:	9b08      	ldr	r3, [sp, #32]
 800363e:	2b00      	cmp	r3, #0
 8003640:	f000 8087 	beq.w	8003752 <_dtoa_r+0x4e2>
 8003644:	f1bb 0f00 	cmp.w	fp, #0
 8003648:	dd34      	ble.n	80036b4 <_dtoa_r+0x444>
 800364a:	4620      	mov	r0, r4
 800364c:	2200      	movs	r2, #0
 800364e:	4629      	mov	r1, r5
 8003650:	4b6c      	ldr	r3, [pc, #432]	@ (8003804 <_dtoa_r+0x594>)
 8003652:	f7fc ff41 	bl	80004d8 <__aeabi_dmul>
 8003656:	465c      	mov	r4, fp
 8003658:	e9cd 0106 	strd	r0, r1, [sp, #24]
 800365c:	f107 38ff 	add.w	r8, r7, #4294967295	@ 0xffffffff
 8003660:	3601      	adds	r6, #1
 8003662:	4630      	mov	r0, r6
 8003664:	f7fc fece 	bl	8000404 <__aeabi_i2d>
 8003668:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800366c:	f7fc ff34 	bl	80004d8 <__aeabi_dmul>
 8003670:	2200      	movs	r2, #0
 8003672:	4b65      	ldr	r3, [pc, #404]	@ (8003808 <_dtoa_r+0x598>)
 8003674:	f7fc fd7a 	bl	800016c <__adddf3>
 8003678:	4605      	mov	r5, r0
 800367a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 800367e:	2c00      	cmp	r4, #0
 8003680:	d16a      	bne.n	8003758 <_dtoa_r+0x4e8>
 8003682:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003686:	2200      	movs	r2, #0
 8003688:	4b60      	ldr	r3, [pc, #384]	@ (800380c <_dtoa_r+0x59c>)
 800368a:	f7fc fd6d 	bl	8000168 <__aeabi_dsub>
 800368e:	4602      	mov	r2, r0
 8003690:	460b      	mov	r3, r1
 8003692:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8003696:	462a      	mov	r2, r5
 8003698:	4633      	mov	r3, r6
 800369a:	f7fd f9ad 	bl	80009f8 <__aeabi_dcmpgt>
 800369e:	2800      	cmp	r0, #0
 80036a0:	f040 8298 	bne.w	8003bd4 <_dtoa_r+0x964>
 80036a4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80036a8:	462a      	mov	r2, r5
 80036aa:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 80036ae:	f7fd f985 	bl	80009bc <__aeabi_dcmplt>
 80036b2:	bb38      	cbnz	r0, 8003704 <_dtoa_r+0x494>
 80036b4:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 80036b8:	e9cd 3406 	strd	r3, r4, [sp, #24]
 80036bc:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80036be:	2b00      	cmp	r3, #0
 80036c0:	f2c0 8157 	blt.w	8003972 <_dtoa_r+0x702>
 80036c4:	2f0e      	cmp	r7, #14
 80036c6:	f300 8154 	bgt.w	8003972 <_dtoa_r+0x702>
 80036ca:	4b4b      	ldr	r3, [pc, #300]	@ (80037f8 <_dtoa_r+0x588>)
 80036cc:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80036d0:	e9d3 3400 	ldrd	r3, r4, [r3]
 80036d4:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80036d8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80036da:	2b00      	cmp	r3, #0
 80036dc:	f280 80e5 	bge.w	80038aa <_dtoa_r+0x63a>
 80036e0:	9b08      	ldr	r3, [sp, #32]
 80036e2:	2b00      	cmp	r3, #0
 80036e4:	f300 80e1 	bgt.w	80038aa <_dtoa_r+0x63a>
 80036e8:	d10c      	bne.n	8003704 <_dtoa_r+0x494>
 80036ea:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80036ee:	2200      	movs	r2, #0
 80036f0:	4b46      	ldr	r3, [pc, #280]	@ (800380c <_dtoa_r+0x59c>)
 80036f2:	f7fc fef1 	bl	80004d8 <__aeabi_dmul>
 80036f6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80036fa:	f7fd f973 	bl	80009e4 <__aeabi_dcmpge>
 80036fe:	2800      	cmp	r0, #0
 8003700:	f000 8266 	beq.w	8003bd0 <_dtoa_r+0x960>
 8003704:	2400      	movs	r4, #0
 8003706:	4625      	mov	r5, r4
 8003708:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800370a:	4656      	mov	r6, sl
 800370c:	ea6f 0803 	mvn.w	r8, r3
 8003710:	2700      	movs	r7, #0
 8003712:	4621      	mov	r1, r4
 8003714:	4648      	mov	r0, r9
 8003716:	f000 fc07 	bl	8003f28 <_Bfree>
 800371a:	2d00      	cmp	r5, #0
 800371c:	f000 80bd 	beq.w	800389a <_dtoa_r+0x62a>
 8003720:	b12f      	cbz	r7, 800372e <_dtoa_r+0x4be>
 8003722:	42af      	cmp	r7, r5
 8003724:	d003      	beq.n	800372e <_dtoa_r+0x4be>
 8003726:	4639      	mov	r1, r7
 8003728:	4648      	mov	r0, r9
 800372a:	f000 fbfd 	bl	8003f28 <_Bfree>
 800372e:	4629      	mov	r1, r5
 8003730:	4648      	mov	r0, r9
 8003732:	f000 fbf9 	bl	8003f28 <_Bfree>
 8003736:	e0b0      	b.n	800389a <_dtoa_r+0x62a>
 8003738:	07e2      	lsls	r2, r4, #31
 800373a:	d505      	bpl.n	8003748 <_dtoa_r+0x4d8>
 800373c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003740:	f7fc feca 	bl	80004d8 <__aeabi_dmul>
 8003744:	2301      	movs	r3, #1
 8003746:	3601      	adds	r6, #1
 8003748:	1064      	asrs	r4, r4, #1
 800374a:	3508      	adds	r5, #8
 800374c:	e762      	b.n	8003614 <_dtoa_r+0x3a4>
 800374e:	2602      	movs	r6, #2
 8003750:	e765      	b.n	800361e <_dtoa_r+0x3ae>
 8003752:	46b8      	mov	r8, r7
 8003754:	9c08      	ldr	r4, [sp, #32]
 8003756:	e784      	b.n	8003662 <_dtoa_r+0x3f2>
 8003758:	4b27      	ldr	r3, [pc, #156]	@ (80037f8 <_dtoa_r+0x588>)
 800375a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800375c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8003760:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8003764:	4454      	add	r4, sl
 8003766:	2900      	cmp	r1, #0
 8003768:	d054      	beq.n	8003814 <_dtoa_r+0x5a4>
 800376a:	2000      	movs	r0, #0
 800376c:	4928      	ldr	r1, [pc, #160]	@ (8003810 <_dtoa_r+0x5a0>)
 800376e:	f7fc ffdd 	bl	800072c <__aeabi_ddiv>
 8003772:	4633      	mov	r3, r6
 8003774:	462a      	mov	r2, r5
 8003776:	f7fc fcf7 	bl	8000168 <__aeabi_dsub>
 800377a:	4656      	mov	r6, sl
 800377c:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8003780:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003784:	f7fd f958 	bl	8000a38 <__aeabi_d2iz>
 8003788:	4605      	mov	r5, r0
 800378a:	f7fc fe3b 	bl	8000404 <__aeabi_i2d>
 800378e:	4602      	mov	r2, r0
 8003790:	460b      	mov	r3, r1
 8003792:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003796:	f7fc fce7 	bl	8000168 <__aeabi_dsub>
 800379a:	4602      	mov	r2, r0
 800379c:	460b      	mov	r3, r1
 800379e:	3530      	adds	r5, #48	@ 0x30
 80037a0:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80037a4:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80037a8:	f806 5b01 	strb.w	r5, [r6], #1
 80037ac:	f7fd f906 	bl	80009bc <__aeabi_dcmplt>
 80037b0:	2800      	cmp	r0, #0
 80037b2:	d172      	bne.n	800389a <_dtoa_r+0x62a>
 80037b4:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80037b8:	2000      	movs	r0, #0
 80037ba:	4911      	ldr	r1, [pc, #68]	@ (8003800 <_dtoa_r+0x590>)
 80037bc:	f7fc fcd4 	bl	8000168 <__aeabi_dsub>
 80037c0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80037c4:	f7fd f8fa 	bl	80009bc <__aeabi_dcmplt>
 80037c8:	2800      	cmp	r0, #0
 80037ca:	f040 80b4 	bne.w	8003936 <_dtoa_r+0x6c6>
 80037ce:	42a6      	cmp	r6, r4
 80037d0:	f43f af70 	beq.w	80036b4 <_dtoa_r+0x444>
 80037d4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 80037d8:	2200      	movs	r2, #0
 80037da:	4b0a      	ldr	r3, [pc, #40]	@ (8003804 <_dtoa_r+0x594>)
 80037dc:	f7fc fe7c 	bl	80004d8 <__aeabi_dmul>
 80037e0:	2200      	movs	r2, #0
 80037e2:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80037e6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80037ea:	4b06      	ldr	r3, [pc, #24]	@ (8003804 <_dtoa_r+0x594>)
 80037ec:	f7fc fe74 	bl	80004d8 <__aeabi_dmul>
 80037f0:	e9cd 0106 	strd	r0, r1, [sp, #24]
 80037f4:	e7c4      	b.n	8003780 <_dtoa_r+0x510>
 80037f6:	bf00      	nop
 80037f8:	08006898 	.word	0x08006898
 80037fc:	08006870 	.word	0x08006870
 8003800:	3ff00000 	.word	0x3ff00000
 8003804:	40240000 	.word	0x40240000
 8003808:	401c0000 	.word	0x401c0000
 800380c:	40140000 	.word	0x40140000
 8003810:	3fe00000 	.word	0x3fe00000
 8003814:	4631      	mov	r1, r6
 8003816:	4628      	mov	r0, r5
 8003818:	f7fc fe5e 	bl	80004d8 <__aeabi_dmul>
 800381c:	4656      	mov	r6, sl
 800381e:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8003822:	9413      	str	r4, [sp, #76]	@ 0x4c
 8003824:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003828:	f7fd f906 	bl	8000a38 <__aeabi_d2iz>
 800382c:	4605      	mov	r5, r0
 800382e:	f7fc fde9 	bl	8000404 <__aeabi_i2d>
 8003832:	4602      	mov	r2, r0
 8003834:	460b      	mov	r3, r1
 8003836:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800383a:	f7fc fc95 	bl	8000168 <__aeabi_dsub>
 800383e:	4602      	mov	r2, r0
 8003840:	460b      	mov	r3, r1
 8003842:	3530      	adds	r5, #48	@ 0x30
 8003844:	f806 5b01 	strb.w	r5, [r6], #1
 8003848:	42a6      	cmp	r6, r4
 800384a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800384e:	f04f 0200 	mov.w	r2, #0
 8003852:	d124      	bne.n	800389e <_dtoa_r+0x62e>
 8003854:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8003858:	4bae      	ldr	r3, [pc, #696]	@ (8003b14 <_dtoa_r+0x8a4>)
 800385a:	f7fc fc87 	bl	800016c <__adddf3>
 800385e:	4602      	mov	r2, r0
 8003860:	460b      	mov	r3, r1
 8003862:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003866:	f7fd f8c7 	bl	80009f8 <__aeabi_dcmpgt>
 800386a:	2800      	cmp	r0, #0
 800386c:	d163      	bne.n	8003936 <_dtoa_r+0x6c6>
 800386e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003872:	2000      	movs	r0, #0
 8003874:	49a7      	ldr	r1, [pc, #668]	@ (8003b14 <_dtoa_r+0x8a4>)
 8003876:	f7fc fc77 	bl	8000168 <__aeabi_dsub>
 800387a:	4602      	mov	r2, r0
 800387c:	460b      	mov	r3, r1
 800387e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003882:	f7fd f89b 	bl	80009bc <__aeabi_dcmplt>
 8003886:	2800      	cmp	r0, #0
 8003888:	f43f af14 	beq.w	80036b4 <_dtoa_r+0x444>
 800388c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 800388e:	1e73      	subs	r3, r6, #1
 8003890:	9313      	str	r3, [sp, #76]	@ 0x4c
 8003892:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8003896:	2b30      	cmp	r3, #48	@ 0x30
 8003898:	d0f8      	beq.n	800388c <_dtoa_r+0x61c>
 800389a:	4647      	mov	r7, r8
 800389c:	e03b      	b.n	8003916 <_dtoa_r+0x6a6>
 800389e:	4b9e      	ldr	r3, [pc, #632]	@ (8003b18 <_dtoa_r+0x8a8>)
 80038a0:	f7fc fe1a 	bl	80004d8 <__aeabi_dmul>
 80038a4:	e9cd 0106 	strd	r0, r1, [sp, #24]
 80038a8:	e7bc      	b.n	8003824 <_dtoa_r+0x5b4>
 80038aa:	4656      	mov	r6, sl
 80038ac:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
 80038b0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80038b4:	4620      	mov	r0, r4
 80038b6:	4629      	mov	r1, r5
 80038b8:	f7fc ff38 	bl	800072c <__aeabi_ddiv>
 80038bc:	f7fd f8bc 	bl	8000a38 <__aeabi_d2iz>
 80038c0:	4680      	mov	r8, r0
 80038c2:	f7fc fd9f 	bl	8000404 <__aeabi_i2d>
 80038c6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80038ca:	f7fc fe05 	bl	80004d8 <__aeabi_dmul>
 80038ce:	4602      	mov	r2, r0
 80038d0:	460b      	mov	r3, r1
 80038d2:	4620      	mov	r0, r4
 80038d4:	4629      	mov	r1, r5
 80038d6:	f7fc fc47 	bl	8000168 <__aeabi_dsub>
 80038da:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 80038de:	9d08      	ldr	r5, [sp, #32]
 80038e0:	f806 4b01 	strb.w	r4, [r6], #1
 80038e4:	eba6 040a 	sub.w	r4, r6, sl
 80038e8:	42a5      	cmp	r5, r4
 80038ea:	4602      	mov	r2, r0
 80038ec:	460b      	mov	r3, r1
 80038ee:	d133      	bne.n	8003958 <_dtoa_r+0x6e8>
 80038f0:	f7fc fc3c 	bl	800016c <__adddf3>
 80038f4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80038f8:	4604      	mov	r4, r0
 80038fa:	460d      	mov	r5, r1
 80038fc:	f7fd f87c 	bl	80009f8 <__aeabi_dcmpgt>
 8003900:	b9c0      	cbnz	r0, 8003934 <_dtoa_r+0x6c4>
 8003902:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003906:	4620      	mov	r0, r4
 8003908:	4629      	mov	r1, r5
 800390a:	f7fd f84d 	bl	80009a8 <__aeabi_dcmpeq>
 800390e:	b110      	cbz	r0, 8003916 <_dtoa_r+0x6a6>
 8003910:	f018 0f01 	tst.w	r8, #1
 8003914:	d10e      	bne.n	8003934 <_dtoa_r+0x6c4>
 8003916:	4648      	mov	r0, r9
 8003918:	9903      	ldr	r1, [sp, #12]
 800391a:	f000 fb05 	bl	8003f28 <_Bfree>
 800391e:	2300      	movs	r3, #0
 8003920:	7033      	strb	r3, [r6, #0]
 8003922:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8003924:	3701      	adds	r7, #1
 8003926:	601f      	str	r7, [r3, #0]
 8003928:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800392a:	2b00      	cmp	r3, #0
 800392c:	f000 824b 	beq.w	8003dc6 <_dtoa_r+0xb56>
 8003930:	601e      	str	r6, [r3, #0]
 8003932:	e248      	b.n	8003dc6 <_dtoa_r+0xb56>
 8003934:	46b8      	mov	r8, r7
 8003936:	4633      	mov	r3, r6
 8003938:	461e      	mov	r6, r3
 800393a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800393e:	2a39      	cmp	r2, #57	@ 0x39
 8003940:	d106      	bne.n	8003950 <_dtoa_r+0x6e0>
 8003942:	459a      	cmp	sl, r3
 8003944:	d1f8      	bne.n	8003938 <_dtoa_r+0x6c8>
 8003946:	2230      	movs	r2, #48	@ 0x30
 8003948:	f108 0801 	add.w	r8, r8, #1
 800394c:	f88a 2000 	strb.w	r2, [sl]
 8003950:	781a      	ldrb	r2, [r3, #0]
 8003952:	3201      	adds	r2, #1
 8003954:	701a      	strb	r2, [r3, #0]
 8003956:	e7a0      	b.n	800389a <_dtoa_r+0x62a>
 8003958:	2200      	movs	r2, #0
 800395a:	4b6f      	ldr	r3, [pc, #444]	@ (8003b18 <_dtoa_r+0x8a8>)
 800395c:	f7fc fdbc 	bl	80004d8 <__aeabi_dmul>
 8003960:	2200      	movs	r2, #0
 8003962:	2300      	movs	r3, #0
 8003964:	4604      	mov	r4, r0
 8003966:	460d      	mov	r5, r1
 8003968:	f7fd f81e 	bl	80009a8 <__aeabi_dcmpeq>
 800396c:	2800      	cmp	r0, #0
 800396e:	d09f      	beq.n	80038b0 <_dtoa_r+0x640>
 8003970:	e7d1      	b.n	8003916 <_dtoa_r+0x6a6>
 8003972:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8003974:	2a00      	cmp	r2, #0
 8003976:	f000 80ea 	beq.w	8003b4e <_dtoa_r+0x8de>
 800397a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800397c:	2a01      	cmp	r2, #1
 800397e:	f300 80cd 	bgt.w	8003b1c <_dtoa_r+0x8ac>
 8003982:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8003984:	2a00      	cmp	r2, #0
 8003986:	f000 80c1 	beq.w	8003b0c <_dtoa_r+0x89c>
 800398a:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 800398e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003990:	9e04      	ldr	r6, [sp, #16]
 8003992:	9a04      	ldr	r2, [sp, #16]
 8003994:	2101      	movs	r1, #1
 8003996:	441a      	add	r2, r3
 8003998:	9204      	str	r2, [sp, #16]
 800399a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800399c:	4648      	mov	r0, r9
 800399e:	441a      	add	r2, r3
 80039a0:	9209      	str	r2, [sp, #36]	@ 0x24
 80039a2:	f000 fbbf 	bl	8004124 <__i2b>
 80039a6:	4605      	mov	r5, r0
 80039a8:	b166      	cbz	r6, 80039c4 <_dtoa_r+0x754>
 80039aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80039ac:	2b00      	cmp	r3, #0
 80039ae:	dd09      	ble.n	80039c4 <_dtoa_r+0x754>
 80039b0:	42b3      	cmp	r3, r6
 80039b2:	bfa8      	it	ge
 80039b4:	4633      	movge	r3, r6
 80039b6:	9a04      	ldr	r2, [sp, #16]
 80039b8:	1af6      	subs	r6, r6, r3
 80039ba:	1ad2      	subs	r2, r2, r3
 80039bc:	9204      	str	r2, [sp, #16]
 80039be:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80039c0:	1ad3      	subs	r3, r2, r3
 80039c2:	9309      	str	r3, [sp, #36]	@ 0x24
 80039c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80039c6:	b30b      	cbz	r3, 8003a0c <_dtoa_r+0x79c>
 80039c8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80039ca:	2b00      	cmp	r3, #0
 80039cc:	f000 80c6 	beq.w	8003b5c <_dtoa_r+0x8ec>
 80039d0:	2c00      	cmp	r4, #0
 80039d2:	f000 80c0 	beq.w	8003b56 <_dtoa_r+0x8e6>
 80039d6:	4629      	mov	r1, r5
 80039d8:	4622      	mov	r2, r4
 80039da:	4648      	mov	r0, r9
 80039dc:	f000 fc5a 	bl	8004294 <__pow5mult>
 80039e0:	9a03      	ldr	r2, [sp, #12]
 80039e2:	4601      	mov	r1, r0
 80039e4:	4605      	mov	r5, r0
 80039e6:	4648      	mov	r0, r9
 80039e8:	f000 fbb2 	bl	8004150 <__multiply>
 80039ec:	9903      	ldr	r1, [sp, #12]
 80039ee:	4680      	mov	r8, r0
 80039f0:	4648      	mov	r0, r9
 80039f2:	f000 fa99 	bl	8003f28 <_Bfree>
 80039f6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80039f8:	1b1b      	subs	r3, r3, r4
 80039fa:	930a      	str	r3, [sp, #40]	@ 0x28
 80039fc:	f000 80b1 	beq.w	8003b62 <_dtoa_r+0x8f2>
 8003a00:	4641      	mov	r1, r8
 8003a02:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8003a04:	4648      	mov	r0, r9
 8003a06:	f000 fc45 	bl	8004294 <__pow5mult>
 8003a0a:	9003      	str	r0, [sp, #12]
 8003a0c:	2101      	movs	r1, #1
 8003a0e:	4648      	mov	r0, r9
 8003a10:	f000 fb88 	bl	8004124 <__i2b>
 8003a14:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003a16:	4604      	mov	r4, r0
 8003a18:	2b00      	cmp	r3, #0
 8003a1a:	f000 81d8 	beq.w	8003dce <_dtoa_r+0xb5e>
 8003a1e:	461a      	mov	r2, r3
 8003a20:	4601      	mov	r1, r0
 8003a22:	4648      	mov	r0, r9
 8003a24:	f000 fc36 	bl	8004294 <__pow5mult>
 8003a28:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003a2a:	4604      	mov	r4, r0
 8003a2c:	2b01      	cmp	r3, #1
 8003a2e:	f300 809f 	bgt.w	8003b70 <_dtoa_r+0x900>
 8003a32:	9b06      	ldr	r3, [sp, #24]
 8003a34:	2b00      	cmp	r3, #0
 8003a36:	f040 8097 	bne.w	8003b68 <_dtoa_r+0x8f8>
 8003a3a:	9b07      	ldr	r3, [sp, #28]
 8003a3c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003a40:	2b00      	cmp	r3, #0
 8003a42:	f040 8093 	bne.w	8003b6c <_dtoa_r+0x8fc>
 8003a46:	9b07      	ldr	r3, [sp, #28]
 8003a48:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003a4c:	0d1b      	lsrs	r3, r3, #20
 8003a4e:	051b      	lsls	r3, r3, #20
 8003a50:	b133      	cbz	r3, 8003a60 <_dtoa_r+0x7f0>
 8003a52:	9b04      	ldr	r3, [sp, #16]
 8003a54:	3301      	adds	r3, #1
 8003a56:	9304      	str	r3, [sp, #16]
 8003a58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003a5a:	3301      	adds	r3, #1
 8003a5c:	9309      	str	r3, [sp, #36]	@ 0x24
 8003a5e:	2301      	movs	r3, #1
 8003a60:	930a      	str	r3, [sp, #40]	@ 0x28
 8003a62:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003a64:	2b00      	cmp	r3, #0
 8003a66:	f000 81b8 	beq.w	8003dda <_dtoa_r+0xb6a>
 8003a6a:	6923      	ldr	r3, [r4, #16]
 8003a6c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8003a70:	6918      	ldr	r0, [r3, #16]
 8003a72:	f000 fb0b 	bl	800408c <__hi0bits>
 8003a76:	f1c0 0020 	rsb	r0, r0, #32
 8003a7a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003a7c:	4418      	add	r0, r3
 8003a7e:	f010 001f 	ands.w	r0, r0, #31
 8003a82:	f000 8082 	beq.w	8003b8a <_dtoa_r+0x91a>
 8003a86:	f1c0 0320 	rsb	r3, r0, #32
 8003a8a:	2b04      	cmp	r3, #4
 8003a8c:	dd73      	ble.n	8003b76 <_dtoa_r+0x906>
 8003a8e:	9b04      	ldr	r3, [sp, #16]
 8003a90:	f1c0 001c 	rsb	r0, r0, #28
 8003a94:	4403      	add	r3, r0
 8003a96:	9304      	str	r3, [sp, #16]
 8003a98:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003a9a:	4406      	add	r6, r0
 8003a9c:	4403      	add	r3, r0
 8003a9e:	9309      	str	r3, [sp, #36]	@ 0x24
 8003aa0:	9b04      	ldr	r3, [sp, #16]
 8003aa2:	2b00      	cmp	r3, #0
 8003aa4:	dd05      	ble.n	8003ab2 <_dtoa_r+0x842>
 8003aa6:	461a      	mov	r2, r3
 8003aa8:	4648      	mov	r0, r9
 8003aaa:	9903      	ldr	r1, [sp, #12]
 8003aac:	f000 fc4c 	bl	8004348 <__lshift>
 8003ab0:	9003      	str	r0, [sp, #12]
 8003ab2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003ab4:	2b00      	cmp	r3, #0
 8003ab6:	dd05      	ble.n	8003ac4 <_dtoa_r+0x854>
 8003ab8:	4621      	mov	r1, r4
 8003aba:	461a      	mov	r2, r3
 8003abc:	4648      	mov	r0, r9
 8003abe:	f000 fc43 	bl	8004348 <__lshift>
 8003ac2:	4604      	mov	r4, r0
 8003ac4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003ac6:	2b00      	cmp	r3, #0
 8003ac8:	d061      	beq.n	8003b8e <_dtoa_r+0x91e>
 8003aca:	4621      	mov	r1, r4
 8003acc:	9803      	ldr	r0, [sp, #12]
 8003ace:	f000 fca7 	bl	8004420 <__mcmp>
 8003ad2:	2800      	cmp	r0, #0
 8003ad4:	da5b      	bge.n	8003b8e <_dtoa_r+0x91e>
 8003ad6:	2300      	movs	r3, #0
 8003ad8:	220a      	movs	r2, #10
 8003ada:	4648      	mov	r0, r9
 8003adc:	9903      	ldr	r1, [sp, #12]
 8003ade:	f000 fa45 	bl	8003f6c <__multadd>
 8003ae2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003ae4:	f107 38ff 	add.w	r8, r7, #4294967295	@ 0xffffffff
 8003ae8:	9003      	str	r0, [sp, #12]
 8003aea:	2b00      	cmp	r3, #0
 8003aec:	f000 8177 	beq.w	8003dde <_dtoa_r+0xb6e>
 8003af0:	4629      	mov	r1, r5
 8003af2:	2300      	movs	r3, #0
 8003af4:	220a      	movs	r2, #10
 8003af6:	4648      	mov	r0, r9
 8003af8:	f000 fa38 	bl	8003f6c <__multadd>
 8003afc:	f1bb 0f00 	cmp.w	fp, #0
 8003b00:	4605      	mov	r5, r0
 8003b02:	dc6f      	bgt.n	8003be4 <_dtoa_r+0x974>
 8003b04:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003b06:	2b02      	cmp	r3, #2
 8003b08:	dc49      	bgt.n	8003b9e <_dtoa_r+0x92e>
 8003b0a:	e06b      	b.n	8003be4 <_dtoa_r+0x974>
 8003b0c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8003b0e:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8003b12:	e73c      	b.n	800398e <_dtoa_r+0x71e>
 8003b14:	3fe00000 	.word	0x3fe00000
 8003b18:	40240000 	.word	0x40240000
 8003b1c:	9b08      	ldr	r3, [sp, #32]
 8003b1e:	1e5c      	subs	r4, r3, #1
 8003b20:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003b22:	42a3      	cmp	r3, r4
 8003b24:	db09      	blt.n	8003b3a <_dtoa_r+0x8ca>
 8003b26:	1b1c      	subs	r4, r3, r4
 8003b28:	9b08      	ldr	r3, [sp, #32]
 8003b2a:	2b00      	cmp	r3, #0
 8003b2c:	f6bf af30 	bge.w	8003990 <_dtoa_r+0x720>
 8003b30:	9b04      	ldr	r3, [sp, #16]
 8003b32:	9a08      	ldr	r2, [sp, #32]
 8003b34:	1a9e      	subs	r6, r3, r2
 8003b36:	2300      	movs	r3, #0
 8003b38:	e72b      	b.n	8003992 <_dtoa_r+0x722>
 8003b3a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003b3c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8003b3e:	1ae3      	subs	r3, r4, r3
 8003b40:	441a      	add	r2, r3
 8003b42:	940a      	str	r4, [sp, #40]	@ 0x28
 8003b44:	9e04      	ldr	r6, [sp, #16]
 8003b46:	2400      	movs	r4, #0
 8003b48:	9b08      	ldr	r3, [sp, #32]
 8003b4a:	920e      	str	r2, [sp, #56]	@ 0x38
 8003b4c:	e721      	b.n	8003992 <_dtoa_r+0x722>
 8003b4e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003b50:	9e04      	ldr	r6, [sp, #16]
 8003b52:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8003b54:	e728      	b.n	80039a8 <_dtoa_r+0x738>
 8003b56:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8003b5a:	e751      	b.n	8003a00 <_dtoa_r+0x790>
 8003b5c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8003b5e:	9903      	ldr	r1, [sp, #12]
 8003b60:	e750      	b.n	8003a04 <_dtoa_r+0x794>
 8003b62:	f8cd 800c 	str.w	r8, [sp, #12]
 8003b66:	e751      	b.n	8003a0c <_dtoa_r+0x79c>
 8003b68:	2300      	movs	r3, #0
 8003b6a:	e779      	b.n	8003a60 <_dtoa_r+0x7f0>
 8003b6c:	9b06      	ldr	r3, [sp, #24]
 8003b6e:	e777      	b.n	8003a60 <_dtoa_r+0x7f0>
 8003b70:	2300      	movs	r3, #0
 8003b72:	930a      	str	r3, [sp, #40]	@ 0x28
 8003b74:	e779      	b.n	8003a6a <_dtoa_r+0x7fa>
 8003b76:	d093      	beq.n	8003aa0 <_dtoa_r+0x830>
 8003b78:	9a04      	ldr	r2, [sp, #16]
 8003b7a:	331c      	adds	r3, #28
 8003b7c:	441a      	add	r2, r3
 8003b7e:	9204      	str	r2, [sp, #16]
 8003b80:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003b82:	441e      	add	r6, r3
 8003b84:	441a      	add	r2, r3
 8003b86:	9209      	str	r2, [sp, #36]	@ 0x24
 8003b88:	e78a      	b.n	8003aa0 <_dtoa_r+0x830>
 8003b8a:	4603      	mov	r3, r0
 8003b8c:	e7f4      	b.n	8003b78 <_dtoa_r+0x908>
 8003b8e:	9b08      	ldr	r3, [sp, #32]
 8003b90:	46b8      	mov	r8, r7
 8003b92:	2b00      	cmp	r3, #0
 8003b94:	dc20      	bgt.n	8003bd8 <_dtoa_r+0x968>
 8003b96:	469b      	mov	fp, r3
 8003b98:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003b9a:	2b02      	cmp	r3, #2
 8003b9c:	dd1e      	ble.n	8003bdc <_dtoa_r+0x96c>
 8003b9e:	f1bb 0f00 	cmp.w	fp, #0
 8003ba2:	f47f adb1 	bne.w	8003708 <_dtoa_r+0x498>
 8003ba6:	4621      	mov	r1, r4
 8003ba8:	465b      	mov	r3, fp
 8003baa:	2205      	movs	r2, #5
 8003bac:	4648      	mov	r0, r9
 8003bae:	f000 f9dd 	bl	8003f6c <__multadd>
 8003bb2:	4601      	mov	r1, r0
 8003bb4:	4604      	mov	r4, r0
 8003bb6:	9803      	ldr	r0, [sp, #12]
 8003bb8:	f000 fc32 	bl	8004420 <__mcmp>
 8003bbc:	2800      	cmp	r0, #0
 8003bbe:	f77f ada3 	ble.w	8003708 <_dtoa_r+0x498>
 8003bc2:	4656      	mov	r6, sl
 8003bc4:	2331      	movs	r3, #49	@ 0x31
 8003bc6:	f108 0801 	add.w	r8, r8, #1
 8003bca:	f806 3b01 	strb.w	r3, [r6], #1
 8003bce:	e59f      	b.n	8003710 <_dtoa_r+0x4a0>
 8003bd0:	46b8      	mov	r8, r7
 8003bd2:	9c08      	ldr	r4, [sp, #32]
 8003bd4:	4625      	mov	r5, r4
 8003bd6:	e7f4      	b.n	8003bc2 <_dtoa_r+0x952>
 8003bd8:	f8dd b020 	ldr.w	fp, [sp, #32]
 8003bdc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003bde:	2b00      	cmp	r3, #0
 8003be0:	f000 8101 	beq.w	8003de6 <_dtoa_r+0xb76>
 8003be4:	2e00      	cmp	r6, #0
 8003be6:	dd05      	ble.n	8003bf4 <_dtoa_r+0x984>
 8003be8:	4629      	mov	r1, r5
 8003bea:	4632      	mov	r2, r6
 8003bec:	4648      	mov	r0, r9
 8003bee:	f000 fbab 	bl	8004348 <__lshift>
 8003bf2:	4605      	mov	r5, r0
 8003bf4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003bf6:	2b00      	cmp	r3, #0
 8003bf8:	d05c      	beq.n	8003cb4 <_dtoa_r+0xa44>
 8003bfa:	4648      	mov	r0, r9
 8003bfc:	6869      	ldr	r1, [r5, #4]
 8003bfe:	f000 f953 	bl	8003ea8 <_Balloc>
 8003c02:	4606      	mov	r6, r0
 8003c04:	b928      	cbnz	r0, 8003c12 <_dtoa_r+0x9a2>
 8003c06:	4602      	mov	r2, r0
 8003c08:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8003c0c:	4b80      	ldr	r3, [pc, #512]	@ (8003e10 <_dtoa_r+0xba0>)
 8003c0e:	f7ff bb43 	b.w	8003298 <_dtoa_r+0x28>
 8003c12:	692a      	ldr	r2, [r5, #16]
 8003c14:	f105 010c 	add.w	r1, r5, #12
 8003c18:	3202      	adds	r2, #2
 8003c1a:	0092      	lsls	r2, r2, #2
 8003c1c:	300c      	adds	r0, #12
 8003c1e:	f001 fe8d 	bl	800593c <memcpy>
 8003c22:	2201      	movs	r2, #1
 8003c24:	4631      	mov	r1, r6
 8003c26:	4648      	mov	r0, r9
 8003c28:	f000 fb8e 	bl	8004348 <__lshift>
 8003c2c:	462f      	mov	r7, r5
 8003c2e:	4605      	mov	r5, r0
 8003c30:	f10a 0301 	add.w	r3, sl, #1
 8003c34:	9304      	str	r3, [sp, #16]
 8003c36:	eb0a 030b 	add.w	r3, sl, fp
 8003c3a:	930a      	str	r3, [sp, #40]	@ 0x28
 8003c3c:	9b06      	ldr	r3, [sp, #24]
 8003c3e:	f003 0301 	and.w	r3, r3, #1
 8003c42:	9309      	str	r3, [sp, #36]	@ 0x24
 8003c44:	9b04      	ldr	r3, [sp, #16]
 8003c46:	4621      	mov	r1, r4
 8003c48:	9803      	ldr	r0, [sp, #12]
 8003c4a:	f103 3bff 	add.w	fp, r3, #4294967295	@ 0xffffffff
 8003c4e:	f7ff fa87 	bl	8003160 <quorem>
 8003c52:	4603      	mov	r3, r0
 8003c54:	4639      	mov	r1, r7
 8003c56:	3330      	adds	r3, #48	@ 0x30
 8003c58:	9006      	str	r0, [sp, #24]
 8003c5a:	9803      	ldr	r0, [sp, #12]
 8003c5c:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003c5e:	f000 fbdf 	bl	8004420 <__mcmp>
 8003c62:	462a      	mov	r2, r5
 8003c64:	9008      	str	r0, [sp, #32]
 8003c66:	4621      	mov	r1, r4
 8003c68:	4648      	mov	r0, r9
 8003c6a:	f000 fbf5 	bl	8004458 <__mdiff>
 8003c6e:	68c2      	ldr	r2, [r0, #12]
 8003c70:	4606      	mov	r6, r0
 8003c72:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003c74:	bb02      	cbnz	r2, 8003cb8 <_dtoa_r+0xa48>
 8003c76:	4601      	mov	r1, r0
 8003c78:	9803      	ldr	r0, [sp, #12]
 8003c7a:	f000 fbd1 	bl	8004420 <__mcmp>
 8003c7e:	4602      	mov	r2, r0
 8003c80:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003c82:	4631      	mov	r1, r6
 8003c84:	4648      	mov	r0, r9
 8003c86:	e9cd 320b 	strd	r3, r2, [sp, #44]	@ 0x2c
 8003c8a:	f000 f94d 	bl	8003f28 <_Bfree>
 8003c8e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003c90:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8003c92:	9e04      	ldr	r6, [sp, #16]
 8003c94:	ea42 0103 	orr.w	r1, r2, r3
 8003c98:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003c9a:	4319      	orrs	r1, r3
 8003c9c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003c9e:	d10d      	bne.n	8003cbc <_dtoa_r+0xa4c>
 8003ca0:	2b39      	cmp	r3, #57	@ 0x39
 8003ca2:	d027      	beq.n	8003cf4 <_dtoa_r+0xa84>
 8003ca4:	9a08      	ldr	r2, [sp, #32]
 8003ca6:	2a00      	cmp	r2, #0
 8003ca8:	dd01      	ble.n	8003cae <_dtoa_r+0xa3e>
 8003caa:	9b06      	ldr	r3, [sp, #24]
 8003cac:	3331      	adds	r3, #49	@ 0x31
 8003cae:	f88b 3000 	strb.w	r3, [fp]
 8003cb2:	e52e      	b.n	8003712 <_dtoa_r+0x4a2>
 8003cb4:	4628      	mov	r0, r5
 8003cb6:	e7b9      	b.n	8003c2c <_dtoa_r+0x9bc>
 8003cb8:	2201      	movs	r2, #1
 8003cba:	e7e2      	b.n	8003c82 <_dtoa_r+0xa12>
 8003cbc:	9908      	ldr	r1, [sp, #32]
 8003cbe:	2900      	cmp	r1, #0
 8003cc0:	db04      	blt.n	8003ccc <_dtoa_r+0xa5c>
 8003cc2:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8003cc4:	4301      	orrs	r1, r0
 8003cc6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003cc8:	4301      	orrs	r1, r0
 8003cca:	d120      	bne.n	8003d0e <_dtoa_r+0xa9e>
 8003ccc:	2a00      	cmp	r2, #0
 8003cce:	ddee      	ble.n	8003cae <_dtoa_r+0xa3e>
 8003cd0:	2201      	movs	r2, #1
 8003cd2:	9903      	ldr	r1, [sp, #12]
 8003cd4:	4648      	mov	r0, r9
 8003cd6:	9304      	str	r3, [sp, #16]
 8003cd8:	f000 fb36 	bl	8004348 <__lshift>
 8003cdc:	4621      	mov	r1, r4
 8003cde:	9003      	str	r0, [sp, #12]
 8003ce0:	f000 fb9e 	bl	8004420 <__mcmp>
 8003ce4:	2800      	cmp	r0, #0
 8003ce6:	9b04      	ldr	r3, [sp, #16]
 8003ce8:	dc02      	bgt.n	8003cf0 <_dtoa_r+0xa80>
 8003cea:	d1e0      	bne.n	8003cae <_dtoa_r+0xa3e>
 8003cec:	07da      	lsls	r2, r3, #31
 8003cee:	d5de      	bpl.n	8003cae <_dtoa_r+0xa3e>
 8003cf0:	2b39      	cmp	r3, #57	@ 0x39
 8003cf2:	d1da      	bne.n	8003caa <_dtoa_r+0xa3a>
 8003cf4:	2339      	movs	r3, #57	@ 0x39
 8003cf6:	f88b 3000 	strb.w	r3, [fp]
 8003cfa:	4633      	mov	r3, r6
 8003cfc:	461e      	mov	r6, r3
 8003cfe:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8003d02:	3b01      	subs	r3, #1
 8003d04:	2a39      	cmp	r2, #57	@ 0x39
 8003d06:	d04e      	beq.n	8003da6 <_dtoa_r+0xb36>
 8003d08:	3201      	adds	r2, #1
 8003d0a:	701a      	strb	r2, [r3, #0]
 8003d0c:	e501      	b.n	8003712 <_dtoa_r+0x4a2>
 8003d0e:	2a00      	cmp	r2, #0
 8003d10:	dd03      	ble.n	8003d1a <_dtoa_r+0xaaa>
 8003d12:	2b39      	cmp	r3, #57	@ 0x39
 8003d14:	d0ee      	beq.n	8003cf4 <_dtoa_r+0xa84>
 8003d16:	3301      	adds	r3, #1
 8003d18:	e7c9      	b.n	8003cae <_dtoa_r+0xa3e>
 8003d1a:	9a04      	ldr	r2, [sp, #16]
 8003d1c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003d1e:	f802 3c01 	strb.w	r3, [r2, #-1]
 8003d22:	428a      	cmp	r2, r1
 8003d24:	d028      	beq.n	8003d78 <_dtoa_r+0xb08>
 8003d26:	2300      	movs	r3, #0
 8003d28:	220a      	movs	r2, #10
 8003d2a:	9903      	ldr	r1, [sp, #12]
 8003d2c:	4648      	mov	r0, r9
 8003d2e:	f000 f91d 	bl	8003f6c <__multadd>
 8003d32:	42af      	cmp	r7, r5
 8003d34:	9003      	str	r0, [sp, #12]
 8003d36:	f04f 0300 	mov.w	r3, #0
 8003d3a:	f04f 020a 	mov.w	r2, #10
 8003d3e:	4639      	mov	r1, r7
 8003d40:	4648      	mov	r0, r9
 8003d42:	d107      	bne.n	8003d54 <_dtoa_r+0xae4>
 8003d44:	f000 f912 	bl	8003f6c <__multadd>
 8003d48:	4607      	mov	r7, r0
 8003d4a:	4605      	mov	r5, r0
 8003d4c:	9b04      	ldr	r3, [sp, #16]
 8003d4e:	3301      	adds	r3, #1
 8003d50:	9304      	str	r3, [sp, #16]
 8003d52:	e777      	b.n	8003c44 <_dtoa_r+0x9d4>
 8003d54:	f000 f90a 	bl	8003f6c <__multadd>
 8003d58:	4629      	mov	r1, r5
 8003d5a:	4607      	mov	r7, r0
 8003d5c:	2300      	movs	r3, #0
 8003d5e:	220a      	movs	r2, #10
 8003d60:	4648      	mov	r0, r9
 8003d62:	f000 f903 	bl	8003f6c <__multadd>
 8003d66:	4605      	mov	r5, r0
 8003d68:	e7f0      	b.n	8003d4c <_dtoa_r+0xadc>
 8003d6a:	f1bb 0f00 	cmp.w	fp, #0
 8003d6e:	bfcc      	ite	gt
 8003d70:	465e      	movgt	r6, fp
 8003d72:	2601      	movle	r6, #1
 8003d74:	2700      	movs	r7, #0
 8003d76:	4456      	add	r6, sl
 8003d78:	2201      	movs	r2, #1
 8003d7a:	9903      	ldr	r1, [sp, #12]
 8003d7c:	4648      	mov	r0, r9
 8003d7e:	9304      	str	r3, [sp, #16]
 8003d80:	f000 fae2 	bl	8004348 <__lshift>
 8003d84:	4621      	mov	r1, r4
 8003d86:	9003      	str	r0, [sp, #12]
 8003d88:	f000 fb4a 	bl	8004420 <__mcmp>
 8003d8c:	2800      	cmp	r0, #0
 8003d8e:	dcb4      	bgt.n	8003cfa <_dtoa_r+0xa8a>
 8003d90:	d102      	bne.n	8003d98 <_dtoa_r+0xb28>
 8003d92:	9b04      	ldr	r3, [sp, #16]
 8003d94:	07db      	lsls	r3, r3, #31
 8003d96:	d4b0      	bmi.n	8003cfa <_dtoa_r+0xa8a>
 8003d98:	4633      	mov	r3, r6
 8003d9a:	461e      	mov	r6, r3
 8003d9c:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003da0:	2a30      	cmp	r2, #48	@ 0x30
 8003da2:	d0fa      	beq.n	8003d9a <_dtoa_r+0xb2a>
 8003da4:	e4b5      	b.n	8003712 <_dtoa_r+0x4a2>
 8003da6:	459a      	cmp	sl, r3
 8003da8:	d1a8      	bne.n	8003cfc <_dtoa_r+0xa8c>
 8003daa:	2331      	movs	r3, #49	@ 0x31
 8003dac:	f108 0801 	add.w	r8, r8, #1
 8003db0:	f88a 3000 	strb.w	r3, [sl]
 8003db4:	e4ad      	b.n	8003712 <_dtoa_r+0x4a2>
 8003db6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8003db8:	f8df a058 	ldr.w	sl, [pc, #88]	@ 8003e14 <_dtoa_r+0xba4>
 8003dbc:	b11b      	cbz	r3, 8003dc6 <_dtoa_r+0xb56>
 8003dbe:	f10a 0308 	add.w	r3, sl, #8
 8003dc2:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8003dc4:	6013      	str	r3, [r2, #0]
 8003dc6:	4650      	mov	r0, sl
 8003dc8:	b017      	add	sp, #92	@ 0x5c
 8003dca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003dce:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003dd0:	2b01      	cmp	r3, #1
 8003dd2:	f77f ae2e 	ble.w	8003a32 <_dtoa_r+0x7c2>
 8003dd6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003dd8:	930a      	str	r3, [sp, #40]	@ 0x28
 8003dda:	2001      	movs	r0, #1
 8003ddc:	e64d      	b.n	8003a7a <_dtoa_r+0x80a>
 8003dde:	f1bb 0f00 	cmp.w	fp, #0
 8003de2:	f77f aed9 	ble.w	8003b98 <_dtoa_r+0x928>
 8003de6:	4656      	mov	r6, sl
 8003de8:	4621      	mov	r1, r4
 8003dea:	9803      	ldr	r0, [sp, #12]
 8003dec:	f7ff f9b8 	bl	8003160 <quorem>
 8003df0:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 8003df4:	f806 3b01 	strb.w	r3, [r6], #1
 8003df8:	eba6 020a 	sub.w	r2, r6, sl
 8003dfc:	4593      	cmp	fp, r2
 8003dfe:	ddb4      	ble.n	8003d6a <_dtoa_r+0xafa>
 8003e00:	2300      	movs	r3, #0
 8003e02:	220a      	movs	r2, #10
 8003e04:	4648      	mov	r0, r9
 8003e06:	9903      	ldr	r1, [sp, #12]
 8003e08:	f000 f8b0 	bl	8003f6c <__multadd>
 8003e0c:	9003      	str	r0, [sp, #12]
 8003e0e:	e7eb      	b.n	8003de8 <_dtoa_r+0xb78>
 8003e10:	0800673f 	.word	0x0800673f
 8003e14:	080066c3 	.word	0x080066c3

08003e18 <_free_r>:
 8003e18:	b538      	push	{r3, r4, r5, lr}
 8003e1a:	4605      	mov	r5, r0
 8003e1c:	2900      	cmp	r1, #0
 8003e1e:	d040      	beq.n	8003ea2 <_free_r+0x8a>
 8003e20:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003e24:	1f0c      	subs	r4, r1, #4
 8003e26:	2b00      	cmp	r3, #0
 8003e28:	bfb8      	it	lt
 8003e2a:	18e4      	addlt	r4, r4, r3
 8003e2c:	f7fe f95e 	bl	80020ec <__malloc_lock>
 8003e30:	4a1c      	ldr	r2, [pc, #112]	@ (8003ea4 <_free_r+0x8c>)
 8003e32:	6813      	ldr	r3, [r2, #0]
 8003e34:	b933      	cbnz	r3, 8003e44 <_free_r+0x2c>
 8003e36:	6063      	str	r3, [r4, #4]
 8003e38:	6014      	str	r4, [r2, #0]
 8003e3a:	4628      	mov	r0, r5
 8003e3c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003e40:	f7fe b95a 	b.w	80020f8 <__malloc_unlock>
 8003e44:	42a3      	cmp	r3, r4
 8003e46:	d908      	bls.n	8003e5a <_free_r+0x42>
 8003e48:	6820      	ldr	r0, [r4, #0]
 8003e4a:	1821      	adds	r1, r4, r0
 8003e4c:	428b      	cmp	r3, r1
 8003e4e:	bf01      	itttt	eq
 8003e50:	6819      	ldreq	r1, [r3, #0]
 8003e52:	685b      	ldreq	r3, [r3, #4]
 8003e54:	1809      	addeq	r1, r1, r0
 8003e56:	6021      	streq	r1, [r4, #0]
 8003e58:	e7ed      	b.n	8003e36 <_free_r+0x1e>
 8003e5a:	461a      	mov	r2, r3
 8003e5c:	685b      	ldr	r3, [r3, #4]
 8003e5e:	b10b      	cbz	r3, 8003e64 <_free_r+0x4c>
 8003e60:	42a3      	cmp	r3, r4
 8003e62:	d9fa      	bls.n	8003e5a <_free_r+0x42>
 8003e64:	6811      	ldr	r1, [r2, #0]
 8003e66:	1850      	adds	r0, r2, r1
 8003e68:	42a0      	cmp	r0, r4
 8003e6a:	d10b      	bne.n	8003e84 <_free_r+0x6c>
 8003e6c:	6820      	ldr	r0, [r4, #0]
 8003e6e:	4401      	add	r1, r0
 8003e70:	1850      	adds	r0, r2, r1
 8003e72:	4283      	cmp	r3, r0
 8003e74:	6011      	str	r1, [r2, #0]
 8003e76:	d1e0      	bne.n	8003e3a <_free_r+0x22>
 8003e78:	6818      	ldr	r0, [r3, #0]
 8003e7a:	685b      	ldr	r3, [r3, #4]
 8003e7c:	4408      	add	r0, r1
 8003e7e:	6010      	str	r0, [r2, #0]
 8003e80:	6053      	str	r3, [r2, #4]
 8003e82:	e7da      	b.n	8003e3a <_free_r+0x22>
 8003e84:	d902      	bls.n	8003e8c <_free_r+0x74>
 8003e86:	230c      	movs	r3, #12
 8003e88:	602b      	str	r3, [r5, #0]
 8003e8a:	e7d6      	b.n	8003e3a <_free_r+0x22>
 8003e8c:	6820      	ldr	r0, [r4, #0]
 8003e8e:	1821      	adds	r1, r4, r0
 8003e90:	428b      	cmp	r3, r1
 8003e92:	bf01      	itttt	eq
 8003e94:	6819      	ldreq	r1, [r3, #0]
 8003e96:	685b      	ldreq	r3, [r3, #4]
 8003e98:	1809      	addeq	r1, r1, r0
 8003e9a:	6021      	streq	r1, [r4, #0]
 8003e9c:	6063      	str	r3, [r4, #4]
 8003e9e:	6054      	str	r4, [r2, #4]
 8003ea0:	e7cb      	b.n	8003e3a <_free_r+0x22>
 8003ea2:	bd38      	pop	{r3, r4, r5, pc}
 8003ea4:	20000210 	.word	0x20000210

08003ea8 <_Balloc>:
 8003ea8:	b570      	push	{r4, r5, r6, lr}
 8003eaa:	69c6      	ldr	r6, [r0, #28]
 8003eac:	4604      	mov	r4, r0
 8003eae:	460d      	mov	r5, r1
 8003eb0:	b976      	cbnz	r6, 8003ed0 <_Balloc+0x28>
 8003eb2:	2010      	movs	r0, #16
 8003eb4:	f7fe f870 	bl	8001f98 <malloc>
 8003eb8:	4602      	mov	r2, r0
 8003eba:	61e0      	str	r0, [r4, #28]
 8003ebc:	b920      	cbnz	r0, 8003ec8 <_Balloc+0x20>
 8003ebe:	216b      	movs	r1, #107	@ 0x6b
 8003ec0:	4b17      	ldr	r3, [pc, #92]	@ (8003f20 <_Balloc+0x78>)
 8003ec2:	4818      	ldr	r0, [pc, #96]	@ (8003f24 <_Balloc+0x7c>)
 8003ec4:	f001 fd4e 	bl	8005964 <__assert_func>
 8003ec8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003ecc:	6006      	str	r6, [r0, #0]
 8003ece:	60c6      	str	r6, [r0, #12]
 8003ed0:	69e6      	ldr	r6, [r4, #28]
 8003ed2:	68f3      	ldr	r3, [r6, #12]
 8003ed4:	b183      	cbz	r3, 8003ef8 <_Balloc+0x50>
 8003ed6:	69e3      	ldr	r3, [r4, #28]
 8003ed8:	68db      	ldr	r3, [r3, #12]
 8003eda:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8003ede:	b9b8      	cbnz	r0, 8003f10 <_Balloc+0x68>
 8003ee0:	2101      	movs	r1, #1
 8003ee2:	fa01 f605 	lsl.w	r6, r1, r5
 8003ee6:	1d72      	adds	r2, r6, #5
 8003ee8:	4620      	mov	r0, r4
 8003eea:	0092      	lsls	r2, r2, #2
 8003eec:	f001 fd58 	bl	80059a0 <_calloc_r>
 8003ef0:	b160      	cbz	r0, 8003f0c <_Balloc+0x64>
 8003ef2:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003ef6:	e00e      	b.n	8003f16 <_Balloc+0x6e>
 8003ef8:	2221      	movs	r2, #33	@ 0x21
 8003efa:	2104      	movs	r1, #4
 8003efc:	4620      	mov	r0, r4
 8003efe:	f001 fd4f 	bl	80059a0 <_calloc_r>
 8003f02:	69e3      	ldr	r3, [r4, #28]
 8003f04:	60f0      	str	r0, [r6, #12]
 8003f06:	68db      	ldr	r3, [r3, #12]
 8003f08:	2b00      	cmp	r3, #0
 8003f0a:	d1e4      	bne.n	8003ed6 <_Balloc+0x2e>
 8003f0c:	2000      	movs	r0, #0
 8003f0e:	bd70      	pop	{r4, r5, r6, pc}
 8003f10:	6802      	ldr	r2, [r0, #0]
 8003f12:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003f16:	2300      	movs	r3, #0
 8003f18:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003f1c:	e7f7      	b.n	8003f0e <_Balloc+0x66>
 8003f1e:	bf00      	nop
 8003f20:	080066d0 	.word	0x080066d0
 8003f24:	08006750 	.word	0x08006750

08003f28 <_Bfree>:
 8003f28:	b570      	push	{r4, r5, r6, lr}
 8003f2a:	69c6      	ldr	r6, [r0, #28]
 8003f2c:	4605      	mov	r5, r0
 8003f2e:	460c      	mov	r4, r1
 8003f30:	b976      	cbnz	r6, 8003f50 <_Bfree+0x28>
 8003f32:	2010      	movs	r0, #16
 8003f34:	f7fe f830 	bl	8001f98 <malloc>
 8003f38:	4602      	mov	r2, r0
 8003f3a:	61e8      	str	r0, [r5, #28]
 8003f3c:	b920      	cbnz	r0, 8003f48 <_Bfree+0x20>
 8003f3e:	218f      	movs	r1, #143	@ 0x8f
 8003f40:	4b08      	ldr	r3, [pc, #32]	@ (8003f64 <_Bfree+0x3c>)
 8003f42:	4809      	ldr	r0, [pc, #36]	@ (8003f68 <_Bfree+0x40>)
 8003f44:	f001 fd0e 	bl	8005964 <__assert_func>
 8003f48:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003f4c:	6006      	str	r6, [r0, #0]
 8003f4e:	60c6      	str	r6, [r0, #12]
 8003f50:	b13c      	cbz	r4, 8003f62 <_Bfree+0x3a>
 8003f52:	69eb      	ldr	r3, [r5, #28]
 8003f54:	6862      	ldr	r2, [r4, #4]
 8003f56:	68db      	ldr	r3, [r3, #12]
 8003f58:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003f5c:	6021      	str	r1, [r4, #0]
 8003f5e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003f62:	bd70      	pop	{r4, r5, r6, pc}
 8003f64:	080066d0 	.word	0x080066d0
 8003f68:	08006750 	.word	0x08006750

08003f6c <__multadd>:
 8003f6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003f70:	4607      	mov	r7, r0
 8003f72:	460c      	mov	r4, r1
 8003f74:	461e      	mov	r6, r3
 8003f76:	2000      	movs	r0, #0
 8003f78:	690d      	ldr	r5, [r1, #16]
 8003f7a:	f101 0c14 	add.w	ip, r1, #20
 8003f7e:	f8dc 3000 	ldr.w	r3, [ip]
 8003f82:	3001      	adds	r0, #1
 8003f84:	b299      	uxth	r1, r3
 8003f86:	fb02 6101 	mla	r1, r2, r1, r6
 8003f8a:	0c1e      	lsrs	r6, r3, #16
 8003f8c:	0c0b      	lsrs	r3, r1, #16
 8003f8e:	fb02 3306 	mla	r3, r2, r6, r3
 8003f92:	b289      	uxth	r1, r1
 8003f94:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8003f98:	4285      	cmp	r5, r0
 8003f9a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8003f9e:	f84c 1b04 	str.w	r1, [ip], #4
 8003fa2:	dcec      	bgt.n	8003f7e <__multadd+0x12>
 8003fa4:	b30e      	cbz	r6, 8003fea <__multadd+0x7e>
 8003fa6:	68a3      	ldr	r3, [r4, #8]
 8003fa8:	42ab      	cmp	r3, r5
 8003faa:	dc19      	bgt.n	8003fe0 <__multadd+0x74>
 8003fac:	6861      	ldr	r1, [r4, #4]
 8003fae:	4638      	mov	r0, r7
 8003fb0:	3101      	adds	r1, #1
 8003fb2:	f7ff ff79 	bl	8003ea8 <_Balloc>
 8003fb6:	4680      	mov	r8, r0
 8003fb8:	b928      	cbnz	r0, 8003fc6 <__multadd+0x5a>
 8003fba:	4602      	mov	r2, r0
 8003fbc:	21ba      	movs	r1, #186	@ 0xba
 8003fbe:	4b0c      	ldr	r3, [pc, #48]	@ (8003ff0 <__multadd+0x84>)
 8003fc0:	480c      	ldr	r0, [pc, #48]	@ (8003ff4 <__multadd+0x88>)
 8003fc2:	f001 fccf 	bl	8005964 <__assert_func>
 8003fc6:	6922      	ldr	r2, [r4, #16]
 8003fc8:	f104 010c 	add.w	r1, r4, #12
 8003fcc:	3202      	adds	r2, #2
 8003fce:	0092      	lsls	r2, r2, #2
 8003fd0:	300c      	adds	r0, #12
 8003fd2:	f001 fcb3 	bl	800593c <memcpy>
 8003fd6:	4621      	mov	r1, r4
 8003fd8:	4638      	mov	r0, r7
 8003fda:	f7ff ffa5 	bl	8003f28 <_Bfree>
 8003fde:	4644      	mov	r4, r8
 8003fe0:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003fe4:	3501      	adds	r5, #1
 8003fe6:	615e      	str	r6, [r3, #20]
 8003fe8:	6125      	str	r5, [r4, #16]
 8003fea:	4620      	mov	r0, r4
 8003fec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003ff0:	0800673f 	.word	0x0800673f
 8003ff4:	08006750 	.word	0x08006750

08003ff8 <__s2b>:
 8003ff8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003ffc:	4615      	mov	r5, r2
 8003ffe:	2209      	movs	r2, #9
 8004000:	461f      	mov	r7, r3
 8004002:	3308      	adds	r3, #8
 8004004:	460c      	mov	r4, r1
 8004006:	fb93 f3f2 	sdiv	r3, r3, r2
 800400a:	4606      	mov	r6, r0
 800400c:	2201      	movs	r2, #1
 800400e:	2100      	movs	r1, #0
 8004010:	429a      	cmp	r2, r3
 8004012:	db09      	blt.n	8004028 <__s2b+0x30>
 8004014:	4630      	mov	r0, r6
 8004016:	f7ff ff47 	bl	8003ea8 <_Balloc>
 800401a:	b940      	cbnz	r0, 800402e <__s2b+0x36>
 800401c:	4602      	mov	r2, r0
 800401e:	21d3      	movs	r1, #211	@ 0xd3
 8004020:	4b18      	ldr	r3, [pc, #96]	@ (8004084 <__s2b+0x8c>)
 8004022:	4819      	ldr	r0, [pc, #100]	@ (8004088 <__s2b+0x90>)
 8004024:	f001 fc9e 	bl	8005964 <__assert_func>
 8004028:	0052      	lsls	r2, r2, #1
 800402a:	3101      	adds	r1, #1
 800402c:	e7f0      	b.n	8004010 <__s2b+0x18>
 800402e:	9b08      	ldr	r3, [sp, #32]
 8004030:	2d09      	cmp	r5, #9
 8004032:	6143      	str	r3, [r0, #20]
 8004034:	f04f 0301 	mov.w	r3, #1
 8004038:	6103      	str	r3, [r0, #16]
 800403a:	dd16      	ble.n	800406a <__s2b+0x72>
 800403c:	f104 0909 	add.w	r9, r4, #9
 8004040:	46c8      	mov	r8, r9
 8004042:	442c      	add	r4, r5
 8004044:	f818 3b01 	ldrb.w	r3, [r8], #1
 8004048:	4601      	mov	r1, r0
 800404a:	220a      	movs	r2, #10
 800404c:	4630      	mov	r0, r6
 800404e:	3b30      	subs	r3, #48	@ 0x30
 8004050:	f7ff ff8c 	bl	8003f6c <__multadd>
 8004054:	45a0      	cmp	r8, r4
 8004056:	d1f5      	bne.n	8004044 <__s2b+0x4c>
 8004058:	f1a5 0408 	sub.w	r4, r5, #8
 800405c:	444c      	add	r4, r9
 800405e:	1b2d      	subs	r5, r5, r4
 8004060:	1963      	adds	r3, r4, r5
 8004062:	42bb      	cmp	r3, r7
 8004064:	db04      	blt.n	8004070 <__s2b+0x78>
 8004066:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800406a:	2509      	movs	r5, #9
 800406c:	340a      	adds	r4, #10
 800406e:	e7f6      	b.n	800405e <__s2b+0x66>
 8004070:	f814 3b01 	ldrb.w	r3, [r4], #1
 8004074:	4601      	mov	r1, r0
 8004076:	220a      	movs	r2, #10
 8004078:	4630      	mov	r0, r6
 800407a:	3b30      	subs	r3, #48	@ 0x30
 800407c:	f7ff ff76 	bl	8003f6c <__multadd>
 8004080:	e7ee      	b.n	8004060 <__s2b+0x68>
 8004082:	bf00      	nop
 8004084:	0800673f 	.word	0x0800673f
 8004088:	08006750 	.word	0x08006750

0800408c <__hi0bits>:
 800408c:	4603      	mov	r3, r0
 800408e:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8004092:	bf3a      	itte	cc
 8004094:	0403      	lslcc	r3, r0, #16
 8004096:	2010      	movcc	r0, #16
 8004098:	2000      	movcs	r0, #0
 800409a:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800409e:	bf3c      	itt	cc
 80040a0:	021b      	lslcc	r3, r3, #8
 80040a2:	3008      	addcc	r0, #8
 80040a4:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80040a8:	bf3c      	itt	cc
 80040aa:	011b      	lslcc	r3, r3, #4
 80040ac:	3004      	addcc	r0, #4
 80040ae:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80040b2:	bf3c      	itt	cc
 80040b4:	009b      	lslcc	r3, r3, #2
 80040b6:	3002      	addcc	r0, #2
 80040b8:	2b00      	cmp	r3, #0
 80040ba:	db05      	blt.n	80040c8 <__hi0bits+0x3c>
 80040bc:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 80040c0:	f100 0001 	add.w	r0, r0, #1
 80040c4:	bf08      	it	eq
 80040c6:	2020      	moveq	r0, #32
 80040c8:	4770      	bx	lr

080040ca <__lo0bits>:
 80040ca:	6803      	ldr	r3, [r0, #0]
 80040cc:	4602      	mov	r2, r0
 80040ce:	f013 0007 	ands.w	r0, r3, #7
 80040d2:	d00b      	beq.n	80040ec <__lo0bits+0x22>
 80040d4:	07d9      	lsls	r1, r3, #31
 80040d6:	d421      	bmi.n	800411c <__lo0bits+0x52>
 80040d8:	0798      	lsls	r0, r3, #30
 80040da:	bf49      	itett	mi
 80040dc:	085b      	lsrmi	r3, r3, #1
 80040de:	089b      	lsrpl	r3, r3, #2
 80040e0:	2001      	movmi	r0, #1
 80040e2:	6013      	strmi	r3, [r2, #0]
 80040e4:	bf5c      	itt	pl
 80040e6:	2002      	movpl	r0, #2
 80040e8:	6013      	strpl	r3, [r2, #0]
 80040ea:	4770      	bx	lr
 80040ec:	b299      	uxth	r1, r3
 80040ee:	b909      	cbnz	r1, 80040f4 <__lo0bits+0x2a>
 80040f0:	2010      	movs	r0, #16
 80040f2:	0c1b      	lsrs	r3, r3, #16
 80040f4:	b2d9      	uxtb	r1, r3
 80040f6:	b909      	cbnz	r1, 80040fc <__lo0bits+0x32>
 80040f8:	3008      	adds	r0, #8
 80040fa:	0a1b      	lsrs	r3, r3, #8
 80040fc:	0719      	lsls	r1, r3, #28
 80040fe:	bf04      	itt	eq
 8004100:	091b      	lsreq	r3, r3, #4
 8004102:	3004      	addeq	r0, #4
 8004104:	0799      	lsls	r1, r3, #30
 8004106:	bf04      	itt	eq
 8004108:	089b      	lsreq	r3, r3, #2
 800410a:	3002      	addeq	r0, #2
 800410c:	07d9      	lsls	r1, r3, #31
 800410e:	d403      	bmi.n	8004118 <__lo0bits+0x4e>
 8004110:	085b      	lsrs	r3, r3, #1
 8004112:	f100 0001 	add.w	r0, r0, #1
 8004116:	d003      	beq.n	8004120 <__lo0bits+0x56>
 8004118:	6013      	str	r3, [r2, #0]
 800411a:	4770      	bx	lr
 800411c:	2000      	movs	r0, #0
 800411e:	4770      	bx	lr
 8004120:	2020      	movs	r0, #32
 8004122:	4770      	bx	lr

08004124 <__i2b>:
 8004124:	b510      	push	{r4, lr}
 8004126:	460c      	mov	r4, r1
 8004128:	2101      	movs	r1, #1
 800412a:	f7ff febd 	bl	8003ea8 <_Balloc>
 800412e:	4602      	mov	r2, r0
 8004130:	b928      	cbnz	r0, 800413e <__i2b+0x1a>
 8004132:	f240 1145 	movw	r1, #325	@ 0x145
 8004136:	4b04      	ldr	r3, [pc, #16]	@ (8004148 <__i2b+0x24>)
 8004138:	4804      	ldr	r0, [pc, #16]	@ (800414c <__i2b+0x28>)
 800413a:	f001 fc13 	bl	8005964 <__assert_func>
 800413e:	2301      	movs	r3, #1
 8004140:	6144      	str	r4, [r0, #20]
 8004142:	6103      	str	r3, [r0, #16]
 8004144:	bd10      	pop	{r4, pc}
 8004146:	bf00      	nop
 8004148:	0800673f 	.word	0x0800673f
 800414c:	08006750 	.word	0x08006750

08004150 <__multiply>:
 8004150:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004154:	4617      	mov	r7, r2
 8004156:	690a      	ldr	r2, [r1, #16]
 8004158:	693b      	ldr	r3, [r7, #16]
 800415a:	4689      	mov	r9, r1
 800415c:	429a      	cmp	r2, r3
 800415e:	bfa2      	ittt	ge
 8004160:	463b      	movge	r3, r7
 8004162:	460f      	movge	r7, r1
 8004164:	4699      	movge	r9, r3
 8004166:	693d      	ldr	r5, [r7, #16]
 8004168:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800416c:	68bb      	ldr	r3, [r7, #8]
 800416e:	6879      	ldr	r1, [r7, #4]
 8004170:	eb05 060a 	add.w	r6, r5, sl
 8004174:	42b3      	cmp	r3, r6
 8004176:	b085      	sub	sp, #20
 8004178:	bfb8      	it	lt
 800417a:	3101      	addlt	r1, #1
 800417c:	f7ff fe94 	bl	8003ea8 <_Balloc>
 8004180:	b930      	cbnz	r0, 8004190 <__multiply+0x40>
 8004182:	4602      	mov	r2, r0
 8004184:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8004188:	4b40      	ldr	r3, [pc, #256]	@ (800428c <__multiply+0x13c>)
 800418a:	4841      	ldr	r0, [pc, #260]	@ (8004290 <__multiply+0x140>)
 800418c:	f001 fbea 	bl	8005964 <__assert_func>
 8004190:	f100 0414 	add.w	r4, r0, #20
 8004194:	4623      	mov	r3, r4
 8004196:	2200      	movs	r2, #0
 8004198:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 800419c:	4573      	cmp	r3, lr
 800419e:	d320      	bcc.n	80041e2 <__multiply+0x92>
 80041a0:	f107 0814 	add.w	r8, r7, #20
 80041a4:	f109 0114 	add.w	r1, r9, #20
 80041a8:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 80041ac:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 80041b0:	9302      	str	r3, [sp, #8]
 80041b2:	1beb      	subs	r3, r5, r7
 80041b4:	3b15      	subs	r3, #21
 80041b6:	f023 0303 	bic.w	r3, r3, #3
 80041ba:	3304      	adds	r3, #4
 80041bc:	3715      	adds	r7, #21
 80041be:	42bd      	cmp	r5, r7
 80041c0:	bf38      	it	cc
 80041c2:	2304      	movcc	r3, #4
 80041c4:	9301      	str	r3, [sp, #4]
 80041c6:	9b02      	ldr	r3, [sp, #8]
 80041c8:	9103      	str	r1, [sp, #12]
 80041ca:	428b      	cmp	r3, r1
 80041cc:	d80c      	bhi.n	80041e8 <__multiply+0x98>
 80041ce:	2e00      	cmp	r6, #0
 80041d0:	dd03      	ble.n	80041da <__multiply+0x8a>
 80041d2:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 80041d6:	2b00      	cmp	r3, #0
 80041d8:	d055      	beq.n	8004286 <__multiply+0x136>
 80041da:	6106      	str	r6, [r0, #16]
 80041dc:	b005      	add	sp, #20
 80041de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80041e2:	f843 2b04 	str.w	r2, [r3], #4
 80041e6:	e7d9      	b.n	800419c <__multiply+0x4c>
 80041e8:	f8b1 a000 	ldrh.w	sl, [r1]
 80041ec:	f1ba 0f00 	cmp.w	sl, #0
 80041f0:	d01f      	beq.n	8004232 <__multiply+0xe2>
 80041f2:	46c4      	mov	ip, r8
 80041f4:	46a1      	mov	r9, r4
 80041f6:	2700      	movs	r7, #0
 80041f8:	f85c 2b04 	ldr.w	r2, [ip], #4
 80041fc:	f8d9 3000 	ldr.w	r3, [r9]
 8004200:	fa1f fb82 	uxth.w	fp, r2
 8004204:	b29b      	uxth	r3, r3
 8004206:	fb0a 330b 	mla	r3, sl, fp, r3
 800420a:	443b      	add	r3, r7
 800420c:	f8d9 7000 	ldr.w	r7, [r9]
 8004210:	0c12      	lsrs	r2, r2, #16
 8004212:	0c3f      	lsrs	r7, r7, #16
 8004214:	fb0a 7202 	mla	r2, sl, r2, r7
 8004218:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 800421c:	b29b      	uxth	r3, r3
 800421e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8004222:	4565      	cmp	r5, ip
 8004224:	ea4f 4712 	mov.w	r7, r2, lsr #16
 8004228:	f849 3b04 	str.w	r3, [r9], #4
 800422c:	d8e4      	bhi.n	80041f8 <__multiply+0xa8>
 800422e:	9b01      	ldr	r3, [sp, #4]
 8004230:	50e7      	str	r7, [r4, r3]
 8004232:	9b03      	ldr	r3, [sp, #12]
 8004234:	3104      	adds	r1, #4
 8004236:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800423a:	f1b9 0f00 	cmp.w	r9, #0
 800423e:	d020      	beq.n	8004282 <__multiply+0x132>
 8004240:	4647      	mov	r7, r8
 8004242:	46a4      	mov	ip, r4
 8004244:	f04f 0a00 	mov.w	sl, #0
 8004248:	6823      	ldr	r3, [r4, #0]
 800424a:	f8b7 b000 	ldrh.w	fp, [r7]
 800424e:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 8004252:	b29b      	uxth	r3, r3
 8004254:	fb09 220b 	mla	r2, r9, fp, r2
 8004258:	4452      	add	r2, sl
 800425a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800425e:	f84c 3b04 	str.w	r3, [ip], #4
 8004262:	f857 3b04 	ldr.w	r3, [r7], #4
 8004266:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800426a:	f8bc 3000 	ldrh.w	r3, [ip]
 800426e:	42bd      	cmp	r5, r7
 8004270:	fb09 330a 	mla	r3, r9, sl, r3
 8004274:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 8004278:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800427c:	d8e5      	bhi.n	800424a <__multiply+0xfa>
 800427e:	9a01      	ldr	r2, [sp, #4]
 8004280:	50a3      	str	r3, [r4, r2]
 8004282:	3404      	adds	r4, #4
 8004284:	e79f      	b.n	80041c6 <__multiply+0x76>
 8004286:	3e01      	subs	r6, #1
 8004288:	e7a1      	b.n	80041ce <__multiply+0x7e>
 800428a:	bf00      	nop
 800428c:	0800673f 	.word	0x0800673f
 8004290:	08006750 	.word	0x08006750

08004294 <__pow5mult>:
 8004294:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004298:	4615      	mov	r5, r2
 800429a:	f012 0203 	ands.w	r2, r2, #3
 800429e:	4607      	mov	r7, r0
 80042a0:	460e      	mov	r6, r1
 80042a2:	d007      	beq.n	80042b4 <__pow5mult+0x20>
 80042a4:	4c25      	ldr	r4, [pc, #148]	@ (800433c <__pow5mult+0xa8>)
 80042a6:	3a01      	subs	r2, #1
 80042a8:	2300      	movs	r3, #0
 80042aa:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80042ae:	f7ff fe5d 	bl	8003f6c <__multadd>
 80042b2:	4606      	mov	r6, r0
 80042b4:	10ad      	asrs	r5, r5, #2
 80042b6:	d03d      	beq.n	8004334 <__pow5mult+0xa0>
 80042b8:	69fc      	ldr	r4, [r7, #28]
 80042ba:	b97c      	cbnz	r4, 80042dc <__pow5mult+0x48>
 80042bc:	2010      	movs	r0, #16
 80042be:	f7fd fe6b 	bl	8001f98 <malloc>
 80042c2:	4602      	mov	r2, r0
 80042c4:	61f8      	str	r0, [r7, #28]
 80042c6:	b928      	cbnz	r0, 80042d4 <__pow5mult+0x40>
 80042c8:	f240 11b3 	movw	r1, #435	@ 0x1b3
 80042cc:	4b1c      	ldr	r3, [pc, #112]	@ (8004340 <__pow5mult+0xac>)
 80042ce:	481d      	ldr	r0, [pc, #116]	@ (8004344 <__pow5mult+0xb0>)
 80042d0:	f001 fb48 	bl	8005964 <__assert_func>
 80042d4:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80042d8:	6004      	str	r4, [r0, #0]
 80042da:	60c4      	str	r4, [r0, #12]
 80042dc:	f8d7 801c 	ldr.w	r8, [r7, #28]
 80042e0:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80042e4:	b94c      	cbnz	r4, 80042fa <__pow5mult+0x66>
 80042e6:	f240 2171 	movw	r1, #625	@ 0x271
 80042ea:	4638      	mov	r0, r7
 80042ec:	f7ff ff1a 	bl	8004124 <__i2b>
 80042f0:	2300      	movs	r3, #0
 80042f2:	4604      	mov	r4, r0
 80042f4:	f8c8 0008 	str.w	r0, [r8, #8]
 80042f8:	6003      	str	r3, [r0, #0]
 80042fa:	f04f 0900 	mov.w	r9, #0
 80042fe:	07eb      	lsls	r3, r5, #31
 8004300:	d50a      	bpl.n	8004318 <__pow5mult+0x84>
 8004302:	4631      	mov	r1, r6
 8004304:	4622      	mov	r2, r4
 8004306:	4638      	mov	r0, r7
 8004308:	f7ff ff22 	bl	8004150 <__multiply>
 800430c:	4680      	mov	r8, r0
 800430e:	4631      	mov	r1, r6
 8004310:	4638      	mov	r0, r7
 8004312:	f7ff fe09 	bl	8003f28 <_Bfree>
 8004316:	4646      	mov	r6, r8
 8004318:	106d      	asrs	r5, r5, #1
 800431a:	d00b      	beq.n	8004334 <__pow5mult+0xa0>
 800431c:	6820      	ldr	r0, [r4, #0]
 800431e:	b938      	cbnz	r0, 8004330 <__pow5mult+0x9c>
 8004320:	4622      	mov	r2, r4
 8004322:	4621      	mov	r1, r4
 8004324:	4638      	mov	r0, r7
 8004326:	f7ff ff13 	bl	8004150 <__multiply>
 800432a:	6020      	str	r0, [r4, #0]
 800432c:	f8c0 9000 	str.w	r9, [r0]
 8004330:	4604      	mov	r4, r0
 8004332:	e7e4      	b.n	80042fe <__pow5mult+0x6a>
 8004334:	4630      	mov	r0, r6
 8004336:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800433a:	bf00      	nop
 800433c:	08006860 	.word	0x08006860
 8004340:	080066d0 	.word	0x080066d0
 8004344:	08006750 	.word	0x08006750

08004348 <__lshift>:
 8004348:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800434c:	460c      	mov	r4, r1
 800434e:	4607      	mov	r7, r0
 8004350:	4691      	mov	r9, r2
 8004352:	6923      	ldr	r3, [r4, #16]
 8004354:	6849      	ldr	r1, [r1, #4]
 8004356:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800435a:	68a3      	ldr	r3, [r4, #8]
 800435c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8004360:	f108 0601 	add.w	r6, r8, #1
 8004364:	42b3      	cmp	r3, r6
 8004366:	db0b      	blt.n	8004380 <__lshift+0x38>
 8004368:	4638      	mov	r0, r7
 800436a:	f7ff fd9d 	bl	8003ea8 <_Balloc>
 800436e:	4605      	mov	r5, r0
 8004370:	b948      	cbnz	r0, 8004386 <__lshift+0x3e>
 8004372:	4602      	mov	r2, r0
 8004374:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8004378:	4b27      	ldr	r3, [pc, #156]	@ (8004418 <__lshift+0xd0>)
 800437a:	4828      	ldr	r0, [pc, #160]	@ (800441c <__lshift+0xd4>)
 800437c:	f001 faf2 	bl	8005964 <__assert_func>
 8004380:	3101      	adds	r1, #1
 8004382:	005b      	lsls	r3, r3, #1
 8004384:	e7ee      	b.n	8004364 <__lshift+0x1c>
 8004386:	2300      	movs	r3, #0
 8004388:	f100 0114 	add.w	r1, r0, #20
 800438c:	f100 0210 	add.w	r2, r0, #16
 8004390:	4618      	mov	r0, r3
 8004392:	4553      	cmp	r3, sl
 8004394:	db33      	blt.n	80043fe <__lshift+0xb6>
 8004396:	6920      	ldr	r0, [r4, #16]
 8004398:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800439c:	f104 0314 	add.w	r3, r4, #20
 80043a0:	f019 091f 	ands.w	r9, r9, #31
 80043a4:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80043a8:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80043ac:	d02b      	beq.n	8004406 <__lshift+0xbe>
 80043ae:	468a      	mov	sl, r1
 80043b0:	2200      	movs	r2, #0
 80043b2:	f1c9 0e20 	rsb	lr, r9, #32
 80043b6:	6818      	ldr	r0, [r3, #0]
 80043b8:	fa00 f009 	lsl.w	r0, r0, r9
 80043bc:	4310      	orrs	r0, r2
 80043be:	f84a 0b04 	str.w	r0, [sl], #4
 80043c2:	f853 2b04 	ldr.w	r2, [r3], #4
 80043c6:	459c      	cmp	ip, r3
 80043c8:	fa22 f20e 	lsr.w	r2, r2, lr
 80043cc:	d8f3      	bhi.n	80043b6 <__lshift+0x6e>
 80043ce:	ebac 0304 	sub.w	r3, ip, r4
 80043d2:	3b15      	subs	r3, #21
 80043d4:	f023 0303 	bic.w	r3, r3, #3
 80043d8:	3304      	adds	r3, #4
 80043da:	f104 0015 	add.w	r0, r4, #21
 80043de:	4560      	cmp	r0, ip
 80043e0:	bf88      	it	hi
 80043e2:	2304      	movhi	r3, #4
 80043e4:	50ca      	str	r2, [r1, r3]
 80043e6:	b10a      	cbz	r2, 80043ec <__lshift+0xa4>
 80043e8:	f108 0602 	add.w	r6, r8, #2
 80043ec:	3e01      	subs	r6, #1
 80043ee:	4638      	mov	r0, r7
 80043f0:	4621      	mov	r1, r4
 80043f2:	612e      	str	r6, [r5, #16]
 80043f4:	f7ff fd98 	bl	8003f28 <_Bfree>
 80043f8:	4628      	mov	r0, r5
 80043fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80043fe:	f842 0f04 	str.w	r0, [r2, #4]!
 8004402:	3301      	adds	r3, #1
 8004404:	e7c5      	b.n	8004392 <__lshift+0x4a>
 8004406:	3904      	subs	r1, #4
 8004408:	f853 2b04 	ldr.w	r2, [r3], #4
 800440c:	459c      	cmp	ip, r3
 800440e:	f841 2f04 	str.w	r2, [r1, #4]!
 8004412:	d8f9      	bhi.n	8004408 <__lshift+0xc0>
 8004414:	e7ea      	b.n	80043ec <__lshift+0xa4>
 8004416:	bf00      	nop
 8004418:	0800673f 	.word	0x0800673f
 800441c:	08006750 	.word	0x08006750

08004420 <__mcmp>:
 8004420:	4603      	mov	r3, r0
 8004422:	690a      	ldr	r2, [r1, #16]
 8004424:	6900      	ldr	r0, [r0, #16]
 8004426:	b530      	push	{r4, r5, lr}
 8004428:	1a80      	subs	r0, r0, r2
 800442a:	d10e      	bne.n	800444a <__mcmp+0x2a>
 800442c:	3314      	adds	r3, #20
 800442e:	3114      	adds	r1, #20
 8004430:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8004434:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8004438:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800443c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8004440:	4295      	cmp	r5, r2
 8004442:	d003      	beq.n	800444c <__mcmp+0x2c>
 8004444:	d205      	bcs.n	8004452 <__mcmp+0x32>
 8004446:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800444a:	bd30      	pop	{r4, r5, pc}
 800444c:	42a3      	cmp	r3, r4
 800444e:	d3f3      	bcc.n	8004438 <__mcmp+0x18>
 8004450:	e7fb      	b.n	800444a <__mcmp+0x2a>
 8004452:	2001      	movs	r0, #1
 8004454:	e7f9      	b.n	800444a <__mcmp+0x2a>
	...

08004458 <__mdiff>:
 8004458:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800445c:	4689      	mov	r9, r1
 800445e:	4606      	mov	r6, r0
 8004460:	4611      	mov	r1, r2
 8004462:	4648      	mov	r0, r9
 8004464:	4614      	mov	r4, r2
 8004466:	f7ff ffdb 	bl	8004420 <__mcmp>
 800446a:	1e05      	subs	r5, r0, #0
 800446c:	d112      	bne.n	8004494 <__mdiff+0x3c>
 800446e:	4629      	mov	r1, r5
 8004470:	4630      	mov	r0, r6
 8004472:	f7ff fd19 	bl	8003ea8 <_Balloc>
 8004476:	4602      	mov	r2, r0
 8004478:	b928      	cbnz	r0, 8004486 <__mdiff+0x2e>
 800447a:	f240 2137 	movw	r1, #567	@ 0x237
 800447e:	4b3e      	ldr	r3, [pc, #248]	@ (8004578 <__mdiff+0x120>)
 8004480:	483e      	ldr	r0, [pc, #248]	@ (800457c <__mdiff+0x124>)
 8004482:	f001 fa6f 	bl	8005964 <__assert_func>
 8004486:	2301      	movs	r3, #1
 8004488:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800448c:	4610      	mov	r0, r2
 800448e:	b003      	add	sp, #12
 8004490:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004494:	bfbc      	itt	lt
 8004496:	464b      	movlt	r3, r9
 8004498:	46a1      	movlt	r9, r4
 800449a:	4630      	mov	r0, r6
 800449c:	f8d9 1004 	ldr.w	r1, [r9, #4]
 80044a0:	bfba      	itte	lt
 80044a2:	461c      	movlt	r4, r3
 80044a4:	2501      	movlt	r5, #1
 80044a6:	2500      	movge	r5, #0
 80044a8:	f7ff fcfe 	bl	8003ea8 <_Balloc>
 80044ac:	4602      	mov	r2, r0
 80044ae:	b918      	cbnz	r0, 80044b8 <__mdiff+0x60>
 80044b0:	f240 2145 	movw	r1, #581	@ 0x245
 80044b4:	4b30      	ldr	r3, [pc, #192]	@ (8004578 <__mdiff+0x120>)
 80044b6:	e7e3      	b.n	8004480 <__mdiff+0x28>
 80044b8:	f100 0b14 	add.w	fp, r0, #20
 80044bc:	f8d9 7010 	ldr.w	r7, [r9, #16]
 80044c0:	f109 0310 	add.w	r3, r9, #16
 80044c4:	60c5      	str	r5, [r0, #12]
 80044c6:	f04f 0c00 	mov.w	ip, #0
 80044ca:	f109 0514 	add.w	r5, r9, #20
 80044ce:	46d9      	mov	r9, fp
 80044d0:	6926      	ldr	r6, [r4, #16]
 80044d2:	f104 0e14 	add.w	lr, r4, #20
 80044d6:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 80044da:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 80044de:	9301      	str	r3, [sp, #4]
 80044e0:	9b01      	ldr	r3, [sp, #4]
 80044e2:	f85e 0b04 	ldr.w	r0, [lr], #4
 80044e6:	f853 af04 	ldr.w	sl, [r3, #4]!
 80044ea:	b281      	uxth	r1, r0
 80044ec:	9301      	str	r3, [sp, #4]
 80044ee:	fa1f f38a 	uxth.w	r3, sl
 80044f2:	1a5b      	subs	r3, r3, r1
 80044f4:	0c00      	lsrs	r0, r0, #16
 80044f6:	4463      	add	r3, ip
 80044f8:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 80044fc:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8004500:	b29b      	uxth	r3, r3
 8004502:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8004506:	4576      	cmp	r6, lr
 8004508:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800450c:	f849 3b04 	str.w	r3, [r9], #4
 8004510:	d8e6      	bhi.n	80044e0 <__mdiff+0x88>
 8004512:	1b33      	subs	r3, r6, r4
 8004514:	3b15      	subs	r3, #21
 8004516:	f023 0303 	bic.w	r3, r3, #3
 800451a:	3415      	adds	r4, #21
 800451c:	3304      	adds	r3, #4
 800451e:	42a6      	cmp	r6, r4
 8004520:	bf38      	it	cc
 8004522:	2304      	movcc	r3, #4
 8004524:	441d      	add	r5, r3
 8004526:	445b      	add	r3, fp
 8004528:	461e      	mov	r6, r3
 800452a:	462c      	mov	r4, r5
 800452c:	4544      	cmp	r4, r8
 800452e:	d30e      	bcc.n	800454e <__mdiff+0xf6>
 8004530:	f108 0103 	add.w	r1, r8, #3
 8004534:	1b49      	subs	r1, r1, r5
 8004536:	f021 0103 	bic.w	r1, r1, #3
 800453a:	3d03      	subs	r5, #3
 800453c:	45a8      	cmp	r8, r5
 800453e:	bf38      	it	cc
 8004540:	2100      	movcc	r1, #0
 8004542:	440b      	add	r3, r1
 8004544:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8004548:	b199      	cbz	r1, 8004572 <__mdiff+0x11a>
 800454a:	6117      	str	r7, [r2, #16]
 800454c:	e79e      	b.n	800448c <__mdiff+0x34>
 800454e:	46e6      	mov	lr, ip
 8004550:	f854 1b04 	ldr.w	r1, [r4], #4
 8004554:	fa1f fc81 	uxth.w	ip, r1
 8004558:	44f4      	add	ip, lr
 800455a:	0c08      	lsrs	r0, r1, #16
 800455c:	4471      	add	r1, lr
 800455e:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8004562:	b289      	uxth	r1, r1
 8004564:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8004568:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800456c:	f846 1b04 	str.w	r1, [r6], #4
 8004570:	e7dc      	b.n	800452c <__mdiff+0xd4>
 8004572:	3f01      	subs	r7, #1
 8004574:	e7e6      	b.n	8004544 <__mdiff+0xec>
 8004576:	bf00      	nop
 8004578:	0800673f 	.word	0x0800673f
 800457c:	08006750 	.word	0x08006750

08004580 <__ulp>:
 8004580:	4b0e      	ldr	r3, [pc, #56]	@ (80045bc <__ulp+0x3c>)
 8004582:	400b      	ands	r3, r1
 8004584:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 8004588:	2b00      	cmp	r3, #0
 800458a:	dc08      	bgt.n	800459e <__ulp+0x1e>
 800458c:	425b      	negs	r3, r3
 800458e:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 8004592:	ea4f 5223 	mov.w	r2, r3, asr #20
 8004596:	da04      	bge.n	80045a2 <__ulp+0x22>
 8004598:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 800459c:	4113      	asrs	r3, r2
 800459e:	2200      	movs	r2, #0
 80045a0:	e008      	b.n	80045b4 <__ulp+0x34>
 80045a2:	f1a2 0314 	sub.w	r3, r2, #20
 80045a6:	2b1e      	cmp	r3, #30
 80045a8:	bfd6      	itet	le
 80045aa:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 80045ae:	2201      	movgt	r2, #1
 80045b0:	40da      	lsrle	r2, r3
 80045b2:	2300      	movs	r3, #0
 80045b4:	4619      	mov	r1, r3
 80045b6:	4610      	mov	r0, r2
 80045b8:	4770      	bx	lr
 80045ba:	bf00      	nop
 80045bc:	7ff00000 	.word	0x7ff00000

080045c0 <__b2d>:
 80045c0:	6902      	ldr	r2, [r0, #16]
 80045c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80045c4:	f100 0614 	add.w	r6, r0, #20
 80045c8:	eb06 0282 	add.w	r2, r6, r2, lsl #2
 80045cc:	f852 4c04 	ldr.w	r4, [r2, #-4]
 80045d0:	4f1e      	ldr	r7, [pc, #120]	@ (800464c <__b2d+0x8c>)
 80045d2:	4620      	mov	r0, r4
 80045d4:	f7ff fd5a 	bl	800408c <__hi0bits>
 80045d8:	4603      	mov	r3, r0
 80045da:	f1c0 0020 	rsb	r0, r0, #32
 80045de:	2b0a      	cmp	r3, #10
 80045e0:	f1a2 0504 	sub.w	r5, r2, #4
 80045e4:	6008      	str	r0, [r1, #0]
 80045e6:	dc12      	bgt.n	800460e <__b2d+0x4e>
 80045e8:	42ae      	cmp	r6, r5
 80045ea:	bf2c      	ite	cs
 80045ec:	2200      	movcs	r2, #0
 80045ee:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 80045f2:	f1c3 0c0b 	rsb	ip, r3, #11
 80045f6:	3315      	adds	r3, #21
 80045f8:	fa24 fe0c 	lsr.w	lr, r4, ip
 80045fc:	fa04 f303 	lsl.w	r3, r4, r3
 8004600:	fa22 f20c 	lsr.w	r2, r2, ip
 8004604:	ea4e 0107 	orr.w	r1, lr, r7
 8004608:	431a      	orrs	r2, r3
 800460a:	4610      	mov	r0, r2
 800460c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800460e:	42ae      	cmp	r6, r5
 8004610:	bf36      	itet	cc
 8004612:	f1a2 0508 	subcc.w	r5, r2, #8
 8004616:	2200      	movcs	r2, #0
 8004618:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 800461c:	3b0b      	subs	r3, #11
 800461e:	d012      	beq.n	8004646 <__b2d+0x86>
 8004620:	f1c3 0720 	rsb	r7, r3, #32
 8004624:	fa22 f107 	lsr.w	r1, r2, r7
 8004628:	409c      	lsls	r4, r3
 800462a:	430c      	orrs	r4, r1
 800462c:	42b5      	cmp	r5, r6
 800462e:	f044 517f 	orr.w	r1, r4, #1069547520	@ 0x3fc00000
 8004632:	bf94      	ite	ls
 8004634:	2400      	movls	r4, #0
 8004636:	f855 4c04 	ldrhi.w	r4, [r5, #-4]
 800463a:	409a      	lsls	r2, r3
 800463c:	40fc      	lsrs	r4, r7
 800463e:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
 8004642:	4322      	orrs	r2, r4
 8004644:	e7e1      	b.n	800460a <__b2d+0x4a>
 8004646:	ea44 0107 	orr.w	r1, r4, r7
 800464a:	e7de      	b.n	800460a <__b2d+0x4a>
 800464c:	3ff00000 	.word	0x3ff00000

08004650 <__d2b>:
 8004650:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 8004654:	2101      	movs	r1, #1
 8004656:	4690      	mov	r8, r2
 8004658:	4699      	mov	r9, r3
 800465a:	9e08      	ldr	r6, [sp, #32]
 800465c:	f7ff fc24 	bl	8003ea8 <_Balloc>
 8004660:	4604      	mov	r4, r0
 8004662:	b930      	cbnz	r0, 8004672 <__d2b+0x22>
 8004664:	4602      	mov	r2, r0
 8004666:	f240 310f 	movw	r1, #783	@ 0x30f
 800466a:	4b23      	ldr	r3, [pc, #140]	@ (80046f8 <__d2b+0xa8>)
 800466c:	4823      	ldr	r0, [pc, #140]	@ (80046fc <__d2b+0xac>)
 800466e:	f001 f979 	bl	8005964 <__assert_func>
 8004672:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8004676:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800467a:	b10d      	cbz	r5, 8004680 <__d2b+0x30>
 800467c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8004680:	9301      	str	r3, [sp, #4]
 8004682:	f1b8 0300 	subs.w	r3, r8, #0
 8004686:	d024      	beq.n	80046d2 <__d2b+0x82>
 8004688:	4668      	mov	r0, sp
 800468a:	9300      	str	r3, [sp, #0]
 800468c:	f7ff fd1d 	bl	80040ca <__lo0bits>
 8004690:	e9dd 1200 	ldrd	r1, r2, [sp]
 8004694:	b1d8      	cbz	r0, 80046ce <__d2b+0x7e>
 8004696:	f1c0 0320 	rsb	r3, r0, #32
 800469a:	fa02 f303 	lsl.w	r3, r2, r3
 800469e:	430b      	orrs	r3, r1
 80046a0:	40c2      	lsrs	r2, r0
 80046a2:	6163      	str	r3, [r4, #20]
 80046a4:	9201      	str	r2, [sp, #4]
 80046a6:	9b01      	ldr	r3, [sp, #4]
 80046a8:	2b00      	cmp	r3, #0
 80046aa:	bf0c      	ite	eq
 80046ac:	2201      	moveq	r2, #1
 80046ae:	2202      	movne	r2, #2
 80046b0:	61a3      	str	r3, [r4, #24]
 80046b2:	6122      	str	r2, [r4, #16]
 80046b4:	b1ad      	cbz	r5, 80046e2 <__d2b+0x92>
 80046b6:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 80046ba:	4405      	add	r5, r0
 80046bc:	6035      	str	r5, [r6, #0]
 80046be:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 80046c2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80046c4:	6018      	str	r0, [r3, #0]
 80046c6:	4620      	mov	r0, r4
 80046c8:	b002      	add	sp, #8
 80046ca:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 80046ce:	6161      	str	r1, [r4, #20]
 80046d0:	e7e9      	b.n	80046a6 <__d2b+0x56>
 80046d2:	a801      	add	r0, sp, #4
 80046d4:	f7ff fcf9 	bl	80040ca <__lo0bits>
 80046d8:	9b01      	ldr	r3, [sp, #4]
 80046da:	2201      	movs	r2, #1
 80046dc:	6163      	str	r3, [r4, #20]
 80046de:	3020      	adds	r0, #32
 80046e0:	e7e7      	b.n	80046b2 <__d2b+0x62>
 80046e2:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 80046e6:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80046ea:	6030      	str	r0, [r6, #0]
 80046ec:	6918      	ldr	r0, [r3, #16]
 80046ee:	f7ff fccd 	bl	800408c <__hi0bits>
 80046f2:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80046f6:	e7e4      	b.n	80046c2 <__d2b+0x72>
 80046f8:	0800673f 	.word	0x0800673f
 80046fc:	08006750 	.word	0x08006750

08004700 <__ratio>:
 8004700:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004704:	b085      	sub	sp, #20
 8004706:	e9cd 1000 	strd	r1, r0, [sp]
 800470a:	a902      	add	r1, sp, #8
 800470c:	f7ff ff58 	bl	80045c0 <__b2d>
 8004710:	468b      	mov	fp, r1
 8004712:	4606      	mov	r6, r0
 8004714:	460f      	mov	r7, r1
 8004716:	9800      	ldr	r0, [sp, #0]
 8004718:	a903      	add	r1, sp, #12
 800471a:	f7ff ff51 	bl	80045c0 <__b2d>
 800471e:	460d      	mov	r5, r1
 8004720:	9b01      	ldr	r3, [sp, #4]
 8004722:	4689      	mov	r9, r1
 8004724:	6919      	ldr	r1, [r3, #16]
 8004726:	9b00      	ldr	r3, [sp, #0]
 8004728:	4604      	mov	r4, r0
 800472a:	691b      	ldr	r3, [r3, #16]
 800472c:	4630      	mov	r0, r6
 800472e:	1ac9      	subs	r1, r1, r3
 8004730:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8004734:	1a9b      	subs	r3, r3, r2
 8004736:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800473a:	2b00      	cmp	r3, #0
 800473c:	bfcd      	iteet	gt
 800473e:	463a      	movgt	r2, r7
 8004740:	462a      	movle	r2, r5
 8004742:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8004746:	eb02 5b03 	addgt.w	fp, r2, r3, lsl #20
 800474a:	bfd8      	it	le
 800474c:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 8004750:	464b      	mov	r3, r9
 8004752:	4622      	mov	r2, r4
 8004754:	4659      	mov	r1, fp
 8004756:	f7fb ffe9 	bl	800072c <__aeabi_ddiv>
 800475a:	b005      	add	sp, #20
 800475c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004760 <__copybits>:
 8004760:	3901      	subs	r1, #1
 8004762:	b570      	push	{r4, r5, r6, lr}
 8004764:	1149      	asrs	r1, r1, #5
 8004766:	6914      	ldr	r4, [r2, #16]
 8004768:	3101      	adds	r1, #1
 800476a:	f102 0314 	add.w	r3, r2, #20
 800476e:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8004772:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8004776:	1f05      	subs	r5, r0, #4
 8004778:	42a3      	cmp	r3, r4
 800477a:	d30c      	bcc.n	8004796 <__copybits+0x36>
 800477c:	1aa3      	subs	r3, r4, r2
 800477e:	3b11      	subs	r3, #17
 8004780:	f023 0303 	bic.w	r3, r3, #3
 8004784:	3211      	adds	r2, #17
 8004786:	42a2      	cmp	r2, r4
 8004788:	bf88      	it	hi
 800478a:	2300      	movhi	r3, #0
 800478c:	4418      	add	r0, r3
 800478e:	2300      	movs	r3, #0
 8004790:	4288      	cmp	r0, r1
 8004792:	d305      	bcc.n	80047a0 <__copybits+0x40>
 8004794:	bd70      	pop	{r4, r5, r6, pc}
 8004796:	f853 6b04 	ldr.w	r6, [r3], #4
 800479a:	f845 6f04 	str.w	r6, [r5, #4]!
 800479e:	e7eb      	b.n	8004778 <__copybits+0x18>
 80047a0:	f840 3b04 	str.w	r3, [r0], #4
 80047a4:	e7f4      	b.n	8004790 <__copybits+0x30>

080047a6 <__any_on>:
 80047a6:	f100 0214 	add.w	r2, r0, #20
 80047aa:	6900      	ldr	r0, [r0, #16]
 80047ac:	114b      	asrs	r3, r1, #5
 80047ae:	4298      	cmp	r0, r3
 80047b0:	b510      	push	{r4, lr}
 80047b2:	db11      	blt.n	80047d8 <__any_on+0x32>
 80047b4:	dd0a      	ble.n	80047cc <__any_on+0x26>
 80047b6:	f011 011f 	ands.w	r1, r1, #31
 80047ba:	d007      	beq.n	80047cc <__any_on+0x26>
 80047bc:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 80047c0:	fa24 f001 	lsr.w	r0, r4, r1
 80047c4:	fa00 f101 	lsl.w	r1, r0, r1
 80047c8:	428c      	cmp	r4, r1
 80047ca:	d10b      	bne.n	80047e4 <__any_on+0x3e>
 80047cc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80047d0:	4293      	cmp	r3, r2
 80047d2:	d803      	bhi.n	80047dc <__any_on+0x36>
 80047d4:	2000      	movs	r0, #0
 80047d6:	bd10      	pop	{r4, pc}
 80047d8:	4603      	mov	r3, r0
 80047da:	e7f7      	b.n	80047cc <__any_on+0x26>
 80047dc:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80047e0:	2900      	cmp	r1, #0
 80047e2:	d0f5      	beq.n	80047d0 <__any_on+0x2a>
 80047e4:	2001      	movs	r0, #1
 80047e6:	e7f6      	b.n	80047d6 <__any_on+0x30>

080047e8 <sulp>:
 80047e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80047ec:	460f      	mov	r7, r1
 80047ee:	4690      	mov	r8, r2
 80047f0:	f7ff fec6 	bl	8004580 <__ulp>
 80047f4:	4604      	mov	r4, r0
 80047f6:	460d      	mov	r5, r1
 80047f8:	f1b8 0f00 	cmp.w	r8, #0
 80047fc:	d011      	beq.n	8004822 <sulp+0x3a>
 80047fe:	f3c7 530a 	ubfx	r3, r7, #20, #11
 8004802:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8004806:	2b00      	cmp	r3, #0
 8004808:	dd0b      	ble.n	8004822 <sulp+0x3a>
 800480a:	2400      	movs	r4, #0
 800480c:	051b      	lsls	r3, r3, #20
 800480e:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 8004812:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 8004816:	4622      	mov	r2, r4
 8004818:	462b      	mov	r3, r5
 800481a:	f7fb fe5d 	bl	80004d8 <__aeabi_dmul>
 800481e:	4604      	mov	r4, r0
 8004820:	460d      	mov	r5, r1
 8004822:	4620      	mov	r0, r4
 8004824:	4629      	mov	r1, r5
 8004826:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800482a:	0000      	movs	r0, r0
 800482c:	0000      	movs	r0, r0
	...

08004830 <_strtod_l>:
 8004830:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004834:	b09f      	sub	sp, #124	@ 0x7c
 8004836:	9217      	str	r2, [sp, #92]	@ 0x5c
 8004838:	2200      	movs	r2, #0
 800483a:	460c      	mov	r4, r1
 800483c:	921a      	str	r2, [sp, #104]	@ 0x68
 800483e:	f04f 0a00 	mov.w	sl, #0
 8004842:	f04f 0b00 	mov.w	fp, #0
 8004846:	460a      	mov	r2, r1
 8004848:	9005      	str	r0, [sp, #20]
 800484a:	9219      	str	r2, [sp, #100]	@ 0x64
 800484c:	7811      	ldrb	r1, [r2, #0]
 800484e:	292b      	cmp	r1, #43	@ 0x2b
 8004850:	d048      	beq.n	80048e4 <_strtod_l+0xb4>
 8004852:	d836      	bhi.n	80048c2 <_strtod_l+0x92>
 8004854:	290d      	cmp	r1, #13
 8004856:	d830      	bhi.n	80048ba <_strtod_l+0x8a>
 8004858:	2908      	cmp	r1, #8
 800485a:	d830      	bhi.n	80048be <_strtod_l+0x8e>
 800485c:	2900      	cmp	r1, #0
 800485e:	d039      	beq.n	80048d4 <_strtod_l+0xa4>
 8004860:	2200      	movs	r2, #0
 8004862:	920e      	str	r2, [sp, #56]	@ 0x38
 8004864:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 8004866:	782a      	ldrb	r2, [r5, #0]
 8004868:	2a30      	cmp	r2, #48	@ 0x30
 800486a:	f040 80b0 	bne.w	80049ce <_strtod_l+0x19e>
 800486e:	786a      	ldrb	r2, [r5, #1]
 8004870:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8004874:	2a58      	cmp	r2, #88	@ 0x58
 8004876:	d16c      	bne.n	8004952 <_strtod_l+0x122>
 8004878:	9302      	str	r3, [sp, #8]
 800487a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800487c:	4a8f      	ldr	r2, [pc, #572]	@ (8004abc <_strtod_l+0x28c>)
 800487e:	9301      	str	r3, [sp, #4]
 8004880:	ab1a      	add	r3, sp, #104	@ 0x68
 8004882:	9300      	str	r3, [sp, #0]
 8004884:	9805      	ldr	r0, [sp, #20]
 8004886:	ab1b      	add	r3, sp, #108	@ 0x6c
 8004888:	a919      	add	r1, sp, #100	@ 0x64
 800488a:	f001 f905 	bl	8005a98 <__gethex>
 800488e:	f010 060f 	ands.w	r6, r0, #15
 8004892:	4604      	mov	r4, r0
 8004894:	d005      	beq.n	80048a2 <_strtod_l+0x72>
 8004896:	2e06      	cmp	r6, #6
 8004898:	d126      	bne.n	80048e8 <_strtod_l+0xb8>
 800489a:	2300      	movs	r3, #0
 800489c:	3501      	adds	r5, #1
 800489e:	9519      	str	r5, [sp, #100]	@ 0x64
 80048a0:	930e      	str	r3, [sp, #56]	@ 0x38
 80048a2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80048a4:	2b00      	cmp	r3, #0
 80048a6:	f040 8582 	bne.w	80053ae <_strtod_l+0xb7e>
 80048aa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80048ac:	b1bb      	cbz	r3, 80048de <_strtod_l+0xae>
 80048ae:	4650      	mov	r0, sl
 80048b0:	f10b 4100 	add.w	r1, fp, #2147483648	@ 0x80000000
 80048b4:	b01f      	add	sp, #124	@ 0x7c
 80048b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80048ba:	2920      	cmp	r1, #32
 80048bc:	d1d0      	bne.n	8004860 <_strtod_l+0x30>
 80048be:	3201      	adds	r2, #1
 80048c0:	e7c3      	b.n	800484a <_strtod_l+0x1a>
 80048c2:	292d      	cmp	r1, #45	@ 0x2d
 80048c4:	d1cc      	bne.n	8004860 <_strtod_l+0x30>
 80048c6:	2101      	movs	r1, #1
 80048c8:	910e      	str	r1, [sp, #56]	@ 0x38
 80048ca:	1c51      	adds	r1, r2, #1
 80048cc:	9119      	str	r1, [sp, #100]	@ 0x64
 80048ce:	7852      	ldrb	r2, [r2, #1]
 80048d0:	2a00      	cmp	r2, #0
 80048d2:	d1c7      	bne.n	8004864 <_strtod_l+0x34>
 80048d4:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80048d6:	9419      	str	r4, [sp, #100]	@ 0x64
 80048d8:	2b00      	cmp	r3, #0
 80048da:	f040 8566 	bne.w	80053aa <_strtod_l+0xb7a>
 80048de:	4650      	mov	r0, sl
 80048e0:	4659      	mov	r1, fp
 80048e2:	e7e7      	b.n	80048b4 <_strtod_l+0x84>
 80048e4:	2100      	movs	r1, #0
 80048e6:	e7ef      	b.n	80048c8 <_strtod_l+0x98>
 80048e8:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 80048ea:	b13a      	cbz	r2, 80048fc <_strtod_l+0xcc>
 80048ec:	2135      	movs	r1, #53	@ 0x35
 80048ee:	a81c      	add	r0, sp, #112	@ 0x70
 80048f0:	f7ff ff36 	bl	8004760 <__copybits>
 80048f4:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80048f6:	9805      	ldr	r0, [sp, #20]
 80048f8:	f7ff fb16 	bl	8003f28 <_Bfree>
 80048fc:	3e01      	subs	r6, #1
 80048fe:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8004900:	2e04      	cmp	r6, #4
 8004902:	d806      	bhi.n	8004912 <_strtod_l+0xe2>
 8004904:	e8df f006 	tbb	[pc, r6]
 8004908:	201d0314 	.word	0x201d0314
 800490c:	14          	.byte	0x14
 800490d:	00          	.byte	0x00
 800490e:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 8004912:	05e1      	lsls	r1, r4, #23
 8004914:	bf48      	it	mi
 8004916:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 800491a:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800491e:	0d1b      	lsrs	r3, r3, #20
 8004920:	051b      	lsls	r3, r3, #20
 8004922:	2b00      	cmp	r3, #0
 8004924:	d1bd      	bne.n	80048a2 <_strtod_l+0x72>
 8004926:	f7fe fbdb 	bl	80030e0 <__errno>
 800492a:	2322      	movs	r3, #34	@ 0x22
 800492c:	6003      	str	r3, [r0, #0]
 800492e:	e7b8      	b.n	80048a2 <_strtod_l+0x72>
 8004930:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 8004934:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 8004938:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 800493c:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8004940:	e7e7      	b.n	8004912 <_strtod_l+0xe2>
 8004942:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 8004ac0 <_strtod_l+0x290>
 8004946:	e7e4      	b.n	8004912 <_strtod_l+0xe2>
 8004948:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 800494c:	f04f 3aff 	mov.w	sl, #4294967295	@ 0xffffffff
 8004950:	e7df      	b.n	8004912 <_strtod_l+0xe2>
 8004952:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004954:	1c5a      	adds	r2, r3, #1
 8004956:	9219      	str	r2, [sp, #100]	@ 0x64
 8004958:	785b      	ldrb	r3, [r3, #1]
 800495a:	2b30      	cmp	r3, #48	@ 0x30
 800495c:	d0f9      	beq.n	8004952 <_strtod_l+0x122>
 800495e:	2b00      	cmp	r3, #0
 8004960:	d09f      	beq.n	80048a2 <_strtod_l+0x72>
 8004962:	2301      	movs	r3, #1
 8004964:	2700      	movs	r7, #0
 8004966:	220a      	movs	r2, #10
 8004968:	46b9      	mov	r9, r7
 800496a:	9308      	str	r3, [sp, #32]
 800496c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800496e:	970b      	str	r7, [sp, #44]	@ 0x2c
 8004970:	930c      	str	r3, [sp, #48]	@ 0x30
 8004972:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8004974:	7805      	ldrb	r5, [r0, #0]
 8004976:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 800497a:	b2d9      	uxtb	r1, r3
 800497c:	2909      	cmp	r1, #9
 800497e:	d928      	bls.n	80049d2 <_strtod_l+0x1a2>
 8004980:	2201      	movs	r2, #1
 8004982:	4950      	ldr	r1, [pc, #320]	@ (8004ac4 <_strtod_l+0x294>)
 8004984:	f000 ffc8 	bl	8005918 <strncmp>
 8004988:	2800      	cmp	r0, #0
 800498a:	d032      	beq.n	80049f2 <_strtod_l+0x1c2>
 800498c:	2000      	movs	r0, #0
 800498e:	462a      	mov	r2, r5
 8004990:	4603      	mov	r3, r0
 8004992:	464d      	mov	r5, r9
 8004994:	900a      	str	r0, [sp, #40]	@ 0x28
 8004996:	2a65      	cmp	r2, #101	@ 0x65
 8004998:	d001      	beq.n	800499e <_strtod_l+0x16e>
 800499a:	2a45      	cmp	r2, #69	@ 0x45
 800499c:	d114      	bne.n	80049c8 <_strtod_l+0x198>
 800499e:	b91d      	cbnz	r5, 80049a8 <_strtod_l+0x178>
 80049a0:	9a08      	ldr	r2, [sp, #32]
 80049a2:	4302      	orrs	r2, r0
 80049a4:	d096      	beq.n	80048d4 <_strtod_l+0xa4>
 80049a6:	2500      	movs	r5, #0
 80049a8:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 80049aa:	1c62      	adds	r2, r4, #1
 80049ac:	9219      	str	r2, [sp, #100]	@ 0x64
 80049ae:	7862      	ldrb	r2, [r4, #1]
 80049b0:	2a2b      	cmp	r2, #43	@ 0x2b
 80049b2:	d07a      	beq.n	8004aaa <_strtod_l+0x27a>
 80049b4:	2a2d      	cmp	r2, #45	@ 0x2d
 80049b6:	d07e      	beq.n	8004ab6 <_strtod_l+0x286>
 80049b8:	f04f 0c00 	mov.w	ip, #0
 80049bc:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 80049c0:	2909      	cmp	r1, #9
 80049c2:	f240 8085 	bls.w	8004ad0 <_strtod_l+0x2a0>
 80049c6:	9419      	str	r4, [sp, #100]	@ 0x64
 80049c8:	f04f 0800 	mov.w	r8, #0
 80049cc:	e0a5      	b.n	8004b1a <_strtod_l+0x2ea>
 80049ce:	2300      	movs	r3, #0
 80049d0:	e7c8      	b.n	8004964 <_strtod_l+0x134>
 80049d2:	f1b9 0f08 	cmp.w	r9, #8
 80049d6:	bfd8      	it	le
 80049d8:	990b      	ldrle	r1, [sp, #44]	@ 0x2c
 80049da:	f100 0001 	add.w	r0, r0, #1
 80049de:	bfd6      	itet	le
 80049e0:	fb02 3301 	mlale	r3, r2, r1, r3
 80049e4:	fb02 3707 	mlagt	r7, r2, r7, r3
 80049e8:	930b      	strle	r3, [sp, #44]	@ 0x2c
 80049ea:	f109 0901 	add.w	r9, r9, #1
 80049ee:	9019      	str	r0, [sp, #100]	@ 0x64
 80049f0:	e7bf      	b.n	8004972 <_strtod_l+0x142>
 80049f2:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80049f4:	1c5a      	adds	r2, r3, #1
 80049f6:	9219      	str	r2, [sp, #100]	@ 0x64
 80049f8:	785a      	ldrb	r2, [r3, #1]
 80049fa:	f1b9 0f00 	cmp.w	r9, #0
 80049fe:	d03b      	beq.n	8004a78 <_strtod_l+0x248>
 8004a00:	464d      	mov	r5, r9
 8004a02:	900a      	str	r0, [sp, #40]	@ 0x28
 8004a04:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 8004a08:	2b09      	cmp	r3, #9
 8004a0a:	d912      	bls.n	8004a32 <_strtod_l+0x202>
 8004a0c:	2301      	movs	r3, #1
 8004a0e:	e7c2      	b.n	8004996 <_strtod_l+0x166>
 8004a10:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004a12:	3001      	adds	r0, #1
 8004a14:	1c5a      	adds	r2, r3, #1
 8004a16:	9219      	str	r2, [sp, #100]	@ 0x64
 8004a18:	785a      	ldrb	r2, [r3, #1]
 8004a1a:	2a30      	cmp	r2, #48	@ 0x30
 8004a1c:	d0f8      	beq.n	8004a10 <_strtod_l+0x1e0>
 8004a1e:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 8004a22:	2b08      	cmp	r3, #8
 8004a24:	f200 84c8 	bhi.w	80053b8 <_strtod_l+0xb88>
 8004a28:	900a      	str	r0, [sp, #40]	@ 0x28
 8004a2a:	2000      	movs	r0, #0
 8004a2c:	4605      	mov	r5, r0
 8004a2e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004a30:	930c      	str	r3, [sp, #48]	@ 0x30
 8004a32:	3a30      	subs	r2, #48	@ 0x30
 8004a34:	f100 0301 	add.w	r3, r0, #1
 8004a38:	d018      	beq.n	8004a6c <_strtod_l+0x23c>
 8004a3a:	462e      	mov	r6, r5
 8004a3c:	f04f 0e0a 	mov.w	lr, #10
 8004a40:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004a42:	4419      	add	r1, r3
 8004a44:	910a      	str	r1, [sp, #40]	@ 0x28
 8004a46:	1c71      	adds	r1, r6, #1
 8004a48:	eba1 0c05 	sub.w	ip, r1, r5
 8004a4c:	4563      	cmp	r3, ip
 8004a4e:	dc15      	bgt.n	8004a7c <_strtod_l+0x24c>
 8004a50:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 8004a54:	182b      	adds	r3, r5, r0
 8004a56:	2b08      	cmp	r3, #8
 8004a58:	f105 0501 	add.w	r5, r5, #1
 8004a5c:	4405      	add	r5, r0
 8004a5e:	dc1a      	bgt.n	8004a96 <_strtod_l+0x266>
 8004a60:	230a      	movs	r3, #10
 8004a62:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8004a64:	fb03 2301 	mla	r3, r3, r1, r2
 8004a68:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004a6a:	2300      	movs	r3, #0
 8004a6c:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8004a6e:	4618      	mov	r0, r3
 8004a70:	1c51      	adds	r1, r2, #1
 8004a72:	9119      	str	r1, [sp, #100]	@ 0x64
 8004a74:	7852      	ldrb	r2, [r2, #1]
 8004a76:	e7c5      	b.n	8004a04 <_strtod_l+0x1d4>
 8004a78:	4648      	mov	r0, r9
 8004a7a:	e7ce      	b.n	8004a1a <_strtod_l+0x1ea>
 8004a7c:	2e08      	cmp	r6, #8
 8004a7e:	dc05      	bgt.n	8004a8c <_strtod_l+0x25c>
 8004a80:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8004a82:	fb0e f606 	mul.w	r6, lr, r6
 8004a86:	960b      	str	r6, [sp, #44]	@ 0x2c
 8004a88:	460e      	mov	r6, r1
 8004a8a:	e7dc      	b.n	8004a46 <_strtod_l+0x216>
 8004a8c:	2910      	cmp	r1, #16
 8004a8e:	bfd8      	it	le
 8004a90:	fb0e f707 	mulle.w	r7, lr, r7
 8004a94:	e7f8      	b.n	8004a88 <_strtod_l+0x258>
 8004a96:	2b0f      	cmp	r3, #15
 8004a98:	bfdc      	itt	le
 8004a9a:	230a      	movle	r3, #10
 8004a9c:	fb03 2707 	mlale	r7, r3, r7, r2
 8004aa0:	e7e3      	b.n	8004a6a <_strtod_l+0x23a>
 8004aa2:	2300      	movs	r3, #0
 8004aa4:	930a      	str	r3, [sp, #40]	@ 0x28
 8004aa6:	2301      	movs	r3, #1
 8004aa8:	e77a      	b.n	80049a0 <_strtod_l+0x170>
 8004aaa:	f04f 0c00 	mov.w	ip, #0
 8004aae:	1ca2      	adds	r2, r4, #2
 8004ab0:	9219      	str	r2, [sp, #100]	@ 0x64
 8004ab2:	78a2      	ldrb	r2, [r4, #2]
 8004ab4:	e782      	b.n	80049bc <_strtod_l+0x18c>
 8004ab6:	f04f 0c01 	mov.w	ip, #1
 8004aba:	e7f8      	b.n	8004aae <_strtod_l+0x27e>
 8004abc:	08006974 	.word	0x08006974
 8004ac0:	7ff00000 	.word	0x7ff00000
 8004ac4:	080067a9 	.word	0x080067a9
 8004ac8:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8004aca:	1c51      	adds	r1, r2, #1
 8004acc:	9119      	str	r1, [sp, #100]	@ 0x64
 8004ace:	7852      	ldrb	r2, [r2, #1]
 8004ad0:	2a30      	cmp	r2, #48	@ 0x30
 8004ad2:	d0f9      	beq.n	8004ac8 <_strtod_l+0x298>
 8004ad4:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 8004ad8:	2908      	cmp	r1, #8
 8004ada:	f63f af75 	bhi.w	80049c8 <_strtod_l+0x198>
 8004ade:	f04f 080a 	mov.w	r8, #10
 8004ae2:	3a30      	subs	r2, #48	@ 0x30
 8004ae4:	9209      	str	r2, [sp, #36]	@ 0x24
 8004ae6:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8004ae8:	920f      	str	r2, [sp, #60]	@ 0x3c
 8004aea:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8004aec:	1c56      	adds	r6, r2, #1
 8004aee:	9619      	str	r6, [sp, #100]	@ 0x64
 8004af0:	7852      	ldrb	r2, [r2, #1]
 8004af2:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 8004af6:	f1be 0f09 	cmp.w	lr, #9
 8004afa:	d939      	bls.n	8004b70 <_strtod_l+0x340>
 8004afc:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8004afe:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 8004b02:	1a76      	subs	r6, r6, r1
 8004b04:	2e08      	cmp	r6, #8
 8004b06:	dc03      	bgt.n	8004b10 <_strtod_l+0x2e0>
 8004b08:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8004b0a:	4588      	cmp	r8, r1
 8004b0c:	bfa8      	it	ge
 8004b0e:	4688      	movge	r8, r1
 8004b10:	f1bc 0f00 	cmp.w	ip, #0
 8004b14:	d001      	beq.n	8004b1a <_strtod_l+0x2ea>
 8004b16:	f1c8 0800 	rsb	r8, r8, #0
 8004b1a:	2d00      	cmp	r5, #0
 8004b1c:	d14e      	bne.n	8004bbc <_strtod_l+0x38c>
 8004b1e:	9908      	ldr	r1, [sp, #32]
 8004b20:	4308      	orrs	r0, r1
 8004b22:	f47f aebe 	bne.w	80048a2 <_strtod_l+0x72>
 8004b26:	2b00      	cmp	r3, #0
 8004b28:	f47f aed4 	bne.w	80048d4 <_strtod_l+0xa4>
 8004b2c:	2a69      	cmp	r2, #105	@ 0x69
 8004b2e:	d028      	beq.n	8004b82 <_strtod_l+0x352>
 8004b30:	dc25      	bgt.n	8004b7e <_strtod_l+0x34e>
 8004b32:	2a49      	cmp	r2, #73	@ 0x49
 8004b34:	d025      	beq.n	8004b82 <_strtod_l+0x352>
 8004b36:	2a4e      	cmp	r2, #78	@ 0x4e
 8004b38:	f47f aecc 	bne.w	80048d4 <_strtod_l+0xa4>
 8004b3c:	4999      	ldr	r1, [pc, #612]	@ (8004da4 <_strtod_l+0x574>)
 8004b3e:	a819      	add	r0, sp, #100	@ 0x64
 8004b40:	f001 f9cc 	bl	8005edc <__match>
 8004b44:	2800      	cmp	r0, #0
 8004b46:	f43f aec5 	beq.w	80048d4 <_strtod_l+0xa4>
 8004b4a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004b4c:	781b      	ldrb	r3, [r3, #0]
 8004b4e:	2b28      	cmp	r3, #40	@ 0x28
 8004b50:	d12e      	bne.n	8004bb0 <_strtod_l+0x380>
 8004b52:	4995      	ldr	r1, [pc, #596]	@ (8004da8 <_strtod_l+0x578>)
 8004b54:	aa1c      	add	r2, sp, #112	@ 0x70
 8004b56:	a819      	add	r0, sp, #100	@ 0x64
 8004b58:	f001 f9d4 	bl	8005f04 <__hexnan>
 8004b5c:	2805      	cmp	r0, #5
 8004b5e:	d127      	bne.n	8004bb0 <_strtod_l+0x380>
 8004b60:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8004b62:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 8004b66:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 8004b6a:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 8004b6e:	e698      	b.n	80048a2 <_strtod_l+0x72>
 8004b70:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8004b72:	fb08 2101 	mla	r1, r8, r1, r2
 8004b76:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 8004b7a:	9209      	str	r2, [sp, #36]	@ 0x24
 8004b7c:	e7b5      	b.n	8004aea <_strtod_l+0x2ba>
 8004b7e:	2a6e      	cmp	r2, #110	@ 0x6e
 8004b80:	e7da      	b.n	8004b38 <_strtod_l+0x308>
 8004b82:	498a      	ldr	r1, [pc, #552]	@ (8004dac <_strtod_l+0x57c>)
 8004b84:	a819      	add	r0, sp, #100	@ 0x64
 8004b86:	f001 f9a9 	bl	8005edc <__match>
 8004b8a:	2800      	cmp	r0, #0
 8004b8c:	f43f aea2 	beq.w	80048d4 <_strtod_l+0xa4>
 8004b90:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004b92:	4987      	ldr	r1, [pc, #540]	@ (8004db0 <_strtod_l+0x580>)
 8004b94:	3b01      	subs	r3, #1
 8004b96:	a819      	add	r0, sp, #100	@ 0x64
 8004b98:	9319      	str	r3, [sp, #100]	@ 0x64
 8004b9a:	f001 f99f 	bl	8005edc <__match>
 8004b9e:	b910      	cbnz	r0, 8004ba6 <_strtod_l+0x376>
 8004ba0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004ba2:	3301      	adds	r3, #1
 8004ba4:	9319      	str	r3, [sp, #100]	@ 0x64
 8004ba6:	f04f 0a00 	mov.w	sl, #0
 8004baa:	f8df b208 	ldr.w	fp, [pc, #520]	@ 8004db4 <_strtod_l+0x584>
 8004bae:	e678      	b.n	80048a2 <_strtod_l+0x72>
 8004bb0:	4881      	ldr	r0, [pc, #516]	@ (8004db8 <_strtod_l+0x588>)
 8004bb2:	f000 fed1 	bl	8005958 <nan>
 8004bb6:	4682      	mov	sl, r0
 8004bb8:	468b      	mov	fp, r1
 8004bba:	e672      	b.n	80048a2 <_strtod_l+0x72>
 8004bbc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004bbe:	f1b9 0f00 	cmp.w	r9, #0
 8004bc2:	bf08      	it	eq
 8004bc4:	46a9      	moveq	r9, r5
 8004bc6:	eba8 0303 	sub.w	r3, r8, r3
 8004bca:	2d10      	cmp	r5, #16
 8004bcc:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8004bce:	462c      	mov	r4, r5
 8004bd0:	9309      	str	r3, [sp, #36]	@ 0x24
 8004bd2:	bfa8      	it	ge
 8004bd4:	2410      	movge	r4, #16
 8004bd6:	f7fb fc05 	bl	80003e4 <__aeabi_ui2d>
 8004bda:	2d09      	cmp	r5, #9
 8004bdc:	4682      	mov	sl, r0
 8004bde:	468b      	mov	fp, r1
 8004be0:	dc11      	bgt.n	8004c06 <_strtod_l+0x3d6>
 8004be2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004be4:	2b00      	cmp	r3, #0
 8004be6:	f43f ae5c 	beq.w	80048a2 <_strtod_l+0x72>
 8004bea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004bec:	dd76      	ble.n	8004cdc <_strtod_l+0x4ac>
 8004bee:	2b16      	cmp	r3, #22
 8004bf0:	dc5d      	bgt.n	8004cae <_strtod_l+0x47e>
 8004bf2:	4972      	ldr	r1, [pc, #456]	@ (8004dbc <_strtod_l+0x58c>)
 8004bf4:	4652      	mov	r2, sl
 8004bf6:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004bfa:	465b      	mov	r3, fp
 8004bfc:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004c00:	f7fb fc6a 	bl	80004d8 <__aeabi_dmul>
 8004c04:	e7d7      	b.n	8004bb6 <_strtod_l+0x386>
 8004c06:	4b6d      	ldr	r3, [pc, #436]	@ (8004dbc <_strtod_l+0x58c>)
 8004c08:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8004c0c:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 8004c10:	f7fb fc62 	bl	80004d8 <__aeabi_dmul>
 8004c14:	4682      	mov	sl, r0
 8004c16:	4638      	mov	r0, r7
 8004c18:	468b      	mov	fp, r1
 8004c1a:	f7fb fbe3 	bl	80003e4 <__aeabi_ui2d>
 8004c1e:	4602      	mov	r2, r0
 8004c20:	460b      	mov	r3, r1
 8004c22:	4650      	mov	r0, sl
 8004c24:	4659      	mov	r1, fp
 8004c26:	f7fb faa1 	bl	800016c <__adddf3>
 8004c2a:	2d0f      	cmp	r5, #15
 8004c2c:	4682      	mov	sl, r0
 8004c2e:	468b      	mov	fp, r1
 8004c30:	ddd7      	ble.n	8004be2 <_strtod_l+0x3b2>
 8004c32:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004c34:	1b2c      	subs	r4, r5, r4
 8004c36:	441c      	add	r4, r3
 8004c38:	2c00      	cmp	r4, #0
 8004c3a:	f340 8093 	ble.w	8004d64 <_strtod_l+0x534>
 8004c3e:	f014 030f 	ands.w	r3, r4, #15
 8004c42:	d00a      	beq.n	8004c5a <_strtod_l+0x42a>
 8004c44:	495d      	ldr	r1, [pc, #372]	@ (8004dbc <_strtod_l+0x58c>)
 8004c46:	4652      	mov	r2, sl
 8004c48:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004c4c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004c50:	465b      	mov	r3, fp
 8004c52:	f7fb fc41 	bl	80004d8 <__aeabi_dmul>
 8004c56:	4682      	mov	sl, r0
 8004c58:	468b      	mov	fp, r1
 8004c5a:	f034 040f 	bics.w	r4, r4, #15
 8004c5e:	d073      	beq.n	8004d48 <_strtod_l+0x518>
 8004c60:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 8004c64:	dd49      	ble.n	8004cfa <_strtod_l+0x4ca>
 8004c66:	2400      	movs	r4, #0
 8004c68:	46a0      	mov	r8, r4
 8004c6a:	46a1      	mov	r9, r4
 8004c6c:	940b      	str	r4, [sp, #44]	@ 0x2c
 8004c6e:	2322      	movs	r3, #34	@ 0x22
 8004c70:	f04f 0a00 	mov.w	sl, #0
 8004c74:	9a05      	ldr	r2, [sp, #20]
 8004c76:	f8df b13c 	ldr.w	fp, [pc, #316]	@ 8004db4 <_strtod_l+0x584>
 8004c7a:	6013      	str	r3, [r2, #0]
 8004c7c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004c7e:	2b00      	cmp	r3, #0
 8004c80:	f43f ae0f 	beq.w	80048a2 <_strtod_l+0x72>
 8004c84:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004c86:	9805      	ldr	r0, [sp, #20]
 8004c88:	f7ff f94e 	bl	8003f28 <_Bfree>
 8004c8c:	4649      	mov	r1, r9
 8004c8e:	9805      	ldr	r0, [sp, #20]
 8004c90:	f7ff f94a 	bl	8003f28 <_Bfree>
 8004c94:	4641      	mov	r1, r8
 8004c96:	9805      	ldr	r0, [sp, #20]
 8004c98:	f7ff f946 	bl	8003f28 <_Bfree>
 8004c9c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8004c9e:	9805      	ldr	r0, [sp, #20]
 8004ca0:	f7ff f942 	bl	8003f28 <_Bfree>
 8004ca4:	4621      	mov	r1, r4
 8004ca6:	9805      	ldr	r0, [sp, #20]
 8004ca8:	f7ff f93e 	bl	8003f28 <_Bfree>
 8004cac:	e5f9      	b.n	80048a2 <_strtod_l+0x72>
 8004cae:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004cb0:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 8004cb4:	4293      	cmp	r3, r2
 8004cb6:	dbbc      	blt.n	8004c32 <_strtod_l+0x402>
 8004cb8:	4c40      	ldr	r4, [pc, #256]	@ (8004dbc <_strtod_l+0x58c>)
 8004cba:	f1c5 050f 	rsb	r5, r5, #15
 8004cbe:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8004cc2:	4652      	mov	r2, sl
 8004cc4:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004cc8:	465b      	mov	r3, fp
 8004cca:	f7fb fc05 	bl	80004d8 <__aeabi_dmul>
 8004cce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004cd0:	1b5d      	subs	r5, r3, r5
 8004cd2:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 8004cd6:	e9d4 2300 	ldrd	r2, r3, [r4]
 8004cda:	e791      	b.n	8004c00 <_strtod_l+0x3d0>
 8004cdc:	3316      	adds	r3, #22
 8004cde:	dba8      	blt.n	8004c32 <_strtod_l+0x402>
 8004ce0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004ce2:	4650      	mov	r0, sl
 8004ce4:	eba3 0808 	sub.w	r8, r3, r8
 8004ce8:	4b34      	ldr	r3, [pc, #208]	@ (8004dbc <_strtod_l+0x58c>)
 8004cea:	4659      	mov	r1, fp
 8004cec:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 8004cf0:	e9d8 2300 	ldrd	r2, r3, [r8]
 8004cf4:	f7fb fd1a 	bl	800072c <__aeabi_ddiv>
 8004cf8:	e75d      	b.n	8004bb6 <_strtod_l+0x386>
 8004cfa:	2300      	movs	r3, #0
 8004cfc:	4650      	mov	r0, sl
 8004cfe:	4659      	mov	r1, fp
 8004d00:	461e      	mov	r6, r3
 8004d02:	4f2f      	ldr	r7, [pc, #188]	@ (8004dc0 <_strtod_l+0x590>)
 8004d04:	1124      	asrs	r4, r4, #4
 8004d06:	2c01      	cmp	r4, #1
 8004d08:	dc21      	bgt.n	8004d4e <_strtod_l+0x51e>
 8004d0a:	b10b      	cbz	r3, 8004d10 <_strtod_l+0x4e0>
 8004d0c:	4682      	mov	sl, r0
 8004d0e:	468b      	mov	fp, r1
 8004d10:	492b      	ldr	r1, [pc, #172]	@ (8004dc0 <_strtod_l+0x590>)
 8004d12:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 8004d16:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 8004d1a:	4652      	mov	r2, sl
 8004d1c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004d20:	465b      	mov	r3, fp
 8004d22:	f7fb fbd9 	bl	80004d8 <__aeabi_dmul>
 8004d26:	4b23      	ldr	r3, [pc, #140]	@ (8004db4 <_strtod_l+0x584>)
 8004d28:	460a      	mov	r2, r1
 8004d2a:	400b      	ands	r3, r1
 8004d2c:	4925      	ldr	r1, [pc, #148]	@ (8004dc4 <_strtod_l+0x594>)
 8004d2e:	4682      	mov	sl, r0
 8004d30:	428b      	cmp	r3, r1
 8004d32:	d898      	bhi.n	8004c66 <_strtod_l+0x436>
 8004d34:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 8004d38:	428b      	cmp	r3, r1
 8004d3a:	bf86      	itte	hi
 8004d3c:	f04f 3aff 	movhi.w	sl, #4294967295	@ 0xffffffff
 8004d40:	f8df b084 	ldrhi.w	fp, [pc, #132]	@ 8004dc8 <_strtod_l+0x598>
 8004d44:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 8004d48:	2300      	movs	r3, #0
 8004d4a:	9308      	str	r3, [sp, #32]
 8004d4c:	e076      	b.n	8004e3c <_strtod_l+0x60c>
 8004d4e:	07e2      	lsls	r2, r4, #31
 8004d50:	d504      	bpl.n	8004d5c <_strtod_l+0x52c>
 8004d52:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004d56:	f7fb fbbf 	bl	80004d8 <__aeabi_dmul>
 8004d5a:	2301      	movs	r3, #1
 8004d5c:	3601      	adds	r6, #1
 8004d5e:	1064      	asrs	r4, r4, #1
 8004d60:	3708      	adds	r7, #8
 8004d62:	e7d0      	b.n	8004d06 <_strtod_l+0x4d6>
 8004d64:	d0f0      	beq.n	8004d48 <_strtod_l+0x518>
 8004d66:	4264      	negs	r4, r4
 8004d68:	f014 020f 	ands.w	r2, r4, #15
 8004d6c:	d00a      	beq.n	8004d84 <_strtod_l+0x554>
 8004d6e:	4b13      	ldr	r3, [pc, #76]	@ (8004dbc <_strtod_l+0x58c>)
 8004d70:	4650      	mov	r0, sl
 8004d72:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004d76:	4659      	mov	r1, fp
 8004d78:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004d7c:	f7fb fcd6 	bl	800072c <__aeabi_ddiv>
 8004d80:	4682      	mov	sl, r0
 8004d82:	468b      	mov	fp, r1
 8004d84:	1124      	asrs	r4, r4, #4
 8004d86:	d0df      	beq.n	8004d48 <_strtod_l+0x518>
 8004d88:	2c1f      	cmp	r4, #31
 8004d8a:	dd1f      	ble.n	8004dcc <_strtod_l+0x59c>
 8004d8c:	2400      	movs	r4, #0
 8004d8e:	46a0      	mov	r8, r4
 8004d90:	46a1      	mov	r9, r4
 8004d92:	940b      	str	r4, [sp, #44]	@ 0x2c
 8004d94:	2322      	movs	r3, #34	@ 0x22
 8004d96:	9a05      	ldr	r2, [sp, #20]
 8004d98:	f04f 0a00 	mov.w	sl, #0
 8004d9c:	f04f 0b00 	mov.w	fp, #0
 8004da0:	6013      	str	r3, [r2, #0]
 8004da2:	e76b      	b.n	8004c7c <_strtod_l+0x44c>
 8004da4:	08006697 	.word	0x08006697
 8004da8:	08006960 	.word	0x08006960
 8004dac:	0800668f 	.word	0x0800668f
 8004db0:	080066c6 	.word	0x080066c6
 8004db4:	7ff00000 	.word	0x7ff00000
 8004db8:	080067ff 	.word	0x080067ff
 8004dbc:	08006898 	.word	0x08006898
 8004dc0:	08006870 	.word	0x08006870
 8004dc4:	7ca00000 	.word	0x7ca00000
 8004dc8:	7fefffff 	.word	0x7fefffff
 8004dcc:	f014 0310 	ands.w	r3, r4, #16
 8004dd0:	bf18      	it	ne
 8004dd2:	236a      	movne	r3, #106	@ 0x6a
 8004dd4:	4650      	mov	r0, sl
 8004dd6:	9308      	str	r3, [sp, #32]
 8004dd8:	4659      	mov	r1, fp
 8004dda:	2300      	movs	r3, #0
 8004ddc:	4e77      	ldr	r6, [pc, #476]	@ (8004fbc <_strtod_l+0x78c>)
 8004dde:	07e7      	lsls	r7, r4, #31
 8004de0:	d504      	bpl.n	8004dec <_strtod_l+0x5bc>
 8004de2:	e9d6 2300 	ldrd	r2, r3, [r6]
 8004de6:	f7fb fb77 	bl	80004d8 <__aeabi_dmul>
 8004dea:	2301      	movs	r3, #1
 8004dec:	1064      	asrs	r4, r4, #1
 8004dee:	f106 0608 	add.w	r6, r6, #8
 8004df2:	d1f4      	bne.n	8004dde <_strtod_l+0x5ae>
 8004df4:	b10b      	cbz	r3, 8004dfa <_strtod_l+0x5ca>
 8004df6:	4682      	mov	sl, r0
 8004df8:	468b      	mov	fp, r1
 8004dfa:	9b08      	ldr	r3, [sp, #32]
 8004dfc:	b1b3      	cbz	r3, 8004e2c <_strtod_l+0x5fc>
 8004dfe:	f3cb 520a 	ubfx	r2, fp, #20, #11
 8004e02:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 8004e06:	2b00      	cmp	r3, #0
 8004e08:	4659      	mov	r1, fp
 8004e0a:	dd0f      	ble.n	8004e2c <_strtod_l+0x5fc>
 8004e0c:	2b1f      	cmp	r3, #31
 8004e0e:	dd58      	ble.n	8004ec2 <_strtod_l+0x692>
 8004e10:	2b34      	cmp	r3, #52	@ 0x34
 8004e12:	bfd8      	it	le
 8004e14:	f04f 33ff 	movle.w	r3, #4294967295	@ 0xffffffff
 8004e18:	f04f 0a00 	mov.w	sl, #0
 8004e1c:	bfcf      	iteee	gt
 8004e1e:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 8004e22:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 8004e26:	4093      	lslle	r3, r2
 8004e28:	ea03 0b01 	andle.w	fp, r3, r1
 8004e2c:	2200      	movs	r2, #0
 8004e2e:	2300      	movs	r3, #0
 8004e30:	4650      	mov	r0, sl
 8004e32:	4659      	mov	r1, fp
 8004e34:	f7fb fdb8 	bl	80009a8 <__aeabi_dcmpeq>
 8004e38:	2800      	cmp	r0, #0
 8004e3a:	d1a7      	bne.n	8004d8c <_strtod_l+0x55c>
 8004e3c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004e3e:	464a      	mov	r2, r9
 8004e40:	9300      	str	r3, [sp, #0]
 8004e42:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8004e44:	462b      	mov	r3, r5
 8004e46:	9805      	ldr	r0, [sp, #20]
 8004e48:	f7ff f8d6 	bl	8003ff8 <__s2b>
 8004e4c:	900b      	str	r0, [sp, #44]	@ 0x2c
 8004e4e:	2800      	cmp	r0, #0
 8004e50:	f43f af09 	beq.w	8004c66 <_strtod_l+0x436>
 8004e54:	2400      	movs	r4, #0
 8004e56:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004e58:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004e5a:	2a00      	cmp	r2, #0
 8004e5c:	eba3 0308 	sub.w	r3, r3, r8
 8004e60:	bfa8      	it	ge
 8004e62:	2300      	movge	r3, #0
 8004e64:	46a0      	mov	r8, r4
 8004e66:	9312      	str	r3, [sp, #72]	@ 0x48
 8004e68:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8004e6c:	9316      	str	r3, [sp, #88]	@ 0x58
 8004e6e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004e70:	9805      	ldr	r0, [sp, #20]
 8004e72:	6859      	ldr	r1, [r3, #4]
 8004e74:	f7ff f818 	bl	8003ea8 <_Balloc>
 8004e78:	4681      	mov	r9, r0
 8004e7a:	2800      	cmp	r0, #0
 8004e7c:	f43f aef7 	beq.w	8004c6e <_strtod_l+0x43e>
 8004e80:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004e82:	300c      	adds	r0, #12
 8004e84:	691a      	ldr	r2, [r3, #16]
 8004e86:	f103 010c 	add.w	r1, r3, #12
 8004e8a:	3202      	adds	r2, #2
 8004e8c:	0092      	lsls	r2, r2, #2
 8004e8e:	f000 fd55 	bl	800593c <memcpy>
 8004e92:	ab1c      	add	r3, sp, #112	@ 0x70
 8004e94:	9301      	str	r3, [sp, #4]
 8004e96:	ab1b      	add	r3, sp, #108	@ 0x6c
 8004e98:	9300      	str	r3, [sp, #0]
 8004e9a:	4652      	mov	r2, sl
 8004e9c:	465b      	mov	r3, fp
 8004e9e:	9805      	ldr	r0, [sp, #20]
 8004ea0:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 8004ea4:	f7ff fbd4 	bl	8004650 <__d2b>
 8004ea8:	901a      	str	r0, [sp, #104]	@ 0x68
 8004eaa:	2800      	cmp	r0, #0
 8004eac:	f43f aedf 	beq.w	8004c6e <_strtod_l+0x43e>
 8004eb0:	2101      	movs	r1, #1
 8004eb2:	9805      	ldr	r0, [sp, #20]
 8004eb4:	f7ff f936 	bl	8004124 <__i2b>
 8004eb8:	4680      	mov	r8, r0
 8004eba:	b948      	cbnz	r0, 8004ed0 <_strtod_l+0x6a0>
 8004ebc:	f04f 0800 	mov.w	r8, #0
 8004ec0:	e6d5      	b.n	8004c6e <_strtod_l+0x43e>
 8004ec2:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8004ec6:	fa02 f303 	lsl.w	r3, r2, r3
 8004eca:	ea03 0a0a 	and.w	sl, r3, sl
 8004ece:	e7ad      	b.n	8004e2c <_strtod_l+0x5fc>
 8004ed0:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 8004ed2:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8004ed4:	2d00      	cmp	r5, #0
 8004ed6:	bfab      	itete	ge
 8004ed8:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 8004eda:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 8004edc:	18ef      	addge	r7, r5, r3
 8004ede:	1b5e      	sublt	r6, r3, r5
 8004ee0:	9b08      	ldr	r3, [sp, #32]
 8004ee2:	bfa8      	it	ge
 8004ee4:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 8004ee6:	eba5 0503 	sub.w	r5, r5, r3
 8004eea:	4415      	add	r5, r2
 8004eec:	4b34      	ldr	r3, [pc, #208]	@ (8004fc0 <_strtod_l+0x790>)
 8004eee:	f105 35ff 	add.w	r5, r5, #4294967295	@ 0xffffffff
 8004ef2:	bfb8      	it	lt
 8004ef4:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 8004ef6:	429d      	cmp	r5, r3
 8004ef8:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 8004efc:	da50      	bge.n	8004fa0 <_strtod_l+0x770>
 8004efe:	1b5b      	subs	r3, r3, r5
 8004f00:	2b1f      	cmp	r3, #31
 8004f02:	f04f 0101 	mov.w	r1, #1
 8004f06:	eba2 0203 	sub.w	r2, r2, r3
 8004f0a:	dc3d      	bgt.n	8004f88 <_strtod_l+0x758>
 8004f0c:	fa01 f303 	lsl.w	r3, r1, r3
 8004f10:	9313      	str	r3, [sp, #76]	@ 0x4c
 8004f12:	2300      	movs	r3, #0
 8004f14:	9310      	str	r3, [sp, #64]	@ 0x40
 8004f16:	18bd      	adds	r5, r7, r2
 8004f18:	9b08      	ldr	r3, [sp, #32]
 8004f1a:	42af      	cmp	r7, r5
 8004f1c:	4416      	add	r6, r2
 8004f1e:	441e      	add	r6, r3
 8004f20:	463b      	mov	r3, r7
 8004f22:	bfa8      	it	ge
 8004f24:	462b      	movge	r3, r5
 8004f26:	42b3      	cmp	r3, r6
 8004f28:	bfa8      	it	ge
 8004f2a:	4633      	movge	r3, r6
 8004f2c:	2b00      	cmp	r3, #0
 8004f2e:	bfc2      	ittt	gt
 8004f30:	1aed      	subgt	r5, r5, r3
 8004f32:	1af6      	subgt	r6, r6, r3
 8004f34:	1aff      	subgt	r7, r7, r3
 8004f36:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8004f38:	2b00      	cmp	r3, #0
 8004f3a:	dd16      	ble.n	8004f6a <_strtod_l+0x73a>
 8004f3c:	4641      	mov	r1, r8
 8004f3e:	461a      	mov	r2, r3
 8004f40:	9805      	ldr	r0, [sp, #20]
 8004f42:	f7ff f9a7 	bl	8004294 <__pow5mult>
 8004f46:	4680      	mov	r8, r0
 8004f48:	2800      	cmp	r0, #0
 8004f4a:	d0b7      	beq.n	8004ebc <_strtod_l+0x68c>
 8004f4c:	4601      	mov	r1, r0
 8004f4e:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8004f50:	9805      	ldr	r0, [sp, #20]
 8004f52:	f7ff f8fd 	bl	8004150 <__multiply>
 8004f56:	900a      	str	r0, [sp, #40]	@ 0x28
 8004f58:	2800      	cmp	r0, #0
 8004f5a:	f43f ae88 	beq.w	8004c6e <_strtod_l+0x43e>
 8004f5e:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004f60:	9805      	ldr	r0, [sp, #20]
 8004f62:	f7fe ffe1 	bl	8003f28 <_Bfree>
 8004f66:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004f68:	931a      	str	r3, [sp, #104]	@ 0x68
 8004f6a:	2d00      	cmp	r5, #0
 8004f6c:	dc1d      	bgt.n	8004faa <_strtod_l+0x77a>
 8004f6e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004f70:	2b00      	cmp	r3, #0
 8004f72:	dd27      	ble.n	8004fc4 <_strtod_l+0x794>
 8004f74:	4649      	mov	r1, r9
 8004f76:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8004f78:	9805      	ldr	r0, [sp, #20]
 8004f7a:	f7ff f98b 	bl	8004294 <__pow5mult>
 8004f7e:	4681      	mov	r9, r0
 8004f80:	bb00      	cbnz	r0, 8004fc4 <_strtod_l+0x794>
 8004f82:	f04f 0900 	mov.w	r9, #0
 8004f86:	e672      	b.n	8004c6e <_strtod_l+0x43e>
 8004f88:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 8004f8c:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 8004f90:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 8004f94:	35e2      	adds	r5, #226	@ 0xe2
 8004f96:	fa01 f305 	lsl.w	r3, r1, r5
 8004f9a:	9310      	str	r3, [sp, #64]	@ 0x40
 8004f9c:	9113      	str	r1, [sp, #76]	@ 0x4c
 8004f9e:	e7ba      	b.n	8004f16 <_strtod_l+0x6e6>
 8004fa0:	2300      	movs	r3, #0
 8004fa2:	9310      	str	r3, [sp, #64]	@ 0x40
 8004fa4:	2301      	movs	r3, #1
 8004fa6:	9313      	str	r3, [sp, #76]	@ 0x4c
 8004fa8:	e7b5      	b.n	8004f16 <_strtod_l+0x6e6>
 8004faa:	462a      	mov	r2, r5
 8004fac:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004fae:	9805      	ldr	r0, [sp, #20]
 8004fb0:	f7ff f9ca 	bl	8004348 <__lshift>
 8004fb4:	901a      	str	r0, [sp, #104]	@ 0x68
 8004fb6:	2800      	cmp	r0, #0
 8004fb8:	d1d9      	bne.n	8004f6e <_strtod_l+0x73e>
 8004fba:	e658      	b.n	8004c6e <_strtod_l+0x43e>
 8004fbc:	08006988 	.word	0x08006988
 8004fc0:	fffffc02 	.word	0xfffffc02
 8004fc4:	2e00      	cmp	r6, #0
 8004fc6:	dd07      	ble.n	8004fd8 <_strtod_l+0x7a8>
 8004fc8:	4649      	mov	r1, r9
 8004fca:	4632      	mov	r2, r6
 8004fcc:	9805      	ldr	r0, [sp, #20]
 8004fce:	f7ff f9bb 	bl	8004348 <__lshift>
 8004fd2:	4681      	mov	r9, r0
 8004fd4:	2800      	cmp	r0, #0
 8004fd6:	d0d4      	beq.n	8004f82 <_strtod_l+0x752>
 8004fd8:	2f00      	cmp	r7, #0
 8004fda:	dd08      	ble.n	8004fee <_strtod_l+0x7be>
 8004fdc:	4641      	mov	r1, r8
 8004fde:	463a      	mov	r2, r7
 8004fe0:	9805      	ldr	r0, [sp, #20]
 8004fe2:	f7ff f9b1 	bl	8004348 <__lshift>
 8004fe6:	4680      	mov	r8, r0
 8004fe8:	2800      	cmp	r0, #0
 8004fea:	f43f ae40 	beq.w	8004c6e <_strtod_l+0x43e>
 8004fee:	464a      	mov	r2, r9
 8004ff0:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004ff2:	9805      	ldr	r0, [sp, #20]
 8004ff4:	f7ff fa30 	bl	8004458 <__mdiff>
 8004ff8:	4604      	mov	r4, r0
 8004ffa:	2800      	cmp	r0, #0
 8004ffc:	f43f ae37 	beq.w	8004c6e <_strtod_l+0x43e>
 8005000:	68c3      	ldr	r3, [r0, #12]
 8005002:	4641      	mov	r1, r8
 8005004:	930f      	str	r3, [sp, #60]	@ 0x3c
 8005006:	2300      	movs	r3, #0
 8005008:	60c3      	str	r3, [r0, #12]
 800500a:	f7ff fa09 	bl	8004420 <__mcmp>
 800500e:	2800      	cmp	r0, #0
 8005010:	da3d      	bge.n	800508e <_strtod_l+0x85e>
 8005012:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005014:	ea53 030a 	orrs.w	r3, r3, sl
 8005018:	d163      	bne.n	80050e2 <_strtod_l+0x8b2>
 800501a:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800501e:	2b00      	cmp	r3, #0
 8005020:	d15f      	bne.n	80050e2 <_strtod_l+0x8b2>
 8005022:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8005026:	0d1b      	lsrs	r3, r3, #20
 8005028:	051b      	lsls	r3, r3, #20
 800502a:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 800502e:	d958      	bls.n	80050e2 <_strtod_l+0x8b2>
 8005030:	6963      	ldr	r3, [r4, #20]
 8005032:	b913      	cbnz	r3, 800503a <_strtod_l+0x80a>
 8005034:	6923      	ldr	r3, [r4, #16]
 8005036:	2b01      	cmp	r3, #1
 8005038:	dd53      	ble.n	80050e2 <_strtod_l+0x8b2>
 800503a:	4621      	mov	r1, r4
 800503c:	2201      	movs	r2, #1
 800503e:	9805      	ldr	r0, [sp, #20]
 8005040:	f7ff f982 	bl	8004348 <__lshift>
 8005044:	4641      	mov	r1, r8
 8005046:	4604      	mov	r4, r0
 8005048:	f7ff f9ea 	bl	8004420 <__mcmp>
 800504c:	2800      	cmp	r0, #0
 800504e:	dd48      	ble.n	80050e2 <_strtod_l+0x8b2>
 8005050:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8005054:	9a08      	ldr	r2, [sp, #32]
 8005056:	0d1b      	lsrs	r3, r3, #20
 8005058:	051b      	lsls	r3, r3, #20
 800505a:	2a00      	cmp	r2, #0
 800505c:	d062      	beq.n	8005124 <_strtod_l+0x8f4>
 800505e:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8005062:	d85f      	bhi.n	8005124 <_strtod_l+0x8f4>
 8005064:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 8005068:	f67f ae94 	bls.w	8004d94 <_strtod_l+0x564>
 800506c:	4650      	mov	r0, sl
 800506e:	4659      	mov	r1, fp
 8005070:	4ba3      	ldr	r3, [pc, #652]	@ (8005300 <_strtod_l+0xad0>)
 8005072:	2200      	movs	r2, #0
 8005074:	f7fb fa30 	bl	80004d8 <__aeabi_dmul>
 8005078:	4ba2      	ldr	r3, [pc, #648]	@ (8005304 <_strtod_l+0xad4>)
 800507a:	4682      	mov	sl, r0
 800507c:	400b      	ands	r3, r1
 800507e:	468b      	mov	fp, r1
 8005080:	2b00      	cmp	r3, #0
 8005082:	f47f adff 	bne.w	8004c84 <_strtod_l+0x454>
 8005086:	2322      	movs	r3, #34	@ 0x22
 8005088:	9a05      	ldr	r2, [sp, #20]
 800508a:	6013      	str	r3, [r2, #0]
 800508c:	e5fa      	b.n	8004c84 <_strtod_l+0x454>
 800508e:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 8005092:	d165      	bne.n	8005160 <_strtod_l+0x930>
 8005094:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8005096:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800509a:	b35a      	cbz	r2, 80050f4 <_strtod_l+0x8c4>
 800509c:	4a9a      	ldr	r2, [pc, #616]	@ (8005308 <_strtod_l+0xad8>)
 800509e:	4293      	cmp	r3, r2
 80050a0:	d12b      	bne.n	80050fa <_strtod_l+0x8ca>
 80050a2:	9b08      	ldr	r3, [sp, #32]
 80050a4:	4651      	mov	r1, sl
 80050a6:	b303      	cbz	r3, 80050ea <_strtod_l+0x8ba>
 80050a8:	465a      	mov	r2, fp
 80050aa:	4b96      	ldr	r3, [pc, #600]	@ (8005304 <_strtod_l+0xad4>)
 80050ac:	4013      	ands	r3, r2
 80050ae:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 80050b2:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80050b6:	d81b      	bhi.n	80050f0 <_strtod_l+0x8c0>
 80050b8:	0d1b      	lsrs	r3, r3, #20
 80050ba:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 80050be:	fa02 f303 	lsl.w	r3, r2, r3
 80050c2:	4299      	cmp	r1, r3
 80050c4:	d119      	bne.n	80050fa <_strtod_l+0x8ca>
 80050c6:	4b91      	ldr	r3, [pc, #580]	@ (800530c <_strtod_l+0xadc>)
 80050c8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80050ca:	429a      	cmp	r2, r3
 80050cc:	d102      	bne.n	80050d4 <_strtod_l+0x8a4>
 80050ce:	3101      	adds	r1, #1
 80050d0:	f43f adcd 	beq.w	8004c6e <_strtod_l+0x43e>
 80050d4:	f04f 0a00 	mov.w	sl, #0
 80050d8:	4b8a      	ldr	r3, [pc, #552]	@ (8005304 <_strtod_l+0xad4>)
 80050da:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80050dc:	401a      	ands	r2, r3
 80050de:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 80050e2:	9b08      	ldr	r3, [sp, #32]
 80050e4:	2b00      	cmp	r3, #0
 80050e6:	d1c1      	bne.n	800506c <_strtod_l+0x83c>
 80050e8:	e5cc      	b.n	8004c84 <_strtod_l+0x454>
 80050ea:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80050ee:	e7e8      	b.n	80050c2 <_strtod_l+0x892>
 80050f0:	4613      	mov	r3, r2
 80050f2:	e7e6      	b.n	80050c2 <_strtod_l+0x892>
 80050f4:	ea53 030a 	orrs.w	r3, r3, sl
 80050f8:	d0aa      	beq.n	8005050 <_strtod_l+0x820>
 80050fa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80050fc:	b1db      	cbz	r3, 8005136 <_strtod_l+0x906>
 80050fe:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8005100:	4213      	tst	r3, r2
 8005102:	d0ee      	beq.n	80050e2 <_strtod_l+0x8b2>
 8005104:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005106:	4650      	mov	r0, sl
 8005108:	4659      	mov	r1, fp
 800510a:	9a08      	ldr	r2, [sp, #32]
 800510c:	b1bb      	cbz	r3, 800513e <_strtod_l+0x90e>
 800510e:	f7ff fb6b 	bl	80047e8 <sulp>
 8005112:	4602      	mov	r2, r0
 8005114:	460b      	mov	r3, r1
 8005116:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800511a:	f7fb f827 	bl	800016c <__adddf3>
 800511e:	4682      	mov	sl, r0
 8005120:	468b      	mov	fp, r1
 8005122:	e7de      	b.n	80050e2 <_strtod_l+0x8b2>
 8005124:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 8005128:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 800512c:	f04f 3aff 	mov.w	sl, #4294967295	@ 0xffffffff
 8005130:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 8005134:	e7d5      	b.n	80050e2 <_strtod_l+0x8b2>
 8005136:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8005138:	ea13 0f0a 	tst.w	r3, sl
 800513c:	e7e1      	b.n	8005102 <_strtod_l+0x8d2>
 800513e:	f7ff fb53 	bl	80047e8 <sulp>
 8005142:	4602      	mov	r2, r0
 8005144:	460b      	mov	r3, r1
 8005146:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800514a:	f7fb f80d 	bl	8000168 <__aeabi_dsub>
 800514e:	2200      	movs	r2, #0
 8005150:	2300      	movs	r3, #0
 8005152:	4682      	mov	sl, r0
 8005154:	468b      	mov	fp, r1
 8005156:	f7fb fc27 	bl	80009a8 <__aeabi_dcmpeq>
 800515a:	2800      	cmp	r0, #0
 800515c:	d0c1      	beq.n	80050e2 <_strtod_l+0x8b2>
 800515e:	e619      	b.n	8004d94 <_strtod_l+0x564>
 8005160:	4641      	mov	r1, r8
 8005162:	4620      	mov	r0, r4
 8005164:	f7ff facc 	bl	8004700 <__ratio>
 8005168:	2200      	movs	r2, #0
 800516a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800516e:	4606      	mov	r6, r0
 8005170:	460f      	mov	r7, r1
 8005172:	f7fb fc2d 	bl	80009d0 <__aeabi_dcmple>
 8005176:	2800      	cmp	r0, #0
 8005178:	d06d      	beq.n	8005256 <_strtod_l+0xa26>
 800517a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800517c:	2b00      	cmp	r3, #0
 800517e:	d178      	bne.n	8005272 <_strtod_l+0xa42>
 8005180:	f1ba 0f00 	cmp.w	sl, #0
 8005184:	d156      	bne.n	8005234 <_strtod_l+0xa04>
 8005186:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005188:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800518c:	2b00      	cmp	r3, #0
 800518e:	d158      	bne.n	8005242 <_strtod_l+0xa12>
 8005190:	2200      	movs	r2, #0
 8005192:	4630      	mov	r0, r6
 8005194:	4639      	mov	r1, r7
 8005196:	4b5e      	ldr	r3, [pc, #376]	@ (8005310 <_strtod_l+0xae0>)
 8005198:	f7fb fc10 	bl	80009bc <__aeabi_dcmplt>
 800519c:	2800      	cmp	r0, #0
 800519e:	d157      	bne.n	8005250 <_strtod_l+0xa20>
 80051a0:	4630      	mov	r0, r6
 80051a2:	4639      	mov	r1, r7
 80051a4:	2200      	movs	r2, #0
 80051a6:	4b5b      	ldr	r3, [pc, #364]	@ (8005314 <_strtod_l+0xae4>)
 80051a8:	f7fb f996 	bl	80004d8 <__aeabi_dmul>
 80051ac:	4606      	mov	r6, r0
 80051ae:	460f      	mov	r7, r1
 80051b0:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 80051b4:	9606      	str	r6, [sp, #24]
 80051b6:	9307      	str	r3, [sp, #28]
 80051b8:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80051bc:	4d51      	ldr	r5, [pc, #324]	@ (8005304 <_strtod_l+0xad4>)
 80051be:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 80051c2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80051c4:	401d      	ands	r5, r3
 80051c6:	4b54      	ldr	r3, [pc, #336]	@ (8005318 <_strtod_l+0xae8>)
 80051c8:	429d      	cmp	r5, r3
 80051ca:	f040 80ab 	bne.w	8005324 <_strtod_l+0xaf4>
 80051ce:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80051d0:	4650      	mov	r0, sl
 80051d2:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 80051d6:	4659      	mov	r1, fp
 80051d8:	f7ff f9d2 	bl	8004580 <__ulp>
 80051dc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80051e0:	f7fb f97a 	bl	80004d8 <__aeabi_dmul>
 80051e4:	4652      	mov	r2, sl
 80051e6:	465b      	mov	r3, fp
 80051e8:	f7fa ffc0 	bl	800016c <__adddf3>
 80051ec:	460b      	mov	r3, r1
 80051ee:	4945      	ldr	r1, [pc, #276]	@ (8005304 <_strtod_l+0xad4>)
 80051f0:	4a4a      	ldr	r2, [pc, #296]	@ (800531c <_strtod_l+0xaec>)
 80051f2:	4019      	ands	r1, r3
 80051f4:	4291      	cmp	r1, r2
 80051f6:	4682      	mov	sl, r0
 80051f8:	d942      	bls.n	8005280 <_strtod_l+0xa50>
 80051fa:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80051fc:	4b43      	ldr	r3, [pc, #268]	@ (800530c <_strtod_l+0xadc>)
 80051fe:	429a      	cmp	r2, r3
 8005200:	d103      	bne.n	800520a <_strtod_l+0x9da>
 8005202:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005204:	3301      	adds	r3, #1
 8005206:	f43f ad32 	beq.w	8004c6e <_strtod_l+0x43e>
 800520a:	f04f 3aff 	mov.w	sl, #4294967295	@ 0xffffffff
 800520e:	f8df b0fc 	ldr.w	fp, [pc, #252]	@ 800530c <_strtod_l+0xadc>
 8005212:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8005214:	9805      	ldr	r0, [sp, #20]
 8005216:	f7fe fe87 	bl	8003f28 <_Bfree>
 800521a:	4649      	mov	r1, r9
 800521c:	9805      	ldr	r0, [sp, #20]
 800521e:	f7fe fe83 	bl	8003f28 <_Bfree>
 8005222:	4641      	mov	r1, r8
 8005224:	9805      	ldr	r0, [sp, #20]
 8005226:	f7fe fe7f 	bl	8003f28 <_Bfree>
 800522a:	4621      	mov	r1, r4
 800522c:	9805      	ldr	r0, [sp, #20]
 800522e:	f7fe fe7b 	bl	8003f28 <_Bfree>
 8005232:	e61c      	b.n	8004e6e <_strtod_l+0x63e>
 8005234:	f1ba 0f01 	cmp.w	sl, #1
 8005238:	d103      	bne.n	8005242 <_strtod_l+0xa12>
 800523a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800523c:	2b00      	cmp	r3, #0
 800523e:	f43f ada9 	beq.w	8004d94 <_strtod_l+0x564>
 8005242:	2200      	movs	r2, #0
 8005244:	4b36      	ldr	r3, [pc, #216]	@ (8005320 <_strtod_l+0xaf0>)
 8005246:	2600      	movs	r6, #0
 8005248:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800524c:	4f30      	ldr	r7, [pc, #192]	@ (8005310 <_strtod_l+0xae0>)
 800524e:	e7b3      	b.n	80051b8 <_strtod_l+0x988>
 8005250:	2600      	movs	r6, #0
 8005252:	4f30      	ldr	r7, [pc, #192]	@ (8005314 <_strtod_l+0xae4>)
 8005254:	e7ac      	b.n	80051b0 <_strtod_l+0x980>
 8005256:	4630      	mov	r0, r6
 8005258:	4639      	mov	r1, r7
 800525a:	4b2e      	ldr	r3, [pc, #184]	@ (8005314 <_strtod_l+0xae4>)
 800525c:	2200      	movs	r2, #0
 800525e:	f7fb f93b 	bl	80004d8 <__aeabi_dmul>
 8005262:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005264:	4606      	mov	r6, r0
 8005266:	460f      	mov	r7, r1
 8005268:	2b00      	cmp	r3, #0
 800526a:	d0a1      	beq.n	80051b0 <_strtod_l+0x980>
 800526c:	e9cd 6706 	strd	r6, r7, [sp, #24]
 8005270:	e7a2      	b.n	80051b8 <_strtod_l+0x988>
 8005272:	2200      	movs	r2, #0
 8005274:	4b26      	ldr	r3, [pc, #152]	@ (8005310 <_strtod_l+0xae0>)
 8005276:	4616      	mov	r6, r2
 8005278:	461f      	mov	r7, r3
 800527a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800527e:	e79b      	b.n	80051b8 <_strtod_l+0x988>
 8005280:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 8005284:	9b08      	ldr	r3, [sp, #32]
 8005286:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 800528a:	2b00      	cmp	r3, #0
 800528c:	d1c1      	bne.n	8005212 <_strtod_l+0x9e2>
 800528e:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8005292:	0d1b      	lsrs	r3, r3, #20
 8005294:	051b      	lsls	r3, r3, #20
 8005296:	429d      	cmp	r5, r3
 8005298:	d1bb      	bne.n	8005212 <_strtod_l+0x9e2>
 800529a:	4630      	mov	r0, r6
 800529c:	4639      	mov	r1, r7
 800529e:	f7fb fec1 	bl	8001024 <__aeabi_d2lz>
 80052a2:	f7fb f8eb 	bl	800047c <__aeabi_l2d>
 80052a6:	4602      	mov	r2, r0
 80052a8:	460b      	mov	r3, r1
 80052aa:	4630      	mov	r0, r6
 80052ac:	4639      	mov	r1, r7
 80052ae:	f7fa ff5b 	bl	8000168 <__aeabi_dsub>
 80052b2:	460b      	mov	r3, r1
 80052b4:	4602      	mov	r2, r0
 80052b6:	f3cb 0613 	ubfx	r6, fp, #0, #20
 80052ba:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 80052be:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80052c0:	ea46 060a 	orr.w	r6, r6, sl
 80052c4:	431e      	orrs	r6, r3
 80052c6:	d06a      	beq.n	800539e <_strtod_l+0xb6e>
 80052c8:	a309      	add	r3, pc, #36	@ (adr r3, 80052f0 <_strtod_l+0xac0>)
 80052ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80052ce:	f7fb fb75 	bl	80009bc <__aeabi_dcmplt>
 80052d2:	2800      	cmp	r0, #0
 80052d4:	f47f acd6 	bne.w	8004c84 <_strtod_l+0x454>
 80052d8:	a307      	add	r3, pc, #28	@ (adr r3, 80052f8 <_strtod_l+0xac8>)
 80052da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80052de:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80052e2:	f7fb fb89 	bl	80009f8 <__aeabi_dcmpgt>
 80052e6:	2800      	cmp	r0, #0
 80052e8:	d093      	beq.n	8005212 <_strtod_l+0x9e2>
 80052ea:	e4cb      	b.n	8004c84 <_strtod_l+0x454>
 80052ec:	f3af 8000 	nop.w
 80052f0:	94a03595 	.word	0x94a03595
 80052f4:	3fdfffff 	.word	0x3fdfffff
 80052f8:	35afe535 	.word	0x35afe535
 80052fc:	3fe00000 	.word	0x3fe00000
 8005300:	39500000 	.word	0x39500000
 8005304:	7ff00000 	.word	0x7ff00000
 8005308:	000fffff 	.word	0x000fffff
 800530c:	7fefffff 	.word	0x7fefffff
 8005310:	3ff00000 	.word	0x3ff00000
 8005314:	3fe00000 	.word	0x3fe00000
 8005318:	7fe00000 	.word	0x7fe00000
 800531c:	7c9fffff 	.word	0x7c9fffff
 8005320:	bff00000 	.word	0xbff00000
 8005324:	9b08      	ldr	r3, [sp, #32]
 8005326:	b323      	cbz	r3, 8005372 <_strtod_l+0xb42>
 8005328:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 800532c:	d821      	bhi.n	8005372 <_strtod_l+0xb42>
 800532e:	a328      	add	r3, pc, #160	@ (adr r3, 80053d0 <_strtod_l+0xba0>)
 8005330:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005334:	4630      	mov	r0, r6
 8005336:	4639      	mov	r1, r7
 8005338:	f7fb fb4a 	bl	80009d0 <__aeabi_dcmple>
 800533c:	b1a0      	cbz	r0, 8005368 <_strtod_l+0xb38>
 800533e:	4639      	mov	r1, r7
 8005340:	4630      	mov	r0, r6
 8005342:	f7fb fba1 	bl	8000a88 <__aeabi_d2uiz>
 8005346:	2801      	cmp	r0, #1
 8005348:	bf38      	it	cc
 800534a:	2001      	movcc	r0, #1
 800534c:	f7fb f84a 	bl	80003e4 <__aeabi_ui2d>
 8005350:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005352:	4606      	mov	r6, r0
 8005354:	460f      	mov	r7, r1
 8005356:	b9fb      	cbnz	r3, 8005398 <_strtod_l+0xb68>
 8005358:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 800535c:	9014      	str	r0, [sp, #80]	@ 0x50
 800535e:	9315      	str	r3, [sp, #84]	@ 0x54
 8005360:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 8005364:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 8005368:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800536a:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 800536e:	1b5b      	subs	r3, r3, r5
 8005370:	9311      	str	r3, [sp, #68]	@ 0x44
 8005372:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8005376:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 800537a:	f7ff f901 	bl	8004580 <__ulp>
 800537e:	4602      	mov	r2, r0
 8005380:	460b      	mov	r3, r1
 8005382:	4650      	mov	r0, sl
 8005384:	4659      	mov	r1, fp
 8005386:	f7fb f8a7 	bl	80004d8 <__aeabi_dmul>
 800538a:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 800538e:	f7fa feed 	bl	800016c <__adddf3>
 8005392:	4682      	mov	sl, r0
 8005394:	468b      	mov	fp, r1
 8005396:	e775      	b.n	8005284 <_strtod_l+0xa54>
 8005398:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 800539c:	e7e0      	b.n	8005360 <_strtod_l+0xb30>
 800539e:	a30e      	add	r3, pc, #56	@ (adr r3, 80053d8 <_strtod_l+0xba8>)
 80053a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80053a4:	f7fb fb0a 	bl	80009bc <__aeabi_dcmplt>
 80053a8:	e79d      	b.n	80052e6 <_strtod_l+0xab6>
 80053aa:	2300      	movs	r3, #0
 80053ac:	930e      	str	r3, [sp, #56]	@ 0x38
 80053ae:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80053b0:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 80053b2:	6013      	str	r3, [r2, #0]
 80053b4:	f7ff ba79 	b.w	80048aa <_strtod_l+0x7a>
 80053b8:	2a65      	cmp	r2, #101	@ 0x65
 80053ba:	f43f ab72 	beq.w	8004aa2 <_strtod_l+0x272>
 80053be:	2a45      	cmp	r2, #69	@ 0x45
 80053c0:	f43f ab6f 	beq.w	8004aa2 <_strtod_l+0x272>
 80053c4:	2301      	movs	r3, #1
 80053c6:	f7ff bbaa 	b.w	8004b1e <_strtod_l+0x2ee>
 80053ca:	bf00      	nop
 80053cc:	f3af 8000 	nop.w
 80053d0:	ffc00000 	.word	0xffc00000
 80053d4:	41dfffff 	.word	0x41dfffff
 80053d8:	94a03595 	.word	0x94a03595
 80053dc:	3fcfffff 	.word	0x3fcfffff

080053e0 <_strtod_r>:
 80053e0:	4b01      	ldr	r3, [pc, #4]	@ (80053e8 <_strtod_r+0x8>)
 80053e2:	f7ff ba25 	b.w	8004830 <_strtod_l>
 80053e6:	bf00      	nop
 80053e8:	20000068 	.word	0x20000068

080053ec <_strtol_l.isra.0>:
 80053ec:	2b24      	cmp	r3, #36	@ 0x24
 80053ee:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80053f2:	4686      	mov	lr, r0
 80053f4:	4690      	mov	r8, r2
 80053f6:	d801      	bhi.n	80053fc <_strtol_l.isra.0+0x10>
 80053f8:	2b01      	cmp	r3, #1
 80053fa:	d106      	bne.n	800540a <_strtol_l.isra.0+0x1e>
 80053fc:	f7fd fe70 	bl	80030e0 <__errno>
 8005400:	2316      	movs	r3, #22
 8005402:	6003      	str	r3, [r0, #0]
 8005404:	2000      	movs	r0, #0
 8005406:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800540a:	460d      	mov	r5, r1
 800540c:	4833      	ldr	r0, [pc, #204]	@ (80054dc <_strtol_l.isra.0+0xf0>)
 800540e:	462a      	mov	r2, r5
 8005410:	f815 4b01 	ldrb.w	r4, [r5], #1
 8005414:	5d06      	ldrb	r6, [r0, r4]
 8005416:	f016 0608 	ands.w	r6, r6, #8
 800541a:	d1f8      	bne.n	800540e <_strtol_l.isra.0+0x22>
 800541c:	2c2d      	cmp	r4, #45	@ 0x2d
 800541e:	d110      	bne.n	8005442 <_strtol_l.isra.0+0x56>
 8005420:	2601      	movs	r6, #1
 8005422:	782c      	ldrb	r4, [r5, #0]
 8005424:	1c95      	adds	r5, r2, #2
 8005426:	f033 0210 	bics.w	r2, r3, #16
 800542a:	d115      	bne.n	8005458 <_strtol_l.isra.0+0x6c>
 800542c:	2c30      	cmp	r4, #48	@ 0x30
 800542e:	d10d      	bne.n	800544c <_strtol_l.isra.0+0x60>
 8005430:	782a      	ldrb	r2, [r5, #0]
 8005432:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8005436:	2a58      	cmp	r2, #88	@ 0x58
 8005438:	d108      	bne.n	800544c <_strtol_l.isra.0+0x60>
 800543a:	786c      	ldrb	r4, [r5, #1]
 800543c:	3502      	adds	r5, #2
 800543e:	2310      	movs	r3, #16
 8005440:	e00a      	b.n	8005458 <_strtol_l.isra.0+0x6c>
 8005442:	2c2b      	cmp	r4, #43	@ 0x2b
 8005444:	bf04      	itt	eq
 8005446:	782c      	ldrbeq	r4, [r5, #0]
 8005448:	1c95      	addeq	r5, r2, #2
 800544a:	e7ec      	b.n	8005426 <_strtol_l.isra.0+0x3a>
 800544c:	2b00      	cmp	r3, #0
 800544e:	d1f6      	bne.n	800543e <_strtol_l.isra.0+0x52>
 8005450:	2c30      	cmp	r4, #48	@ 0x30
 8005452:	bf14      	ite	ne
 8005454:	230a      	movne	r3, #10
 8005456:	2308      	moveq	r3, #8
 8005458:	2200      	movs	r2, #0
 800545a:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 800545e:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
 8005462:	fbbc f9f3 	udiv	r9, ip, r3
 8005466:	4610      	mov	r0, r2
 8005468:	fb03 ca19 	mls	sl, r3, r9, ip
 800546c:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8005470:	2f09      	cmp	r7, #9
 8005472:	d80f      	bhi.n	8005494 <_strtol_l.isra.0+0xa8>
 8005474:	463c      	mov	r4, r7
 8005476:	42a3      	cmp	r3, r4
 8005478:	dd1b      	ble.n	80054b2 <_strtol_l.isra.0+0xc6>
 800547a:	1c57      	adds	r7, r2, #1
 800547c:	d007      	beq.n	800548e <_strtol_l.isra.0+0xa2>
 800547e:	4581      	cmp	r9, r0
 8005480:	d314      	bcc.n	80054ac <_strtol_l.isra.0+0xc0>
 8005482:	d101      	bne.n	8005488 <_strtol_l.isra.0+0x9c>
 8005484:	45a2      	cmp	sl, r4
 8005486:	db11      	blt.n	80054ac <_strtol_l.isra.0+0xc0>
 8005488:	2201      	movs	r2, #1
 800548a:	fb00 4003 	mla	r0, r0, r3, r4
 800548e:	f815 4b01 	ldrb.w	r4, [r5], #1
 8005492:	e7eb      	b.n	800546c <_strtol_l.isra.0+0x80>
 8005494:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8005498:	2f19      	cmp	r7, #25
 800549a:	d801      	bhi.n	80054a0 <_strtol_l.isra.0+0xb4>
 800549c:	3c37      	subs	r4, #55	@ 0x37
 800549e:	e7ea      	b.n	8005476 <_strtol_l.isra.0+0x8a>
 80054a0:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 80054a4:	2f19      	cmp	r7, #25
 80054a6:	d804      	bhi.n	80054b2 <_strtol_l.isra.0+0xc6>
 80054a8:	3c57      	subs	r4, #87	@ 0x57
 80054aa:	e7e4      	b.n	8005476 <_strtol_l.isra.0+0x8a>
 80054ac:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80054b0:	e7ed      	b.n	800548e <_strtol_l.isra.0+0xa2>
 80054b2:	1c53      	adds	r3, r2, #1
 80054b4:	d108      	bne.n	80054c8 <_strtol_l.isra.0+0xdc>
 80054b6:	2322      	movs	r3, #34	@ 0x22
 80054b8:	4660      	mov	r0, ip
 80054ba:	f8ce 3000 	str.w	r3, [lr]
 80054be:	f1b8 0f00 	cmp.w	r8, #0
 80054c2:	d0a0      	beq.n	8005406 <_strtol_l.isra.0+0x1a>
 80054c4:	1e69      	subs	r1, r5, #1
 80054c6:	e006      	b.n	80054d6 <_strtol_l.isra.0+0xea>
 80054c8:	b106      	cbz	r6, 80054cc <_strtol_l.isra.0+0xe0>
 80054ca:	4240      	negs	r0, r0
 80054cc:	f1b8 0f00 	cmp.w	r8, #0
 80054d0:	d099      	beq.n	8005406 <_strtol_l.isra.0+0x1a>
 80054d2:	2a00      	cmp	r2, #0
 80054d4:	d1f6      	bne.n	80054c4 <_strtol_l.isra.0+0xd8>
 80054d6:	f8c8 1000 	str.w	r1, [r8]
 80054da:	e794      	b.n	8005406 <_strtol_l.isra.0+0x1a>
 80054dc:	080069b1 	.word	0x080069b1

080054e0 <_strtol_r>:
 80054e0:	f7ff bf84 	b.w	80053ec <_strtol_l.isra.0>

080054e4 <__ssputs_r>:
 80054e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80054e8:	461f      	mov	r7, r3
 80054ea:	688e      	ldr	r6, [r1, #8]
 80054ec:	4682      	mov	sl, r0
 80054ee:	42be      	cmp	r6, r7
 80054f0:	460c      	mov	r4, r1
 80054f2:	4690      	mov	r8, r2
 80054f4:	680b      	ldr	r3, [r1, #0]
 80054f6:	d82d      	bhi.n	8005554 <__ssputs_r+0x70>
 80054f8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80054fc:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8005500:	d026      	beq.n	8005550 <__ssputs_r+0x6c>
 8005502:	6965      	ldr	r5, [r4, #20]
 8005504:	6909      	ldr	r1, [r1, #16]
 8005506:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800550a:	eba3 0901 	sub.w	r9, r3, r1
 800550e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8005512:	1c7b      	adds	r3, r7, #1
 8005514:	444b      	add	r3, r9
 8005516:	106d      	asrs	r5, r5, #1
 8005518:	429d      	cmp	r5, r3
 800551a:	bf38      	it	cc
 800551c:	461d      	movcc	r5, r3
 800551e:	0553      	lsls	r3, r2, #21
 8005520:	d527      	bpl.n	8005572 <__ssputs_r+0x8e>
 8005522:	4629      	mov	r1, r5
 8005524:	f7fc fd62 	bl	8001fec <_malloc_r>
 8005528:	4606      	mov	r6, r0
 800552a:	b360      	cbz	r0, 8005586 <__ssputs_r+0xa2>
 800552c:	464a      	mov	r2, r9
 800552e:	6921      	ldr	r1, [r4, #16]
 8005530:	f000 fa04 	bl	800593c <memcpy>
 8005534:	89a3      	ldrh	r3, [r4, #12]
 8005536:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800553a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800553e:	81a3      	strh	r3, [r4, #12]
 8005540:	6126      	str	r6, [r4, #16]
 8005542:	444e      	add	r6, r9
 8005544:	6026      	str	r6, [r4, #0]
 8005546:	463e      	mov	r6, r7
 8005548:	6165      	str	r5, [r4, #20]
 800554a:	eba5 0509 	sub.w	r5, r5, r9
 800554e:	60a5      	str	r5, [r4, #8]
 8005550:	42be      	cmp	r6, r7
 8005552:	d900      	bls.n	8005556 <__ssputs_r+0x72>
 8005554:	463e      	mov	r6, r7
 8005556:	4632      	mov	r2, r6
 8005558:	4641      	mov	r1, r8
 800555a:	6820      	ldr	r0, [r4, #0]
 800555c:	f000 f9c2 	bl	80058e4 <memmove>
 8005560:	2000      	movs	r0, #0
 8005562:	68a3      	ldr	r3, [r4, #8]
 8005564:	1b9b      	subs	r3, r3, r6
 8005566:	60a3      	str	r3, [r4, #8]
 8005568:	6823      	ldr	r3, [r4, #0]
 800556a:	4433      	add	r3, r6
 800556c:	6023      	str	r3, [r4, #0]
 800556e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005572:	462a      	mov	r2, r5
 8005574:	f000 fd73 	bl	800605e <_realloc_r>
 8005578:	4606      	mov	r6, r0
 800557a:	2800      	cmp	r0, #0
 800557c:	d1e0      	bne.n	8005540 <__ssputs_r+0x5c>
 800557e:	4650      	mov	r0, sl
 8005580:	6921      	ldr	r1, [r4, #16]
 8005582:	f7fe fc49 	bl	8003e18 <_free_r>
 8005586:	230c      	movs	r3, #12
 8005588:	f8ca 3000 	str.w	r3, [sl]
 800558c:	89a3      	ldrh	r3, [r4, #12]
 800558e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8005592:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005596:	81a3      	strh	r3, [r4, #12]
 8005598:	e7e9      	b.n	800556e <__ssputs_r+0x8a>
	...

0800559c <_svfiprintf_r>:
 800559c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80055a0:	4698      	mov	r8, r3
 80055a2:	898b      	ldrh	r3, [r1, #12]
 80055a4:	4607      	mov	r7, r0
 80055a6:	061b      	lsls	r3, r3, #24
 80055a8:	460d      	mov	r5, r1
 80055aa:	4614      	mov	r4, r2
 80055ac:	b09d      	sub	sp, #116	@ 0x74
 80055ae:	d510      	bpl.n	80055d2 <_svfiprintf_r+0x36>
 80055b0:	690b      	ldr	r3, [r1, #16]
 80055b2:	b973      	cbnz	r3, 80055d2 <_svfiprintf_r+0x36>
 80055b4:	2140      	movs	r1, #64	@ 0x40
 80055b6:	f7fc fd19 	bl	8001fec <_malloc_r>
 80055ba:	6028      	str	r0, [r5, #0]
 80055bc:	6128      	str	r0, [r5, #16]
 80055be:	b930      	cbnz	r0, 80055ce <_svfiprintf_r+0x32>
 80055c0:	230c      	movs	r3, #12
 80055c2:	603b      	str	r3, [r7, #0]
 80055c4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80055c8:	b01d      	add	sp, #116	@ 0x74
 80055ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80055ce:	2340      	movs	r3, #64	@ 0x40
 80055d0:	616b      	str	r3, [r5, #20]
 80055d2:	2300      	movs	r3, #0
 80055d4:	9309      	str	r3, [sp, #36]	@ 0x24
 80055d6:	2320      	movs	r3, #32
 80055d8:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80055dc:	2330      	movs	r3, #48	@ 0x30
 80055de:	f04f 0901 	mov.w	r9, #1
 80055e2:	f8cd 800c 	str.w	r8, [sp, #12]
 80055e6:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 8005780 <_svfiprintf_r+0x1e4>
 80055ea:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80055ee:	4623      	mov	r3, r4
 80055f0:	469a      	mov	sl, r3
 80055f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80055f6:	b10a      	cbz	r2, 80055fc <_svfiprintf_r+0x60>
 80055f8:	2a25      	cmp	r2, #37	@ 0x25
 80055fa:	d1f9      	bne.n	80055f0 <_svfiprintf_r+0x54>
 80055fc:	ebba 0b04 	subs.w	fp, sl, r4
 8005600:	d00b      	beq.n	800561a <_svfiprintf_r+0x7e>
 8005602:	465b      	mov	r3, fp
 8005604:	4622      	mov	r2, r4
 8005606:	4629      	mov	r1, r5
 8005608:	4638      	mov	r0, r7
 800560a:	f7ff ff6b 	bl	80054e4 <__ssputs_r>
 800560e:	3001      	adds	r0, #1
 8005610:	f000 80a7 	beq.w	8005762 <_svfiprintf_r+0x1c6>
 8005614:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005616:	445a      	add	r2, fp
 8005618:	9209      	str	r2, [sp, #36]	@ 0x24
 800561a:	f89a 3000 	ldrb.w	r3, [sl]
 800561e:	2b00      	cmp	r3, #0
 8005620:	f000 809f 	beq.w	8005762 <_svfiprintf_r+0x1c6>
 8005624:	2300      	movs	r3, #0
 8005626:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800562a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800562e:	f10a 0a01 	add.w	sl, sl, #1
 8005632:	9304      	str	r3, [sp, #16]
 8005634:	9307      	str	r3, [sp, #28]
 8005636:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800563a:	931a      	str	r3, [sp, #104]	@ 0x68
 800563c:	4654      	mov	r4, sl
 800563e:	2205      	movs	r2, #5
 8005640:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005644:	484e      	ldr	r0, [pc, #312]	@ (8005780 <_svfiprintf_r+0x1e4>)
 8005646:	f7fd fd78 	bl	800313a <memchr>
 800564a:	9a04      	ldr	r2, [sp, #16]
 800564c:	b9d8      	cbnz	r0, 8005686 <_svfiprintf_r+0xea>
 800564e:	06d0      	lsls	r0, r2, #27
 8005650:	bf44      	itt	mi
 8005652:	2320      	movmi	r3, #32
 8005654:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005658:	0711      	lsls	r1, r2, #28
 800565a:	bf44      	itt	mi
 800565c:	232b      	movmi	r3, #43	@ 0x2b
 800565e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005662:	f89a 3000 	ldrb.w	r3, [sl]
 8005666:	2b2a      	cmp	r3, #42	@ 0x2a
 8005668:	d015      	beq.n	8005696 <_svfiprintf_r+0xfa>
 800566a:	4654      	mov	r4, sl
 800566c:	2000      	movs	r0, #0
 800566e:	f04f 0c0a 	mov.w	ip, #10
 8005672:	9a07      	ldr	r2, [sp, #28]
 8005674:	4621      	mov	r1, r4
 8005676:	f811 3b01 	ldrb.w	r3, [r1], #1
 800567a:	3b30      	subs	r3, #48	@ 0x30
 800567c:	2b09      	cmp	r3, #9
 800567e:	d94b      	bls.n	8005718 <_svfiprintf_r+0x17c>
 8005680:	b1b0      	cbz	r0, 80056b0 <_svfiprintf_r+0x114>
 8005682:	9207      	str	r2, [sp, #28]
 8005684:	e014      	b.n	80056b0 <_svfiprintf_r+0x114>
 8005686:	eba0 0308 	sub.w	r3, r0, r8
 800568a:	fa09 f303 	lsl.w	r3, r9, r3
 800568e:	4313      	orrs	r3, r2
 8005690:	46a2      	mov	sl, r4
 8005692:	9304      	str	r3, [sp, #16]
 8005694:	e7d2      	b.n	800563c <_svfiprintf_r+0xa0>
 8005696:	9b03      	ldr	r3, [sp, #12]
 8005698:	1d19      	adds	r1, r3, #4
 800569a:	681b      	ldr	r3, [r3, #0]
 800569c:	9103      	str	r1, [sp, #12]
 800569e:	2b00      	cmp	r3, #0
 80056a0:	bfbb      	ittet	lt
 80056a2:	425b      	neglt	r3, r3
 80056a4:	f042 0202 	orrlt.w	r2, r2, #2
 80056a8:	9307      	strge	r3, [sp, #28]
 80056aa:	9307      	strlt	r3, [sp, #28]
 80056ac:	bfb8      	it	lt
 80056ae:	9204      	strlt	r2, [sp, #16]
 80056b0:	7823      	ldrb	r3, [r4, #0]
 80056b2:	2b2e      	cmp	r3, #46	@ 0x2e
 80056b4:	d10a      	bne.n	80056cc <_svfiprintf_r+0x130>
 80056b6:	7863      	ldrb	r3, [r4, #1]
 80056b8:	2b2a      	cmp	r3, #42	@ 0x2a
 80056ba:	d132      	bne.n	8005722 <_svfiprintf_r+0x186>
 80056bc:	9b03      	ldr	r3, [sp, #12]
 80056be:	3402      	adds	r4, #2
 80056c0:	1d1a      	adds	r2, r3, #4
 80056c2:	681b      	ldr	r3, [r3, #0]
 80056c4:	9203      	str	r2, [sp, #12]
 80056c6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80056ca:	9305      	str	r3, [sp, #20]
 80056cc:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 8005784 <_svfiprintf_r+0x1e8>
 80056d0:	2203      	movs	r2, #3
 80056d2:	4650      	mov	r0, sl
 80056d4:	7821      	ldrb	r1, [r4, #0]
 80056d6:	f7fd fd30 	bl	800313a <memchr>
 80056da:	b138      	cbz	r0, 80056ec <_svfiprintf_r+0x150>
 80056dc:	2240      	movs	r2, #64	@ 0x40
 80056de:	9b04      	ldr	r3, [sp, #16]
 80056e0:	eba0 000a 	sub.w	r0, r0, sl
 80056e4:	4082      	lsls	r2, r0
 80056e6:	4313      	orrs	r3, r2
 80056e8:	3401      	adds	r4, #1
 80056ea:	9304      	str	r3, [sp, #16]
 80056ec:	f814 1b01 	ldrb.w	r1, [r4], #1
 80056f0:	2206      	movs	r2, #6
 80056f2:	4825      	ldr	r0, [pc, #148]	@ (8005788 <_svfiprintf_r+0x1ec>)
 80056f4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80056f8:	f7fd fd1f 	bl	800313a <memchr>
 80056fc:	2800      	cmp	r0, #0
 80056fe:	d036      	beq.n	800576e <_svfiprintf_r+0x1d2>
 8005700:	4b22      	ldr	r3, [pc, #136]	@ (800578c <_svfiprintf_r+0x1f0>)
 8005702:	bb1b      	cbnz	r3, 800574c <_svfiprintf_r+0x1b0>
 8005704:	9b03      	ldr	r3, [sp, #12]
 8005706:	3307      	adds	r3, #7
 8005708:	f023 0307 	bic.w	r3, r3, #7
 800570c:	3308      	adds	r3, #8
 800570e:	9303      	str	r3, [sp, #12]
 8005710:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005712:	4433      	add	r3, r6
 8005714:	9309      	str	r3, [sp, #36]	@ 0x24
 8005716:	e76a      	b.n	80055ee <_svfiprintf_r+0x52>
 8005718:	460c      	mov	r4, r1
 800571a:	2001      	movs	r0, #1
 800571c:	fb0c 3202 	mla	r2, ip, r2, r3
 8005720:	e7a8      	b.n	8005674 <_svfiprintf_r+0xd8>
 8005722:	2300      	movs	r3, #0
 8005724:	f04f 0c0a 	mov.w	ip, #10
 8005728:	4619      	mov	r1, r3
 800572a:	3401      	adds	r4, #1
 800572c:	9305      	str	r3, [sp, #20]
 800572e:	4620      	mov	r0, r4
 8005730:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005734:	3a30      	subs	r2, #48	@ 0x30
 8005736:	2a09      	cmp	r2, #9
 8005738:	d903      	bls.n	8005742 <_svfiprintf_r+0x1a6>
 800573a:	2b00      	cmp	r3, #0
 800573c:	d0c6      	beq.n	80056cc <_svfiprintf_r+0x130>
 800573e:	9105      	str	r1, [sp, #20]
 8005740:	e7c4      	b.n	80056cc <_svfiprintf_r+0x130>
 8005742:	4604      	mov	r4, r0
 8005744:	2301      	movs	r3, #1
 8005746:	fb0c 2101 	mla	r1, ip, r1, r2
 800574a:	e7f0      	b.n	800572e <_svfiprintf_r+0x192>
 800574c:	ab03      	add	r3, sp, #12
 800574e:	9300      	str	r3, [sp, #0]
 8005750:	462a      	mov	r2, r5
 8005752:	4638      	mov	r0, r7
 8005754:	4b0e      	ldr	r3, [pc, #56]	@ (8005790 <_svfiprintf_r+0x1f4>)
 8005756:	a904      	add	r1, sp, #16
 8005758:	f7fc fd72 	bl	8002240 <_printf_float>
 800575c:	1c42      	adds	r2, r0, #1
 800575e:	4606      	mov	r6, r0
 8005760:	d1d6      	bne.n	8005710 <_svfiprintf_r+0x174>
 8005762:	89ab      	ldrh	r3, [r5, #12]
 8005764:	065b      	lsls	r3, r3, #25
 8005766:	f53f af2d 	bmi.w	80055c4 <_svfiprintf_r+0x28>
 800576a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800576c:	e72c      	b.n	80055c8 <_svfiprintf_r+0x2c>
 800576e:	ab03      	add	r3, sp, #12
 8005770:	9300      	str	r3, [sp, #0]
 8005772:	462a      	mov	r2, r5
 8005774:	4638      	mov	r0, r7
 8005776:	4b06      	ldr	r3, [pc, #24]	@ (8005790 <_svfiprintf_r+0x1f4>)
 8005778:	a904      	add	r1, sp, #16
 800577a:	f7fc ffff 	bl	800277c <_printf_i>
 800577e:	e7ed      	b.n	800575c <_svfiprintf_r+0x1c0>
 8005780:	080067ab 	.word	0x080067ab
 8005784:	080067b1 	.word	0x080067b1
 8005788:	080067b5 	.word	0x080067b5
 800578c:	08002241 	.word	0x08002241
 8005790:	080054e5 	.word	0x080054e5

08005794 <__sflush_r>:
 8005794:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8005798:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800579a:	0716      	lsls	r6, r2, #28
 800579c:	4605      	mov	r5, r0
 800579e:	460c      	mov	r4, r1
 80057a0:	d454      	bmi.n	800584c <__sflush_r+0xb8>
 80057a2:	684b      	ldr	r3, [r1, #4]
 80057a4:	2b00      	cmp	r3, #0
 80057a6:	dc02      	bgt.n	80057ae <__sflush_r+0x1a>
 80057a8:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80057aa:	2b00      	cmp	r3, #0
 80057ac:	dd48      	ble.n	8005840 <__sflush_r+0xac>
 80057ae:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80057b0:	2e00      	cmp	r6, #0
 80057b2:	d045      	beq.n	8005840 <__sflush_r+0xac>
 80057b4:	2300      	movs	r3, #0
 80057b6:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80057ba:	682f      	ldr	r7, [r5, #0]
 80057bc:	6a21      	ldr	r1, [r4, #32]
 80057be:	602b      	str	r3, [r5, #0]
 80057c0:	d030      	beq.n	8005824 <__sflush_r+0x90>
 80057c2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80057c4:	89a3      	ldrh	r3, [r4, #12]
 80057c6:	0759      	lsls	r1, r3, #29
 80057c8:	d505      	bpl.n	80057d6 <__sflush_r+0x42>
 80057ca:	6863      	ldr	r3, [r4, #4]
 80057cc:	1ad2      	subs	r2, r2, r3
 80057ce:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80057d0:	b10b      	cbz	r3, 80057d6 <__sflush_r+0x42>
 80057d2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80057d4:	1ad2      	subs	r2, r2, r3
 80057d6:	2300      	movs	r3, #0
 80057d8:	4628      	mov	r0, r5
 80057da:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80057dc:	6a21      	ldr	r1, [r4, #32]
 80057de:	47b0      	blx	r6
 80057e0:	1c43      	adds	r3, r0, #1
 80057e2:	89a3      	ldrh	r3, [r4, #12]
 80057e4:	d106      	bne.n	80057f4 <__sflush_r+0x60>
 80057e6:	6829      	ldr	r1, [r5, #0]
 80057e8:	291d      	cmp	r1, #29
 80057ea:	d82b      	bhi.n	8005844 <__sflush_r+0xb0>
 80057ec:	4a28      	ldr	r2, [pc, #160]	@ (8005890 <__sflush_r+0xfc>)
 80057ee:	40ca      	lsrs	r2, r1
 80057f0:	07d6      	lsls	r6, r2, #31
 80057f2:	d527      	bpl.n	8005844 <__sflush_r+0xb0>
 80057f4:	2200      	movs	r2, #0
 80057f6:	6062      	str	r2, [r4, #4]
 80057f8:	6922      	ldr	r2, [r4, #16]
 80057fa:	04d9      	lsls	r1, r3, #19
 80057fc:	6022      	str	r2, [r4, #0]
 80057fe:	d504      	bpl.n	800580a <__sflush_r+0x76>
 8005800:	1c42      	adds	r2, r0, #1
 8005802:	d101      	bne.n	8005808 <__sflush_r+0x74>
 8005804:	682b      	ldr	r3, [r5, #0]
 8005806:	b903      	cbnz	r3, 800580a <__sflush_r+0x76>
 8005808:	6560      	str	r0, [r4, #84]	@ 0x54
 800580a:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800580c:	602f      	str	r7, [r5, #0]
 800580e:	b1b9      	cbz	r1, 8005840 <__sflush_r+0xac>
 8005810:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8005814:	4299      	cmp	r1, r3
 8005816:	d002      	beq.n	800581e <__sflush_r+0x8a>
 8005818:	4628      	mov	r0, r5
 800581a:	f7fe fafd 	bl	8003e18 <_free_r>
 800581e:	2300      	movs	r3, #0
 8005820:	6363      	str	r3, [r4, #52]	@ 0x34
 8005822:	e00d      	b.n	8005840 <__sflush_r+0xac>
 8005824:	2301      	movs	r3, #1
 8005826:	4628      	mov	r0, r5
 8005828:	47b0      	blx	r6
 800582a:	4602      	mov	r2, r0
 800582c:	1c50      	adds	r0, r2, #1
 800582e:	d1c9      	bne.n	80057c4 <__sflush_r+0x30>
 8005830:	682b      	ldr	r3, [r5, #0]
 8005832:	2b00      	cmp	r3, #0
 8005834:	d0c6      	beq.n	80057c4 <__sflush_r+0x30>
 8005836:	2b1d      	cmp	r3, #29
 8005838:	d001      	beq.n	800583e <__sflush_r+0xaa>
 800583a:	2b16      	cmp	r3, #22
 800583c:	d11d      	bne.n	800587a <__sflush_r+0xe6>
 800583e:	602f      	str	r7, [r5, #0]
 8005840:	2000      	movs	r0, #0
 8005842:	e021      	b.n	8005888 <__sflush_r+0xf4>
 8005844:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005848:	b21b      	sxth	r3, r3
 800584a:	e01a      	b.n	8005882 <__sflush_r+0xee>
 800584c:	690f      	ldr	r7, [r1, #16]
 800584e:	2f00      	cmp	r7, #0
 8005850:	d0f6      	beq.n	8005840 <__sflush_r+0xac>
 8005852:	0793      	lsls	r3, r2, #30
 8005854:	bf18      	it	ne
 8005856:	2300      	movne	r3, #0
 8005858:	680e      	ldr	r6, [r1, #0]
 800585a:	bf08      	it	eq
 800585c:	694b      	ldreq	r3, [r1, #20]
 800585e:	1bf6      	subs	r6, r6, r7
 8005860:	600f      	str	r7, [r1, #0]
 8005862:	608b      	str	r3, [r1, #8]
 8005864:	2e00      	cmp	r6, #0
 8005866:	ddeb      	ble.n	8005840 <__sflush_r+0xac>
 8005868:	4633      	mov	r3, r6
 800586a:	463a      	mov	r2, r7
 800586c:	4628      	mov	r0, r5
 800586e:	6a21      	ldr	r1, [r4, #32]
 8005870:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8005874:	47e0      	blx	ip
 8005876:	2800      	cmp	r0, #0
 8005878:	dc07      	bgt.n	800588a <__sflush_r+0xf6>
 800587a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800587e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005882:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8005886:	81a3      	strh	r3, [r4, #12]
 8005888:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800588a:	4407      	add	r7, r0
 800588c:	1a36      	subs	r6, r6, r0
 800588e:	e7e9      	b.n	8005864 <__sflush_r+0xd0>
 8005890:	20400001 	.word	0x20400001

08005894 <_fflush_r>:
 8005894:	b538      	push	{r3, r4, r5, lr}
 8005896:	690b      	ldr	r3, [r1, #16]
 8005898:	4605      	mov	r5, r0
 800589a:	460c      	mov	r4, r1
 800589c:	b913      	cbnz	r3, 80058a4 <_fflush_r+0x10>
 800589e:	2500      	movs	r5, #0
 80058a0:	4628      	mov	r0, r5
 80058a2:	bd38      	pop	{r3, r4, r5, pc}
 80058a4:	b118      	cbz	r0, 80058ae <_fflush_r+0x1a>
 80058a6:	6a03      	ldr	r3, [r0, #32]
 80058a8:	b90b      	cbnz	r3, 80058ae <_fflush_r+0x1a>
 80058aa:	f7fd fb1b 	bl	8002ee4 <__sinit>
 80058ae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80058b2:	2b00      	cmp	r3, #0
 80058b4:	d0f3      	beq.n	800589e <_fflush_r+0xa>
 80058b6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80058b8:	07d0      	lsls	r0, r2, #31
 80058ba:	d404      	bmi.n	80058c6 <_fflush_r+0x32>
 80058bc:	0599      	lsls	r1, r3, #22
 80058be:	d402      	bmi.n	80058c6 <_fflush_r+0x32>
 80058c0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80058c2:	f7fd fc38 	bl	8003136 <__retarget_lock_acquire_recursive>
 80058c6:	4628      	mov	r0, r5
 80058c8:	4621      	mov	r1, r4
 80058ca:	f7ff ff63 	bl	8005794 <__sflush_r>
 80058ce:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80058d0:	4605      	mov	r5, r0
 80058d2:	07da      	lsls	r2, r3, #31
 80058d4:	d4e4      	bmi.n	80058a0 <_fflush_r+0xc>
 80058d6:	89a3      	ldrh	r3, [r4, #12]
 80058d8:	059b      	lsls	r3, r3, #22
 80058da:	d4e1      	bmi.n	80058a0 <_fflush_r+0xc>
 80058dc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80058de:	f7fd fc2b 	bl	8003138 <__retarget_lock_release_recursive>
 80058e2:	e7dd      	b.n	80058a0 <_fflush_r+0xc>

080058e4 <memmove>:
 80058e4:	4288      	cmp	r0, r1
 80058e6:	b510      	push	{r4, lr}
 80058e8:	eb01 0402 	add.w	r4, r1, r2
 80058ec:	d902      	bls.n	80058f4 <memmove+0x10>
 80058ee:	4284      	cmp	r4, r0
 80058f0:	4623      	mov	r3, r4
 80058f2:	d807      	bhi.n	8005904 <memmove+0x20>
 80058f4:	1e43      	subs	r3, r0, #1
 80058f6:	42a1      	cmp	r1, r4
 80058f8:	d008      	beq.n	800590c <memmove+0x28>
 80058fa:	f811 2b01 	ldrb.w	r2, [r1], #1
 80058fe:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005902:	e7f8      	b.n	80058f6 <memmove+0x12>
 8005904:	4601      	mov	r1, r0
 8005906:	4402      	add	r2, r0
 8005908:	428a      	cmp	r2, r1
 800590a:	d100      	bne.n	800590e <memmove+0x2a>
 800590c:	bd10      	pop	{r4, pc}
 800590e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005912:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8005916:	e7f7      	b.n	8005908 <memmove+0x24>

08005918 <strncmp>:
 8005918:	b510      	push	{r4, lr}
 800591a:	b16a      	cbz	r2, 8005938 <strncmp+0x20>
 800591c:	3901      	subs	r1, #1
 800591e:	1884      	adds	r4, r0, r2
 8005920:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005924:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8005928:	429a      	cmp	r2, r3
 800592a:	d103      	bne.n	8005934 <strncmp+0x1c>
 800592c:	42a0      	cmp	r0, r4
 800592e:	d001      	beq.n	8005934 <strncmp+0x1c>
 8005930:	2a00      	cmp	r2, #0
 8005932:	d1f5      	bne.n	8005920 <strncmp+0x8>
 8005934:	1ad0      	subs	r0, r2, r3
 8005936:	bd10      	pop	{r4, pc}
 8005938:	4610      	mov	r0, r2
 800593a:	e7fc      	b.n	8005936 <strncmp+0x1e>

0800593c <memcpy>:
 800593c:	440a      	add	r2, r1
 800593e:	4291      	cmp	r1, r2
 8005940:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 8005944:	d100      	bne.n	8005948 <memcpy+0xc>
 8005946:	4770      	bx	lr
 8005948:	b510      	push	{r4, lr}
 800594a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800594e:	4291      	cmp	r1, r2
 8005950:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005954:	d1f9      	bne.n	800594a <memcpy+0xe>
 8005956:	bd10      	pop	{r4, pc}

08005958 <nan>:
 8005958:	2000      	movs	r0, #0
 800595a:	4901      	ldr	r1, [pc, #4]	@ (8005960 <nan+0x8>)
 800595c:	4770      	bx	lr
 800595e:	bf00      	nop
 8005960:	7ff80000 	.word	0x7ff80000

08005964 <__assert_func>:
 8005964:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005966:	4614      	mov	r4, r2
 8005968:	461a      	mov	r2, r3
 800596a:	4b09      	ldr	r3, [pc, #36]	@ (8005990 <__assert_func+0x2c>)
 800596c:	4605      	mov	r5, r0
 800596e:	681b      	ldr	r3, [r3, #0]
 8005970:	68d8      	ldr	r0, [r3, #12]
 8005972:	b14c      	cbz	r4, 8005988 <__assert_func+0x24>
 8005974:	4b07      	ldr	r3, [pc, #28]	@ (8005994 <__assert_func+0x30>)
 8005976:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800597a:	9100      	str	r1, [sp, #0]
 800597c:	462b      	mov	r3, r5
 800597e:	4906      	ldr	r1, [pc, #24]	@ (8005998 <__assert_func+0x34>)
 8005980:	f000 fba8 	bl	80060d4 <fiprintf>
 8005984:	f000 fbb8 	bl	80060f8 <abort>
 8005988:	4b04      	ldr	r3, [pc, #16]	@ (800599c <__assert_func+0x38>)
 800598a:	461c      	mov	r4, r3
 800598c:	e7f3      	b.n	8005976 <__assert_func+0x12>
 800598e:	bf00      	nop
 8005990:	20000018 	.word	0x20000018
 8005994:	080067c4 	.word	0x080067c4
 8005998:	080067d1 	.word	0x080067d1
 800599c:	080067ff 	.word	0x080067ff

080059a0 <_calloc_r>:
 80059a0:	b570      	push	{r4, r5, r6, lr}
 80059a2:	fba1 5402 	umull	r5, r4, r1, r2
 80059a6:	b934      	cbnz	r4, 80059b6 <_calloc_r+0x16>
 80059a8:	4629      	mov	r1, r5
 80059aa:	f7fc fb1f 	bl	8001fec <_malloc_r>
 80059ae:	4606      	mov	r6, r0
 80059b0:	b928      	cbnz	r0, 80059be <_calloc_r+0x1e>
 80059b2:	4630      	mov	r0, r6
 80059b4:	bd70      	pop	{r4, r5, r6, pc}
 80059b6:	220c      	movs	r2, #12
 80059b8:	2600      	movs	r6, #0
 80059ba:	6002      	str	r2, [r0, #0]
 80059bc:	e7f9      	b.n	80059b2 <_calloc_r+0x12>
 80059be:	462a      	mov	r2, r5
 80059c0:	4621      	mov	r1, r4
 80059c2:	f7fd fb2a 	bl	800301a <memset>
 80059c6:	e7f4      	b.n	80059b2 <_calloc_r+0x12>

080059c8 <rshift>:
 80059c8:	6903      	ldr	r3, [r0, #16]
 80059ca:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80059ce:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 80059d2:	f100 0414 	add.w	r4, r0, #20
 80059d6:	ea4f 1261 	mov.w	r2, r1, asr #5
 80059da:	dd46      	ble.n	8005a6a <rshift+0xa2>
 80059dc:	f011 011f 	ands.w	r1, r1, #31
 80059e0:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 80059e4:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 80059e8:	d10c      	bne.n	8005a04 <rshift+0x3c>
 80059ea:	4629      	mov	r1, r5
 80059ec:	f100 0710 	add.w	r7, r0, #16
 80059f0:	42b1      	cmp	r1, r6
 80059f2:	d335      	bcc.n	8005a60 <rshift+0x98>
 80059f4:	1a9b      	subs	r3, r3, r2
 80059f6:	009b      	lsls	r3, r3, #2
 80059f8:	1eea      	subs	r2, r5, #3
 80059fa:	4296      	cmp	r6, r2
 80059fc:	bf38      	it	cc
 80059fe:	2300      	movcc	r3, #0
 8005a00:	4423      	add	r3, r4
 8005a02:	e015      	b.n	8005a30 <rshift+0x68>
 8005a04:	46a1      	mov	r9, r4
 8005a06:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8005a0a:	f1c1 0820 	rsb	r8, r1, #32
 8005a0e:	40cf      	lsrs	r7, r1
 8005a10:	f105 0e04 	add.w	lr, r5, #4
 8005a14:	4576      	cmp	r6, lr
 8005a16:	46f4      	mov	ip, lr
 8005a18:	d816      	bhi.n	8005a48 <rshift+0x80>
 8005a1a:	1a9a      	subs	r2, r3, r2
 8005a1c:	0092      	lsls	r2, r2, #2
 8005a1e:	3a04      	subs	r2, #4
 8005a20:	3501      	adds	r5, #1
 8005a22:	42ae      	cmp	r6, r5
 8005a24:	bf38      	it	cc
 8005a26:	2200      	movcc	r2, #0
 8005a28:	18a3      	adds	r3, r4, r2
 8005a2a:	50a7      	str	r7, [r4, r2]
 8005a2c:	b107      	cbz	r7, 8005a30 <rshift+0x68>
 8005a2e:	3304      	adds	r3, #4
 8005a30:	42a3      	cmp	r3, r4
 8005a32:	eba3 0204 	sub.w	r2, r3, r4
 8005a36:	bf08      	it	eq
 8005a38:	2300      	moveq	r3, #0
 8005a3a:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8005a3e:	6102      	str	r2, [r0, #16]
 8005a40:	bf08      	it	eq
 8005a42:	6143      	streq	r3, [r0, #20]
 8005a44:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005a48:	f8dc c000 	ldr.w	ip, [ip]
 8005a4c:	fa0c fc08 	lsl.w	ip, ip, r8
 8005a50:	ea4c 0707 	orr.w	r7, ip, r7
 8005a54:	f849 7b04 	str.w	r7, [r9], #4
 8005a58:	f85e 7b04 	ldr.w	r7, [lr], #4
 8005a5c:	40cf      	lsrs	r7, r1
 8005a5e:	e7d9      	b.n	8005a14 <rshift+0x4c>
 8005a60:	f851 cb04 	ldr.w	ip, [r1], #4
 8005a64:	f847 cf04 	str.w	ip, [r7, #4]!
 8005a68:	e7c2      	b.n	80059f0 <rshift+0x28>
 8005a6a:	4623      	mov	r3, r4
 8005a6c:	e7e0      	b.n	8005a30 <rshift+0x68>

08005a6e <__hexdig_fun>:
 8005a6e:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 8005a72:	2b09      	cmp	r3, #9
 8005a74:	d802      	bhi.n	8005a7c <__hexdig_fun+0xe>
 8005a76:	3820      	subs	r0, #32
 8005a78:	b2c0      	uxtb	r0, r0
 8005a7a:	4770      	bx	lr
 8005a7c:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 8005a80:	2b05      	cmp	r3, #5
 8005a82:	d801      	bhi.n	8005a88 <__hexdig_fun+0x1a>
 8005a84:	3847      	subs	r0, #71	@ 0x47
 8005a86:	e7f7      	b.n	8005a78 <__hexdig_fun+0xa>
 8005a88:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 8005a8c:	2b05      	cmp	r3, #5
 8005a8e:	d801      	bhi.n	8005a94 <__hexdig_fun+0x26>
 8005a90:	3827      	subs	r0, #39	@ 0x27
 8005a92:	e7f1      	b.n	8005a78 <__hexdig_fun+0xa>
 8005a94:	2000      	movs	r0, #0
 8005a96:	4770      	bx	lr

08005a98 <__gethex>:
 8005a98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005a9c:	468a      	mov	sl, r1
 8005a9e:	4690      	mov	r8, r2
 8005aa0:	b085      	sub	sp, #20
 8005aa2:	9302      	str	r3, [sp, #8]
 8005aa4:	680b      	ldr	r3, [r1, #0]
 8005aa6:	9001      	str	r0, [sp, #4]
 8005aa8:	1c9c      	adds	r4, r3, #2
 8005aaa:	46a1      	mov	r9, r4
 8005aac:	f814 0b01 	ldrb.w	r0, [r4], #1
 8005ab0:	2830      	cmp	r0, #48	@ 0x30
 8005ab2:	d0fa      	beq.n	8005aaa <__gethex+0x12>
 8005ab4:	eba9 0303 	sub.w	r3, r9, r3
 8005ab8:	f1a3 0b02 	sub.w	fp, r3, #2
 8005abc:	f7ff ffd7 	bl	8005a6e <__hexdig_fun>
 8005ac0:	4605      	mov	r5, r0
 8005ac2:	2800      	cmp	r0, #0
 8005ac4:	d168      	bne.n	8005b98 <__gethex+0x100>
 8005ac6:	2201      	movs	r2, #1
 8005ac8:	4648      	mov	r0, r9
 8005aca:	499f      	ldr	r1, [pc, #636]	@ (8005d48 <__gethex+0x2b0>)
 8005acc:	f7ff ff24 	bl	8005918 <strncmp>
 8005ad0:	4607      	mov	r7, r0
 8005ad2:	2800      	cmp	r0, #0
 8005ad4:	d167      	bne.n	8005ba6 <__gethex+0x10e>
 8005ad6:	f899 0001 	ldrb.w	r0, [r9, #1]
 8005ada:	4626      	mov	r6, r4
 8005adc:	f7ff ffc7 	bl	8005a6e <__hexdig_fun>
 8005ae0:	2800      	cmp	r0, #0
 8005ae2:	d062      	beq.n	8005baa <__gethex+0x112>
 8005ae4:	4623      	mov	r3, r4
 8005ae6:	7818      	ldrb	r0, [r3, #0]
 8005ae8:	4699      	mov	r9, r3
 8005aea:	2830      	cmp	r0, #48	@ 0x30
 8005aec:	f103 0301 	add.w	r3, r3, #1
 8005af0:	d0f9      	beq.n	8005ae6 <__gethex+0x4e>
 8005af2:	f7ff ffbc 	bl	8005a6e <__hexdig_fun>
 8005af6:	fab0 f580 	clz	r5, r0
 8005afa:	f04f 0b01 	mov.w	fp, #1
 8005afe:	096d      	lsrs	r5, r5, #5
 8005b00:	464a      	mov	r2, r9
 8005b02:	4616      	mov	r6, r2
 8005b04:	7830      	ldrb	r0, [r6, #0]
 8005b06:	3201      	adds	r2, #1
 8005b08:	f7ff ffb1 	bl	8005a6e <__hexdig_fun>
 8005b0c:	2800      	cmp	r0, #0
 8005b0e:	d1f8      	bne.n	8005b02 <__gethex+0x6a>
 8005b10:	2201      	movs	r2, #1
 8005b12:	4630      	mov	r0, r6
 8005b14:	498c      	ldr	r1, [pc, #560]	@ (8005d48 <__gethex+0x2b0>)
 8005b16:	f7ff feff 	bl	8005918 <strncmp>
 8005b1a:	2800      	cmp	r0, #0
 8005b1c:	d13f      	bne.n	8005b9e <__gethex+0x106>
 8005b1e:	b944      	cbnz	r4, 8005b32 <__gethex+0x9a>
 8005b20:	1c74      	adds	r4, r6, #1
 8005b22:	4622      	mov	r2, r4
 8005b24:	4616      	mov	r6, r2
 8005b26:	7830      	ldrb	r0, [r6, #0]
 8005b28:	3201      	adds	r2, #1
 8005b2a:	f7ff ffa0 	bl	8005a6e <__hexdig_fun>
 8005b2e:	2800      	cmp	r0, #0
 8005b30:	d1f8      	bne.n	8005b24 <__gethex+0x8c>
 8005b32:	1ba4      	subs	r4, r4, r6
 8005b34:	00a7      	lsls	r7, r4, #2
 8005b36:	7833      	ldrb	r3, [r6, #0]
 8005b38:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 8005b3c:	2b50      	cmp	r3, #80	@ 0x50
 8005b3e:	d13e      	bne.n	8005bbe <__gethex+0x126>
 8005b40:	7873      	ldrb	r3, [r6, #1]
 8005b42:	2b2b      	cmp	r3, #43	@ 0x2b
 8005b44:	d033      	beq.n	8005bae <__gethex+0x116>
 8005b46:	2b2d      	cmp	r3, #45	@ 0x2d
 8005b48:	d034      	beq.n	8005bb4 <__gethex+0x11c>
 8005b4a:	2400      	movs	r4, #0
 8005b4c:	1c71      	adds	r1, r6, #1
 8005b4e:	7808      	ldrb	r0, [r1, #0]
 8005b50:	f7ff ff8d 	bl	8005a6e <__hexdig_fun>
 8005b54:	1e43      	subs	r3, r0, #1
 8005b56:	b2db      	uxtb	r3, r3
 8005b58:	2b18      	cmp	r3, #24
 8005b5a:	d830      	bhi.n	8005bbe <__gethex+0x126>
 8005b5c:	f1a0 0210 	sub.w	r2, r0, #16
 8005b60:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8005b64:	f7ff ff83 	bl	8005a6e <__hexdig_fun>
 8005b68:	f100 3cff 	add.w	ip, r0, #4294967295	@ 0xffffffff
 8005b6c:	fa5f fc8c 	uxtb.w	ip, ip
 8005b70:	f1bc 0f18 	cmp.w	ip, #24
 8005b74:	f04f 030a 	mov.w	r3, #10
 8005b78:	d91e      	bls.n	8005bb8 <__gethex+0x120>
 8005b7a:	b104      	cbz	r4, 8005b7e <__gethex+0xe6>
 8005b7c:	4252      	negs	r2, r2
 8005b7e:	4417      	add	r7, r2
 8005b80:	f8ca 1000 	str.w	r1, [sl]
 8005b84:	b1ed      	cbz	r5, 8005bc2 <__gethex+0x12a>
 8005b86:	f1bb 0f00 	cmp.w	fp, #0
 8005b8a:	bf0c      	ite	eq
 8005b8c:	2506      	moveq	r5, #6
 8005b8e:	2500      	movne	r5, #0
 8005b90:	4628      	mov	r0, r5
 8005b92:	b005      	add	sp, #20
 8005b94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005b98:	2500      	movs	r5, #0
 8005b9a:	462c      	mov	r4, r5
 8005b9c:	e7b0      	b.n	8005b00 <__gethex+0x68>
 8005b9e:	2c00      	cmp	r4, #0
 8005ba0:	d1c7      	bne.n	8005b32 <__gethex+0x9a>
 8005ba2:	4627      	mov	r7, r4
 8005ba4:	e7c7      	b.n	8005b36 <__gethex+0x9e>
 8005ba6:	464e      	mov	r6, r9
 8005ba8:	462f      	mov	r7, r5
 8005baa:	2501      	movs	r5, #1
 8005bac:	e7c3      	b.n	8005b36 <__gethex+0x9e>
 8005bae:	2400      	movs	r4, #0
 8005bb0:	1cb1      	adds	r1, r6, #2
 8005bb2:	e7cc      	b.n	8005b4e <__gethex+0xb6>
 8005bb4:	2401      	movs	r4, #1
 8005bb6:	e7fb      	b.n	8005bb0 <__gethex+0x118>
 8005bb8:	fb03 0002 	mla	r0, r3, r2, r0
 8005bbc:	e7ce      	b.n	8005b5c <__gethex+0xc4>
 8005bbe:	4631      	mov	r1, r6
 8005bc0:	e7de      	b.n	8005b80 <__gethex+0xe8>
 8005bc2:	4629      	mov	r1, r5
 8005bc4:	eba6 0309 	sub.w	r3, r6, r9
 8005bc8:	3b01      	subs	r3, #1
 8005bca:	2b07      	cmp	r3, #7
 8005bcc:	dc0a      	bgt.n	8005be4 <__gethex+0x14c>
 8005bce:	9801      	ldr	r0, [sp, #4]
 8005bd0:	f7fe f96a 	bl	8003ea8 <_Balloc>
 8005bd4:	4604      	mov	r4, r0
 8005bd6:	b940      	cbnz	r0, 8005bea <__gethex+0x152>
 8005bd8:	4602      	mov	r2, r0
 8005bda:	21e4      	movs	r1, #228	@ 0xe4
 8005bdc:	4b5b      	ldr	r3, [pc, #364]	@ (8005d4c <__gethex+0x2b4>)
 8005bde:	485c      	ldr	r0, [pc, #368]	@ (8005d50 <__gethex+0x2b8>)
 8005be0:	f7ff fec0 	bl	8005964 <__assert_func>
 8005be4:	3101      	adds	r1, #1
 8005be6:	105b      	asrs	r3, r3, #1
 8005be8:	e7ef      	b.n	8005bca <__gethex+0x132>
 8005bea:	2300      	movs	r3, #0
 8005bec:	f100 0a14 	add.w	sl, r0, #20
 8005bf0:	4655      	mov	r5, sl
 8005bf2:	469b      	mov	fp, r3
 8005bf4:	45b1      	cmp	r9, r6
 8005bf6:	d337      	bcc.n	8005c68 <__gethex+0x1d0>
 8005bf8:	f845 bb04 	str.w	fp, [r5], #4
 8005bfc:	eba5 050a 	sub.w	r5, r5, sl
 8005c00:	10ad      	asrs	r5, r5, #2
 8005c02:	6125      	str	r5, [r4, #16]
 8005c04:	4658      	mov	r0, fp
 8005c06:	f7fe fa41 	bl	800408c <__hi0bits>
 8005c0a:	016d      	lsls	r5, r5, #5
 8005c0c:	f8d8 6000 	ldr.w	r6, [r8]
 8005c10:	1a2d      	subs	r5, r5, r0
 8005c12:	42b5      	cmp	r5, r6
 8005c14:	dd54      	ble.n	8005cc0 <__gethex+0x228>
 8005c16:	1bad      	subs	r5, r5, r6
 8005c18:	4629      	mov	r1, r5
 8005c1a:	4620      	mov	r0, r4
 8005c1c:	f7fe fdc3 	bl	80047a6 <__any_on>
 8005c20:	4681      	mov	r9, r0
 8005c22:	b178      	cbz	r0, 8005c44 <__gethex+0x1ac>
 8005c24:	f04f 0901 	mov.w	r9, #1
 8005c28:	1e6b      	subs	r3, r5, #1
 8005c2a:	1159      	asrs	r1, r3, #5
 8005c2c:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 8005c30:	f003 021f 	and.w	r2, r3, #31
 8005c34:	fa09 f202 	lsl.w	r2, r9, r2
 8005c38:	420a      	tst	r2, r1
 8005c3a:	d003      	beq.n	8005c44 <__gethex+0x1ac>
 8005c3c:	454b      	cmp	r3, r9
 8005c3e:	dc36      	bgt.n	8005cae <__gethex+0x216>
 8005c40:	f04f 0902 	mov.w	r9, #2
 8005c44:	4629      	mov	r1, r5
 8005c46:	4620      	mov	r0, r4
 8005c48:	f7ff febe 	bl	80059c8 <rshift>
 8005c4c:	442f      	add	r7, r5
 8005c4e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005c52:	42bb      	cmp	r3, r7
 8005c54:	da42      	bge.n	8005cdc <__gethex+0x244>
 8005c56:	4621      	mov	r1, r4
 8005c58:	9801      	ldr	r0, [sp, #4]
 8005c5a:	f7fe f965 	bl	8003f28 <_Bfree>
 8005c5e:	2300      	movs	r3, #0
 8005c60:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005c62:	25a3      	movs	r5, #163	@ 0xa3
 8005c64:	6013      	str	r3, [r2, #0]
 8005c66:	e793      	b.n	8005b90 <__gethex+0xf8>
 8005c68:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 8005c6c:	2a2e      	cmp	r2, #46	@ 0x2e
 8005c6e:	d012      	beq.n	8005c96 <__gethex+0x1fe>
 8005c70:	2b20      	cmp	r3, #32
 8005c72:	d104      	bne.n	8005c7e <__gethex+0x1e6>
 8005c74:	f845 bb04 	str.w	fp, [r5], #4
 8005c78:	f04f 0b00 	mov.w	fp, #0
 8005c7c:	465b      	mov	r3, fp
 8005c7e:	7830      	ldrb	r0, [r6, #0]
 8005c80:	9303      	str	r3, [sp, #12]
 8005c82:	f7ff fef4 	bl	8005a6e <__hexdig_fun>
 8005c86:	9b03      	ldr	r3, [sp, #12]
 8005c88:	f000 000f 	and.w	r0, r0, #15
 8005c8c:	4098      	lsls	r0, r3
 8005c8e:	ea4b 0b00 	orr.w	fp, fp, r0
 8005c92:	3304      	adds	r3, #4
 8005c94:	e7ae      	b.n	8005bf4 <__gethex+0x15c>
 8005c96:	45b1      	cmp	r9, r6
 8005c98:	d8ea      	bhi.n	8005c70 <__gethex+0x1d8>
 8005c9a:	2201      	movs	r2, #1
 8005c9c:	4630      	mov	r0, r6
 8005c9e:	492a      	ldr	r1, [pc, #168]	@ (8005d48 <__gethex+0x2b0>)
 8005ca0:	9303      	str	r3, [sp, #12]
 8005ca2:	f7ff fe39 	bl	8005918 <strncmp>
 8005ca6:	9b03      	ldr	r3, [sp, #12]
 8005ca8:	2800      	cmp	r0, #0
 8005caa:	d1e1      	bne.n	8005c70 <__gethex+0x1d8>
 8005cac:	e7a2      	b.n	8005bf4 <__gethex+0x15c>
 8005cae:	4620      	mov	r0, r4
 8005cb0:	1ea9      	subs	r1, r5, #2
 8005cb2:	f7fe fd78 	bl	80047a6 <__any_on>
 8005cb6:	2800      	cmp	r0, #0
 8005cb8:	d0c2      	beq.n	8005c40 <__gethex+0x1a8>
 8005cba:	f04f 0903 	mov.w	r9, #3
 8005cbe:	e7c1      	b.n	8005c44 <__gethex+0x1ac>
 8005cc0:	da09      	bge.n	8005cd6 <__gethex+0x23e>
 8005cc2:	1b75      	subs	r5, r6, r5
 8005cc4:	4621      	mov	r1, r4
 8005cc6:	462a      	mov	r2, r5
 8005cc8:	9801      	ldr	r0, [sp, #4]
 8005cca:	f7fe fb3d 	bl	8004348 <__lshift>
 8005cce:	4604      	mov	r4, r0
 8005cd0:	1b7f      	subs	r7, r7, r5
 8005cd2:	f100 0a14 	add.w	sl, r0, #20
 8005cd6:	f04f 0900 	mov.w	r9, #0
 8005cda:	e7b8      	b.n	8005c4e <__gethex+0x1b6>
 8005cdc:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8005ce0:	42bd      	cmp	r5, r7
 8005ce2:	dd6f      	ble.n	8005dc4 <__gethex+0x32c>
 8005ce4:	1bed      	subs	r5, r5, r7
 8005ce6:	42ae      	cmp	r6, r5
 8005ce8:	dc34      	bgt.n	8005d54 <__gethex+0x2bc>
 8005cea:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8005cee:	2b02      	cmp	r3, #2
 8005cf0:	d022      	beq.n	8005d38 <__gethex+0x2a0>
 8005cf2:	2b03      	cmp	r3, #3
 8005cf4:	d024      	beq.n	8005d40 <__gethex+0x2a8>
 8005cf6:	2b01      	cmp	r3, #1
 8005cf8:	d115      	bne.n	8005d26 <__gethex+0x28e>
 8005cfa:	42ae      	cmp	r6, r5
 8005cfc:	d113      	bne.n	8005d26 <__gethex+0x28e>
 8005cfe:	2e01      	cmp	r6, #1
 8005d00:	d10b      	bne.n	8005d1a <__gethex+0x282>
 8005d02:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8005d06:	9a02      	ldr	r2, [sp, #8]
 8005d08:	2562      	movs	r5, #98	@ 0x62
 8005d0a:	6013      	str	r3, [r2, #0]
 8005d0c:	2301      	movs	r3, #1
 8005d0e:	6123      	str	r3, [r4, #16]
 8005d10:	f8ca 3000 	str.w	r3, [sl]
 8005d14:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005d16:	601c      	str	r4, [r3, #0]
 8005d18:	e73a      	b.n	8005b90 <__gethex+0xf8>
 8005d1a:	4620      	mov	r0, r4
 8005d1c:	1e71      	subs	r1, r6, #1
 8005d1e:	f7fe fd42 	bl	80047a6 <__any_on>
 8005d22:	2800      	cmp	r0, #0
 8005d24:	d1ed      	bne.n	8005d02 <__gethex+0x26a>
 8005d26:	4621      	mov	r1, r4
 8005d28:	9801      	ldr	r0, [sp, #4]
 8005d2a:	f7fe f8fd 	bl	8003f28 <_Bfree>
 8005d2e:	2300      	movs	r3, #0
 8005d30:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005d32:	2550      	movs	r5, #80	@ 0x50
 8005d34:	6013      	str	r3, [r2, #0]
 8005d36:	e72b      	b.n	8005b90 <__gethex+0xf8>
 8005d38:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005d3a:	2b00      	cmp	r3, #0
 8005d3c:	d1f3      	bne.n	8005d26 <__gethex+0x28e>
 8005d3e:	e7e0      	b.n	8005d02 <__gethex+0x26a>
 8005d40:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005d42:	2b00      	cmp	r3, #0
 8005d44:	d1dd      	bne.n	8005d02 <__gethex+0x26a>
 8005d46:	e7ee      	b.n	8005d26 <__gethex+0x28e>
 8005d48:	080067a9 	.word	0x080067a9
 8005d4c:	0800673f 	.word	0x0800673f
 8005d50:	08006800 	.word	0x08006800
 8005d54:	1e6f      	subs	r7, r5, #1
 8005d56:	f1b9 0f00 	cmp.w	r9, #0
 8005d5a:	d130      	bne.n	8005dbe <__gethex+0x326>
 8005d5c:	b127      	cbz	r7, 8005d68 <__gethex+0x2d0>
 8005d5e:	4639      	mov	r1, r7
 8005d60:	4620      	mov	r0, r4
 8005d62:	f7fe fd20 	bl	80047a6 <__any_on>
 8005d66:	4681      	mov	r9, r0
 8005d68:	2301      	movs	r3, #1
 8005d6a:	4629      	mov	r1, r5
 8005d6c:	1b76      	subs	r6, r6, r5
 8005d6e:	2502      	movs	r5, #2
 8005d70:	117a      	asrs	r2, r7, #5
 8005d72:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8005d76:	f007 071f 	and.w	r7, r7, #31
 8005d7a:	40bb      	lsls	r3, r7
 8005d7c:	4213      	tst	r3, r2
 8005d7e:	4620      	mov	r0, r4
 8005d80:	bf18      	it	ne
 8005d82:	f049 0902 	orrne.w	r9, r9, #2
 8005d86:	f7ff fe1f 	bl	80059c8 <rshift>
 8005d8a:	f8d8 7004 	ldr.w	r7, [r8, #4]
 8005d8e:	f1b9 0f00 	cmp.w	r9, #0
 8005d92:	d047      	beq.n	8005e24 <__gethex+0x38c>
 8005d94:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8005d98:	2b02      	cmp	r3, #2
 8005d9a:	d015      	beq.n	8005dc8 <__gethex+0x330>
 8005d9c:	2b03      	cmp	r3, #3
 8005d9e:	d017      	beq.n	8005dd0 <__gethex+0x338>
 8005da0:	2b01      	cmp	r3, #1
 8005da2:	d109      	bne.n	8005db8 <__gethex+0x320>
 8005da4:	f019 0f02 	tst.w	r9, #2
 8005da8:	d006      	beq.n	8005db8 <__gethex+0x320>
 8005daa:	f8da 3000 	ldr.w	r3, [sl]
 8005dae:	ea49 0903 	orr.w	r9, r9, r3
 8005db2:	f019 0f01 	tst.w	r9, #1
 8005db6:	d10e      	bne.n	8005dd6 <__gethex+0x33e>
 8005db8:	f045 0510 	orr.w	r5, r5, #16
 8005dbc:	e032      	b.n	8005e24 <__gethex+0x38c>
 8005dbe:	f04f 0901 	mov.w	r9, #1
 8005dc2:	e7d1      	b.n	8005d68 <__gethex+0x2d0>
 8005dc4:	2501      	movs	r5, #1
 8005dc6:	e7e2      	b.n	8005d8e <__gethex+0x2f6>
 8005dc8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005dca:	f1c3 0301 	rsb	r3, r3, #1
 8005dce:	930f      	str	r3, [sp, #60]	@ 0x3c
 8005dd0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005dd2:	2b00      	cmp	r3, #0
 8005dd4:	d0f0      	beq.n	8005db8 <__gethex+0x320>
 8005dd6:	f04f 0c00 	mov.w	ip, #0
 8005dda:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8005dde:	f104 0314 	add.w	r3, r4, #20
 8005de2:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8005de6:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8005dea:	4618      	mov	r0, r3
 8005dec:	f853 2b04 	ldr.w	r2, [r3], #4
 8005df0:	f1b2 3fff 	cmp.w	r2, #4294967295	@ 0xffffffff
 8005df4:	d01b      	beq.n	8005e2e <__gethex+0x396>
 8005df6:	3201      	adds	r2, #1
 8005df8:	6002      	str	r2, [r0, #0]
 8005dfa:	2d02      	cmp	r5, #2
 8005dfc:	f104 0314 	add.w	r3, r4, #20
 8005e00:	d13c      	bne.n	8005e7c <__gethex+0x3e4>
 8005e02:	f8d8 2000 	ldr.w	r2, [r8]
 8005e06:	3a01      	subs	r2, #1
 8005e08:	42b2      	cmp	r2, r6
 8005e0a:	d109      	bne.n	8005e20 <__gethex+0x388>
 8005e0c:	2201      	movs	r2, #1
 8005e0e:	1171      	asrs	r1, r6, #5
 8005e10:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8005e14:	f006 061f 	and.w	r6, r6, #31
 8005e18:	fa02 f606 	lsl.w	r6, r2, r6
 8005e1c:	421e      	tst	r6, r3
 8005e1e:	d13a      	bne.n	8005e96 <__gethex+0x3fe>
 8005e20:	f045 0520 	orr.w	r5, r5, #32
 8005e24:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005e26:	601c      	str	r4, [r3, #0]
 8005e28:	9b02      	ldr	r3, [sp, #8]
 8005e2a:	601f      	str	r7, [r3, #0]
 8005e2c:	e6b0      	b.n	8005b90 <__gethex+0xf8>
 8005e2e:	4299      	cmp	r1, r3
 8005e30:	f843 cc04 	str.w	ip, [r3, #-4]
 8005e34:	d8d9      	bhi.n	8005dea <__gethex+0x352>
 8005e36:	68a3      	ldr	r3, [r4, #8]
 8005e38:	459b      	cmp	fp, r3
 8005e3a:	db17      	blt.n	8005e6c <__gethex+0x3d4>
 8005e3c:	6861      	ldr	r1, [r4, #4]
 8005e3e:	9801      	ldr	r0, [sp, #4]
 8005e40:	3101      	adds	r1, #1
 8005e42:	f7fe f831 	bl	8003ea8 <_Balloc>
 8005e46:	4681      	mov	r9, r0
 8005e48:	b918      	cbnz	r0, 8005e52 <__gethex+0x3ba>
 8005e4a:	4602      	mov	r2, r0
 8005e4c:	2184      	movs	r1, #132	@ 0x84
 8005e4e:	4b19      	ldr	r3, [pc, #100]	@ (8005eb4 <__gethex+0x41c>)
 8005e50:	e6c5      	b.n	8005bde <__gethex+0x146>
 8005e52:	6922      	ldr	r2, [r4, #16]
 8005e54:	f104 010c 	add.w	r1, r4, #12
 8005e58:	3202      	adds	r2, #2
 8005e5a:	0092      	lsls	r2, r2, #2
 8005e5c:	300c      	adds	r0, #12
 8005e5e:	f7ff fd6d 	bl	800593c <memcpy>
 8005e62:	4621      	mov	r1, r4
 8005e64:	9801      	ldr	r0, [sp, #4]
 8005e66:	f7fe f85f 	bl	8003f28 <_Bfree>
 8005e6a:	464c      	mov	r4, r9
 8005e6c:	6923      	ldr	r3, [r4, #16]
 8005e6e:	1c5a      	adds	r2, r3, #1
 8005e70:	6122      	str	r2, [r4, #16]
 8005e72:	2201      	movs	r2, #1
 8005e74:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8005e78:	615a      	str	r2, [r3, #20]
 8005e7a:	e7be      	b.n	8005dfa <__gethex+0x362>
 8005e7c:	6922      	ldr	r2, [r4, #16]
 8005e7e:	455a      	cmp	r2, fp
 8005e80:	dd0b      	ble.n	8005e9a <__gethex+0x402>
 8005e82:	2101      	movs	r1, #1
 8005e84:	4620      	mov	r0, r4
 8005e86:	f7ff fd9f 	bl	80059c8 <rshift>
 8005e8a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005e8e:	3701      	adds	r7, #1
 8005e90:	42bb      	cmp	r3, r7
 8005e92:	f6ff aee0 	blt.w	8005c56 <__gethex+0x1be>
 8005e96:	2501      	movs	r5, #1
 8005e98:	e7c2      	b.n	8005e20 <__gethex+0x388>
 8005e9a:	f016 061f 	ands.w	r6, r6, #31
 8005e9e:	d0fa      	beq.n	8005e96 <__gethex+0x3fe>
 8005ea0:	4453      	add	r3, sl
 8005ea2:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8005ea6:	f7fe f8f1 	bl	800408c <__hi0bits>
 8005eaa:	f1c6 0620 	rsb	r6, r6, #32
 8005eae:	42b0      	cmp	r0, r6
 8005eb0:	dbe7      	blt.n	8005e82 <__gethex+0x3ea>
 8005eb2:	e7f0      	b.n	8005e96 <__gethex+0x3fe>
 8005eb4:	0800673f 	.word	0x0800673f

08005eb8 <L_shift>:
 8005eb8:	f1c2 0208 	rsb	r2, r2, #8
 8005ebc:	0092      	lsls	r2, r2, #2
 8005ebe:	b570      	push	{r4, r5, r6, lr}
 8005ec0:	f1c2 0620 	rsb	r6, r2, #32
 8005ec4:	6843      	ldr	r3, [r0, #4]
 8005ec6:	6804      	ldr	r4, [r0, #0]
 8005ec8:	fa03 f506 	lsl.w	r5, r3, r6
 8005ecc:	432c      	orrs	r4, r5
 8005ece:	40d3      	lsrs	r3, r2
 8005ed0:	6004      	str	r4, [r0, #0]
 8005ed2:	f840 3f04 	str.w	r3, [r0, #4]!
 8005ed6:	4288      	cmp	r0, r1
 8005ed8:	d3f4      	bcc.n	8005ec4 <L_shift+0xc>
 8005eda:	bd70      	pop	{r4, r5, r6, pc}

08005edc <__match>:
 8005edc:	b530      	push	{r4, r5, lr}
 8005ede:	6803      	ldr	r3, [r0, #0]
 8005ee0:	3301      	adds	r3, #1
 8005ee2:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005ee6:	b914      	cbnz	r4, 8005eee <__match+0x12>
 8005ee8:	6003      	str	r3, [r0, #0]
 8005eea:	2001      	movs	r0, #1
 8005eec:	bd30      	pop	{r4, r5, pc}
 8005eee:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005ef2:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 8005ef6:	2d19      	cmp	r5, #25
 8005ef8:	bf98      	it	ls
 8005efa:	3220      	addls	r2, #32
 8005efc:	42a2      	cmp	r2, r4
 8005efe:	d0f0      	beq.n	8005ee2 <__match+0x6>
 8005f00:	2000      	movs	r0, #0
 8005f02:	e7f3      	b.n	8005eec <__match+0x10>

08005f04 <__hexnan>:
 8005f04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005f08:	2500      	movs	r5, #0
 8005f0a:	680b      	ldr	r3, [r1, #0]
 8005f0c:	4682      	mov	sl, r0
 8005f0e:	115e      	asrs	r6, r3, #5
 8005f10:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8005f14:	f013 031f 	ands.w	r3, r3, #31
 8005f18:	bf18      	it	ne
 8005f1a:	3604      	addne	r6, #4
 8005f1c:	1f37      	subs	r7, r6, #4
 8005f1e:	4690      	mov	r8, r2
 8005f20:	46b9      	mov	r9, r7
 8005f22:	463c      	mov	r4, r7
 8005f24:	46ab      	mov	fp, r5
 8005f26:	b087      	sub	sp, #28
 8005f28:	6801      	ldr	r1, [r0, #0]
 8005f2a:	9301      	str	r3, [sp, #4]
 8005f2c:	f846 5c04 	str.w	r5, [r6, #-4]
 8005f30:	9502      	str	r5, [sp, #8]
 8005f32:	784a      	ldrb	r2, [r1, #1]
 8005f34:	1c4b      	adds	r3, r1, #1
 8005f36:	9303      	str	r3, [sp, #12]
 8005f38:	b342      	cbz	r2, 8005f8c <__hexnan+0x88>
 8005f3a:	4610      	mov	r0, r2
 8005f3c:	9105      	str	r1, [sp, #20]
 8005f3e:	9204      	str	r2, [sp, #16]
 8005f40:	f7ff fd95 	bl	8005a6e <__hexdig_fun>
 8005f44:	2800      	cmp	r0, #0
 8005f46:	d151      	bne.n	8005fec <__hexnan+0xe8>
 8005f48:	9a04      	ldr	r2, [sp, #16]
 8005f4a:	9905      	ldr	r1, [sp, #20]
 8005f4c:	2a20      	cmp	r2, #32
 8005f4e:	d818      	bhi.n	8005f82 <__hexnan+0x7e>
 8005f50:	9b02      	ldr	r3, [sp, #8]
 8005f52:	459b      	cmp	fp, r3
 8005f54:	dd13      	ble.n	8005f7e <__hexnan+0x7a>
 8005f56:	454c      	cmp	r4, r9
 8005f58:	d206      	bcs.n	8005f68 <__hexnan+0x64>
 8005f5a:	2d07      	cmp	r5, #7
 8005f5c:	dc04      	bgt.n	8005f68 <__hexnan+0x64>
 8005f5e:	462a      	mov	r2, r5
 8005f60:	4649      	mov	r1, r9
 8005f62:	4620      	mov	r0, r4
 8005f64:	f7ff ffa8 	bl	8005eb8 <L_shift>
 8005f68:	4544      	cmp	r4, r8
 8005f6a:	d952      	bls.n	8006012 <__hexnan+0x10e>
 8005f6c:	2300      	movs	r3, #0
 8005f6e:	f1a4 0904 	sub.w	r9, r4, #4
 8005f72:	f844 3c04 	str.w	r3, [r4, #-4]
 8005f76:	461d      	mov	r5, r3
 8005f78:	464c      	mov	r4, r9
 8005f7a:	f8cd b008 	str.w	fp, [sp, #8]
 8005f7e:	9903      	ldr	r1, [sp, #12]
 8005f80:	e7d7      	b.n	8005f32 <__hexnan+0x2e>
 8005f82:	2a29      	cmp	r2, #41	@ 0x29
 8005f84:	d157      	bne.n	8006036 <__hexnan+0x132>
 8005f86:	3102      	adds	r1, #2
 8005f88:	f8ca 1000 	str.w	r1, [sl]
 8005f8c:	f1bb 0f00 	cmp.w	fp, #0
 8005f90:	d051      	beq.n	8006036 <__hexnan+0x132>
 8005f92:	454c      	cmp	r4, r9
 8005f94:	d206      	bcs.n	8005fa4 <__hexnan+0xa0>
 8005f96:	2d07      	cmp	r5, #7
 8005f98:	dc04      	bgt.n	8005fa4 <__hexnan+0xa0>
 8005f9a:	462a      	mov	r2, r5
 8005f9c:	4649      	mov	r1, r9
 8005f9e:	4620      	mov	r0, r4
 8005fa0:	f7ff ff8a 	bl	8005eb8 <L_shift>
 8005fa4:	4544      	cmp	r4, r8
 8005fa6:	d936      	bls.n	8006016 <__hexnan+0x112>
 8005fa8:	4623      	mov	r3, r4
 8005faa:	f1a8 0204 	sub.w	r2, r8, #4
 8005fae:	f853 1b04 	ldr.w	r1, [r3], #4
 8005fb2:	429f      	cmp	r7, r3
 8005fb4:	f842 1f04 	str.w	r1, [r2, #4]!
 8005fb8:	d2f9      	bcs.n	8005fae <__hexnan+0xaa>
 8005fba:	1b3b      	subs	r3, r7, r4
 8005fbc:	f023 0303 	bic.w	r3, r3, #3
 8005fc0:	3304      	adds	r3, #4
 8005fc2:	3401      	adds	r4, #1
 8005fc4:	3e03      	subs	r6, #3
 8005fc6:	42b4      	cmp	r4, r6
 8005fc8:	bf88      	it	hi
 8005fca:	2304      	movhi	r3, #4
 8005fcc:	2200      	movs	r2, #0
 8005fce:	4443      	add	r3, r8
 8005fd0:	f843 2b04 	str.w	r2, [r3], #4
 8005fd4:	429f      	cmp	r7, r3
 8005fd6:	d2fb      	bcs.n	8005fd0 <__hexnan+0xcc>
 8005fd8:	683b      	ldr	r3, [r7, #0]
 8005fda:	b91b      	cbnz	r3, 8005fe4 <__hexnan+0xe0>
 8005fdc:	4547      	cmp	r7, r8
 8005fde:	d128      	bne.n	8006032 <__hexnan+0x12e>
 8005fe0:	2301      	movs	r3, #1
 8005fe2:	603b      	str	r3, [r7, #0]
 8005fe4:	2005      	movs	r0, #5
 8005fe6:	b007      	add	sp, #28
 8005fe8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005fec:	3501      	adds	r5, #1
 8005fee:	2d08      	cmp	r5, #8
 8005ff0:	f10b 0b01 	add.w	fp, fp, #1
 8005ff4:	dd06      	ble.n	8006004 <__hexnan+0x100>
 8005ff6:	4544      	cmp	r4, r8
 8005ff8:	d9c1      	bls.n	8005f7e <__hexnan+0x7a>
 8005ffa:	2300      	movs	r3, #0
 8005ffc:	2501      	movs	r5, #1
 8005ffe:	f844 3c04 	str.w	r3, [r4, #-4]
 8006002:	3c04      	subs	r4, #4
 8006004:	6822      	ldr	r2, [r4, #0]
 8006006:	f000 000f 	and.w	r0, r0, #15
 800600a:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 800600e:	6020      	str	r0, [r4, #0]
 8006010:	e7b5      	b.n	8005f7e <__hexnan+0x7a>
 8006012:	2508      	movs	r5, #8
 8006014:	e7b3      	b.n	8005f7e <__hexnan+0x7a>
 8006016:	9b01      	ldr	r3, [sp, #4]
 8006018:	2b00      	cmp	r3, #0
 800601a:	d0dd      	beq.n	8005fd8 <__hexnan+0xd4>
 800601c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8006020:	f1c3 0320 	rsb	r3, r3, #32
 8006024:	40da      	lsrs	r2, r3
 8006026:	f856 3c04 	ldr.w	r3, [r6, #-4]
 800602a:	4013      	ands	r3, r2
 800602c:	f846 3c04 	str.w	r3, [r6, #-4]
 8006030:	e7d2      	b.n	8005fd8 <__hexnan+0xd4>
 8006032:	3f04      	subs	r7, #4
 8006034:	e7d0      	b.n	8005fd8 <__hexnan+0xd4>
 8006036:	2004      	movs	r0, #4
 8006038:	e7d5      	b.n	8005fe6 <__hexnan+0xe2>

0800603a <__ascii_mbtowc>:
 800603a:	b082      	sub	sp, #8
 800603c:	b901      	cbnz	r1, 8006040 <__ascii_mbtowc+0x6>
 800603e:	a901      	add	r1, sp, #4
 8006040:	b142      	cbz	r2, 8006054 <__ascii_mbtowc+0x1a>
 8006042:	b14b      	cbz	r3, 8006058 <__ascii_mbtowc+0x1e>
 8006044:	7813      	ldrb	r3, [r2, #0]
 8006046:	600b      	str	r3, [r1, #0]
 8006048:	7812      	ldrb	r2, [r2, #0]
 800604a:	1e10      	subs	r0, r2, #0
 800604c:	bf18      	it	ne
 800604e:	2001      	movne	r0, #1
 8006050:	b002      	add	sp, #8
 8006052:	4770      	bx	lr
 8006054:	4610      	mov	r0, r2
 8006056:	e7fb      	b.n	8006050 <__ascii_mbtowc+0x16>
 8006058:	f06f 0001 	mvn.w	r0, #1
 800605c:	e7f8      	b.n	8006050 <__ascii_mbtowc+0x16>

0800605e <_realloc_r>:
 800605e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006062:	4607      	mov	r7, r0
 8006064:	4614      	mov	r4, r2
 8006066:	460d      	mov	r5, r1
 8006068:	b921      	cbnz	r1, 8006074 <_realloc_r+0x16>
 800606a:	4611      	mov	r1, r2
 800606c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006070:	f7fb bfbc 	b.w	8001fec <_malloc_r>
 8006074:	b92a      	cbnz	r2, 8006082 <_realloc_r+0x24>
 8006076:	f7fd fecf 	bl	8003e18 <_free_r>
 800607a:	4625      	mov	r5, r4
 800607c:	4628      	mov	r0, r5
 800607e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006082:	f000 f840 	bl	8006106 <_malloc_usable_size_r>
 8006086:	4284      	cmp	r4, r0
 8006088:	4606      	mov	r6, r0
 800608a:	d802      	bhi.n	8006092 <_realloc_r+0x34>
 800608c:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8006090:	d8f4      	bhi.n	800607c <_realloc_r+0x1e>
 8006092:	4621      	mov	r1, r4
 8006094:	4638      	mov	r0, r7
 8006096:	f7fb ffa9 	bl	8001fec <_malloc_r>
 800609a:	4680      	mov	r8, r0
 800609c:	b908      	cbnz	r0, 80060a2 <_realloc_r+0x44>
 800609e:	4645      	mov	r5, r8
 80060a0:	e7ec      	b.n	800607c <_realloc_r+0x1e>
 80060a2:	42b4      	cmp	r4, r6
 80060a4:	4622      	mov	r2, r4
 80060a6:	4629      	mov	r1, r5
 80060a8:	bf28      	it	cs
 80060aa:	4632      	movcs	r2, r6
 80060ac:	f7ff fc46 	bl	800593c <memcpy>
 80060b0:	4629      	mov	r1, r5
 80060b2:	4638      	mov	r0, r7
 80060b4:	f7fd feb0 	bl	8003e18 <_free_r>
 80060b8:	e7f1      	b.n	800609e <_realloc_r+0x40>

080060ba <__ascii_wctomb>:
 80060ba:	4603      	mov	r3, r0
 80060bc:	4608      	mov	r0, r1
 80060be:	b141      	cbz	r1, 80060d2 <__ascii_wctomb+0x18>
 80060c0:	2aff      	cmp	r2, #255	@ 0xff
 80060c2:	d904      	bls.n	80060ce <__ascii_wctomb+0x14>
 80060c4:	228a      	movs	r2, #138	@ 0x8a
 80060c6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80060ca:	601a      	str	r2, [r3, #0]
 80060cc:	4770      	bx	lr
 80060ce:	2001      	movs	r0, #1
 80060d0:	700a      	strb	r2, [r1, #0]
 80060d2:	4770      	bx	lr

080060d4 <fiprintf>:
 80060d4:	b40e      	push	{r1, r2, r3}
 80060d6:	b503      	push	{r0, r1, lr}
 80060d8:	4601      	mov	r1, r0
 80060da:	ab03      	add	r3, sp, #12
 80060dc:	4805      	ldr	r0, [pc, #20]	@ (80060f4 <fiprintf+0x20>)
 80060de:	f853 2b04 	ldr.w	r2, [r3], #4
 80060e2:	6800      	ldr	r0, [r0, #0]
 80060e4:	9301      	str	r3, [sp, #4]
 80060e6:	f000 f83d 	bl	8006164 <_vfiprintf_r>
 80060ea:	b002      	add	sp, #8
 80060ec:	f85d eb04 	ldr.w	lr, [sp], #4
 80060f0:	b003      	add	sp, #12
 80060f2:	4770      	bx	lr
 80060f4:	20000018 	.word	0x20000018

080060f8 <abort>:
 80060f8:	2006      	movs	r0, #6
 80060fa:	b508      	push	{r3, lr}
 80060fc:	f000 fa06 	bl	800650c <raise>
 8006100:	2001      	movs	r0, #1
 8006102:	f7fb f94e 	bl	80013a2 <_exit>

08006106 <_malloc_usable_size_r>:
 8006106:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800610a:	1f18      	subs	r0, r3, #4
 800610c:	2b00      	cmp	r3, #0
 800610e:	bfbc      	itt	lt
 8006110:	580b      	ldrlt	r3, [r1, r0]
 8006112:	18c0      	addlt	r0, r0, r3
 8006114:	4770      	bx	lr

08006116 <__sfputc_r>:
 8006116:	6893      	ldr	r3, [r2, #8]
 8006118:	b410      	push	{r4}
 800611a:	3b01      	subs	r3, #1
 800611c:	2b00      	cmp	r3, #0
 800611e:	6093      	str	r3, [r2, #8]
 8006120:	da07      	bge.n	8006132 <__sfputc_r+0x1c>
 8006122:	6994      	ldr	r4, [r2, #24]
 8006124:	42a3      	cmp	r3, r4
 8006126:	db01      	blt.n	800612c <__sfputc_r+0x16>
 8006128:	290a      	cmp	r1, #10
 800612a:	d102      	bne.n	8006132 <__sfputc_r+0x1c>
 800612c:	bc10      	pop	{r4}
 800612e:	f000 b931 	b.w	8006394 <__swbuf_r>
 8006132:	6813      	ldr	r3, [r2, #0]
 8006134:	1c58      	adds	r0, r3, #1
 8006136:	6010      	str	r0, [r2, #0]
 8006138:	7019      	strb	r1, [r3, #0]
 800613a:	4608      	mov	r0, r1
 800613c:	bc10      	pop	{r4}
 800613e:	4770      	bx	lr

08006140 <__sfputs_r>:
 8006140:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006142:	4606      	mov	r6, r0
 8006144:	460f      	mov	r7, r1
 8006146:	4614      	mov	r4, r2
 8006148:	18d5      	adds	r5, r2, r3
 800614a:	42ac      	cmp	r4, r5
 800614c:	d101      	bne.n	8006152 <__sfputs_r+0x12>
 800614e:	2000      	movs	r0, #0
 8006150:	e007      	b.n	8006162 <__sfputs_r+0x22>
 8006152:	463a      	mov	r2, r7
 8006154:	4630      	mov	r0, r6
 8006156:	f814 1b01 	ldrb.w	r1, [r4], #1
 800615a:	f7ff ffdc 	bl	8006116 <__sfputc_r>
 800615e:	1c43      	adds	r3, r0, #1
 8006160:	d1f3      	bne.n	800614a <__sfputs_r+0xa>
 8006162:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08006164 <_vfiprintf_r>:
 8006164:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006168:	460d      	mov	r5, r1
 800616a:	4614      	mov	r4, r2
 800616c:	4698      	mov	r8, r3
 800616e:	4606      	mov	r6, r0
 8006170:	b09d      	sub	sp, #116	@ 0x74
 8006172:	b118      	cbz	r0, 800617c <_vfiprintf_r+0x18>
 8006174:	6a03      	ldr	r3, [r0, #32]
 8006176:	b90b      	cbnz	r3, 800617c <_vfiprintf_r+0x18>
 8006178:	f7fc feb4 	bl	8002ee4 <__sinit>
 800617c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800617e:	07d9      	lsls	r1, r3, #31
 8006180:	d405      	bmi.n	800618e <_vfiprintf_r+0x2a>
 8006182:	89ab      	ldrh	r3, [r5, #12]
 8006184:	059a      	lsls	r2, r3, #22
 8006186:	d402      	bmi.n	800618e <_vfiprintf_r+0x2a>
 8006188:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800618a:	f7fc ffd4 	bl	8003136 <__retarget_lock_acquire_recursive>
 800618e:	89ab      	ldrh	r3, [r5, #12]
 8006190:	071b      	lsls	r3, r3, #28
 8006192:	d501      	bpl.n	8006198 <_vfiprintf_r+0x34>
 8006194:	692b      	ldr	r3, [r5, #16]
 8006196:	b99b      	cbnz	r3, 80061c0 <_vfiprintf_r+0x5c>
 8006198:	4629      	mov	r1, r5
 800619a:	4630      	mov	r0, r6
 800619c:	f000 f938 	bl	8006410 <__swsetup_r>
 80061a0:	b170      	cbz	r0, 80061c0 <_vfiprintf_r+0x5c>
 80061a2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80061a4:	07dc      	lsls	r4, r3, #31
 80061a6:	d504      	bpl.n	80061b2 <_vfiprintf_r+0x4e>
 80061a8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80061ac:	b01d      	add	sp, #116	@ 0x74
 80061ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80061b2:	89ab      	ldrh	r3, [r5, #12]
 80061b4:	0598      	lsls	r0, r3, #22
 80061b6:	d4f7      	bmi.n	80061a8 <_vfiprintf_r+0x44>
 80061b8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80061ba:	f7fc ffbd 	bl	8003138 <__retarget_lock_release_recursive>
 80061be:	e7f3      	b.n	80061a8 <_vfiprintf_r+0x44>
 80061c0:	2300      	movs	r3, #0
 80061c2:	9309      	str	r3, [sp, #36]	@ 0x24
 80061c4:	2320      	movs	r3, #32
 80061c6:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80061ca:	2330      	movs	r3, #48	@ 0x30
 80061cc:	f04f 0901 	mov.w	r9, #1
 80061d0:	f8cd 800c 	str.w	r8, [sp, #12]
 80061d4:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 8006380 <_vfiprintf_r+0x21c>
 80061d8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80061dc:	4623      	mov	r3, r4
 80061de:	469a      	mov	sl, r3
 80061e0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80061e4:	b10a      	cbz	r2, 80061ea <_vfiprintf_r+0x86>
 80061e6:	2a25      	cmp	r2, #37	@ 0x25
 80061e8:	d1f9      	bne.n	80061de <_vfiprintf_r+0x7a>
 80061ea:	ebba 0b04 	subs.w	fp, sl, r4
 80061ee:	d00b      	beq.n	8006208 <_vfiprintf_r+0xa4>
 80061f0:	465b      	mov	r3, fp
 80061f2:	4622      	mov	r2, r4
 80061f4:	4629      	mov	r1, r5
 80061f6:	4630      	mov	r0, r6
 80061f8:	f7ff ffa2 	bl	8006140 <__sfputs_r>
 80061fc:	3001      	adds	r0, #1
 80061fe:	f000 80a7 	beq.w	8006350 <_vfiprintf_r+0x1ec>
 8006202:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006204:	445a      	add	r2, fp
 8006206:	9209      	str	r2, [sp, #36]	@ 0x24
 8006208:	f89a 3000 	ldrb.w	r3, [sl]
 800620c:	2b00      	cmp	r3, #0
 800620e:	f000 809f 	beq.w	8006350 <_vfiprintf_r+0x1ec>
 8006212:	2300      	movs	r3, #0
 8006214:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8006218:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800621c:	f10a 0a01 	add.w	sl, sl, #1
 8006220:	9304      	str	r3, [sp, #16]
 8006222:	9307      	str	r3, [sp, #28]
 8006224:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8006228:	931a      	str	r3, [sp, #104]	@ 0x68
 800622a:	4654      	mov	r4, sl
 800622c:	2205      	movs	r2, #5
 800622e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006232:	4853      	ldr	r0, [pc, #332]	@ (8006380 <_vfiprintf_r+0x21c>)
 8006234:	f7fc ff81 	bl	800313a <memchr>
 8006238:	9a04      	ldr	r2, [sp, #16]
 800623a:	b9d8      	cbnz	r0, 8006274 <_vfiprintf_r+0x110>
 800623c:	06d1      	lsls	r1, r2, #27
 800623e:	bf44      	itt	mi
 8006240:	2320      	movmi	r3, #32
 8006242:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006246:	0713      	lsls	r3, r2, #28
 8006248:	bf44      	itt	mi
 800624a:	232b      	movmi	r3, #43	@ 0x2b
 800624c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006250:	f89a 3000 	ldrb.w	r3, [sl]
 8006254:	2b2a      	cmp	r3, #42	@ 0x2a
 8006256:	d015      	beq.n	8006284 <_vfiprintf_r+0x120>
 8006258:	4654      	mov	r4, sl
 800625a:	2000      	movs	r0, #0
 800625c:	f04f 0c0a 	mov.w	ip, #10
 8006260:	9a07      	ldr	r2, [sp, #28]
 8006262:	4621      	mov	r1, r4
 8006264:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006268:	3b30      	subs	r3, #48	@ 0x30
 800626a:	2b09      	cmp	r3, #9
 800626c:	d94b      	bls.n	8006306 <_vfiprintf_r+0x1a2>
 800626e:	b1b0      	cbz	r0, 800629e <_vfiprintf_r+0x13a>
 8006270:	9207      	str	r2, [sp, #28]
 8006272:	e014      	b.n	800629e <_vfiprintf_r+0x13a>
 8006274:	eba0 0308 	sub.w	r3, r0, r8
 8006278:	fa09 f303 	lsl.w	r3, r9, r3
 800627c:	4313      	orrs	r3, r2
 800627e:	46a2      	mov	sl, r4
 8006280:	9304      	str	r3, [sp, #16]
 8006282:	e7d2      	b.n	800622a <_vfiprintf_r+0xc6>
 8006284:	9b03      	ldr	r3, [sp, #12]
 8006286:	1d19      	adds	r1, r3, #4
 8006288:	681b      	ldr	r3, [r3, #0]
 800628a:	9103      	str	r1, [sp, #12]
 800628c:	2b00      	cmp	r3, #0
 800628e:	bfbb      	ittet	lt
 8006290:	425b      	neglt	r3, r3
 8006292:	f042 0202 	orrlt.w	r2, r2, #2
 8006296:	9307      	strge	r3, [sp, #28]
 8006298:	9307      	strlt	r3, [sp, #28]
 800629a:	bfb8      	it	lt
 800629c:	9204      	strlt	r2, [sp, #16]
 800629e:	7823      	ldrb	r3, [r4, #0]
 80062a0:	2b2e      	cmp	r3, #46	@ 0x2e
 80062a2:	d10a      	bne.n	80062ba <_vfiprintf_r+0x156>
 80062a4:	7863      	ldrb	r3, [r4, #1]
 80062a6:	2b2a      	cmp	r3, #42	@ 0x2a
 80062a8:	d132      	bne.n	8006310 <_vfiprintf_r+0x1ac>
 80062aa:	9b03      	ldr	r3, [sp, #12]
 80062ac:	3402      	adds	r4, #2
 80062ae:	1d1a      	adds	r2, r3, #4
 80062b0:	681b      	ldr	r3, [r3, #0]
 80062b2:	9203      	str	r2, [sp, #12]
 80062b4:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80062b8:	9305      	str	r3, [sp, #20]
 80062ba:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8006384 <_vfiprintf_r+0x220>
 80062be:	2203      	movs	r2, #3
 80062c0:	4650      	mov	r0, sl
 80062c2:	7821      	ldrb	r1, [r4, #0]
 80062c4:	f7fc ff39 	bl	800313a <memchr>
 80062c8:	b138      	cbz	r0, 80062da <_vfiprintf_r+0x176>
 80062ca:	2240      	movs	r2, #64	@ 0x40
 80062cc:	9b04      	ldr	r3, [sp, #16]
 80062ce:	eba0 000a 	sub.w	r0, r0, sl
 80062d2:	4082      	lsls	r2, r0
 80062d4:	4313      	orrs	r3, r2
 80062d6:	3401      	adds	r4, #1
 80062d8:	9304      	str	r3, [sp, #16]
 80062da:	f814 1b01 	ldrb.w	r1, [r4], #1
 80062de:	2206      	movs	r2, #6
 80062e0:	4829      	ldr	r0, [pc, #164]	@ (8006388 <_vfiprintf_r+0x224>)
 80062e2:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80062e6:	f7fc ff28 	bl	800313a <memchr>
 80062ea:	2800      	cmp	r0, #0
 80062ec:	d03f      	beq.n	800636e <_vfiprintf_r+0x20a>
 80062ee:	4b27      	ldr	r3, [pc, #156]	@ (800638c <_vfiprintf_r+0x228>)
 80062f0:	bb1b      	cbnz	r3, 800633a <_vfiprintf_r+0x1d6>
 80062f2:	9b03      	ldr	r3, [sp, #12]
 80062f4:	3307      	adds	r3, #7
 80062f6:	f023 0307 	bic.w	r3, r3, #7
 80062fa:	3308      	adds	r3, #8
 80062fc:	9303      	str	r3, [sp, #12]
 80062fe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006300:	443b      	add	r3, r7
 8006302:	9309      	str	r3, [sp, #36]	@ 0x24
 8006304:	e76a      	b.n	80061dc <_vfiprintf_r+0x78>
 8006306:	460c      	mov	r4, r1
 8006308:	2001      	movs	r0, #1
 800630a:	fb0c 3202 	mla	r2, ip, r2, r3
 800630e:	e7a8      	b.n	8006262 <_vfiprintf_r+0xfe>
 8006310:	2300      	movs	r3, #0
 8006312:	f04f 0c0a 	mov.w	ip, #10
 8006316:	4619      	mov	r1, r3
 8006318:	3401      	adds	r4, #1
 800631a:	9305      	str	r3, [sp, #20]
 800631c:	4620      	mov	r0, r4
 800631e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006322:	3a30      	subs	r2, #48	@ 0x30
 8006324:	2a09      	cmp	r2, #9
 8006326:	d903      	bls.n	8006330 <_vfiprintf_r+0x1cc>
 8006328:	2b00      	cmp	r3, #0
 800632a:	d0c6      	beq.n	80062ba <_vfiprintf_r+0x156>
 800632c:	9105      	str	r1, [sp, #20]
 800632e:	e7c4      	b.n	80062ba <_vfiprintf_r+0x156>
 8006330:	4604      	mov	r4, r0
 8006332:	2301      	movs	r3, #1
 8006334:	fb0c 2101 	mla	r1, ip, r1, r2
 8006338:	e7f0      	b.n	800631c <_vfiprintf_r+0x1b8>
 800633a:	ab03      	add	r3, sp, #12
 800633c:	9300      	str	r3, [sp, #0]
 800633e:	462a      	mov	r2, r5
 8006340:	4630      	mov	r0, r6
 8006342:	4b13      	ldr	r3, [pc, #76]	@ (8006390 <_vfiprintf_r+0x22c>)
 8006344:	a904      	add	r1, sp, #16
 8006346:	f7fb ff7b 	bl	8002240 <_printf_float>
 800634a:	4607      	mov	r7, r0
 800634c:	1c78      	adds	r0, r7, #1
 800634e:	d1d6      	bne.n	80062fe <_vfiprintf_r+0x19a>
 8006350:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8006352:	07d9      	lsls	r1, r3, #31
 8006354:	d405      	bmi.n	8006362 <_vfiprintf_r+0x1fe>
 8006356:	89ab      	ldrh	r3, [r5, #12]
 8006358:	059a      	lsls	r2, r3, #22
 800635a:	d402      	bmi.n	8006362 <_vfiprintf_r+0x1fe>
 800635c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800635e:	f7fc feeb 	bl	8003138 <__retarget_lock_release_recursive>
 8006362:	89ab      	ldrh	r3, [r5, #12]
 8006364:	065b      	lsls	r3, r3, #25
 8006366:	f53f af1f 	bmi.w	80061a8 <_vfiprintf_r+0x44>
 800636a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800636c:	e71e      	b.n	80061ac <_vfiprintf_r+0x48>
 800636e:	ab03      	add	r3, sp, #12
 8006370:	9300      	str	r3, [sp, #0]
 8006372:	462a      	mov	r2, r5
 8006374:	4630      	mov	r0, r6
 8006376:	4b06      	ldr	r3, [pc, #24]	@ (8006390 <_vfiprintf_r+0x22c>)
 8006378:	a904      	add	r1, sp, #16
 800637a:	f7fc f9ff 	bl	800277c <_printf_i>
 800637e:	e7e4      	b.n	800634a <_vfiprintf_r+0x1e6>
 8006380:	080067ab 	.word	0x080067ab
 8006384:	080067b1 	.word	0x080067b1
 8006388:	080067b5 	.word	0x080067b5
 800638c:	08002241 	.word	0x08002241
 8006390:	08006141 	.word	0x08006141

08006394 <__swbuf_r>:
 8006394:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006396:	460e      	mov	r6, r1
 8006398:	4614      	mov	r4, r2
 800639a:	4605      	mov	r5, r0
 800639c:	b118      	cbz	r0, 80063a6 <__swbuf_r+0x12>
 800639e:	6a03      	ldr	r3, [r0, #32]
 80063a0:	b90b      	cbnz	r3, 80063a6 <__swbuf_r+0x12>
 80063a2:	f7fc fd9f 	bl	8002ee4 <__sinit>
 80063a6:	69a3      	ldr	r3, [r4, #24]
 80063a8:	60a3      	str	r3, [r4, #8]
 80063aa:	89a3      	ldrh	r3, [r4, #12]
 80063ac:	071a      	lsls	r2, r3, #28
 80063ae:	d501      	bpl.n	80063b4 <__swbuf_r+0x20>
 80063b0:	6923      	ldr	r3, [r4, #16]
 80063b2:	b943      	cbnz	r3, 80063c6 <__swbuf_r+0x32>
 80063b4:	4621      	mov	r1, r4
 80063b6:	4628      	mov	r0, r5
 80063b8:	f000 f82a 	bl	8006410 <__swsetup_r>
 80063bc:	b118      	cbz	r0, 80063c6 <__swbuf_r+0x32>
 80063be:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 80063c2:	4638      	mov	r0, r7
 80063c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80063c6:	6823      	ldr	r3, [r4, #0]
 80063c8:	6922      	ldr	r2, [r4, #16]
 80063ca:	b2f6      	uxtb	r6, r6
 80063cc:	1a98      	subs	r0, r3, r2
 80063ce:	6963      	ldr	r3, [r4, #20]
 80063d0:	4637      	mov	r7, r6
 80063d2:	4283      	cmp	r3, r0
 80063d4:	dc05      	bgt.n	80063e2 <__swbuf_r+0x4e>
 80063d6:	4621      	mov	r1, r4
 80063d8:	4628      	mov	r0, r5
 80063da:	f7ff fa5b 	bl	8005894 <_fflush_r>
 80063de:	2800      	cmp	r0, #0
 80063e0:	d1ed      	bne.n	80063be <__swbuf_r+0x2a>
 80063e2:	68a3      	ldr	r3, [r4, #8]
 80063e4:	3b01      	subs	r3, #1
 80063e6:	60a3      	str	r3, [r4, #8]
 80063e8:	6823      	ldr	r3, [r4, #0]
 80063ea:	1c5a      	adds	r2, r3, #1
 80063ec:	6022      	str	r2, [r4, #0]
 80063ee:	701e      	strb	r6, [r3, #0]
 80063f0:	6962      	ldr	r2, [r4, #20]
 80063f2:	1c43      	adds	r3, r0, #1
 80063f4:	429a      	cmp	r2, r3
 80063f6:	d004      	beq.n	8006402 <__swbuf_r+0x6e>
 80063f8:	89a3      	ldrh	r3, [r4, #12]
 80063fa:	07db      	lsls	r3, r3, #31
 80063fc:	d5e1      	bpl.n	80063c2 <__swbuf_r+0x2e>
 80063fe:	2e0a      	cmp	r6, #10
 8006400:	d1df      	bne.n	80063c2 <__swbuf_r+0x2e>
 8006402:	4621      	mov	r1, r4
 8006404:	4628      	mov	r0, r5
 8006406:	f7ff fa45 	bl	8005894 <_fflush_r>
 800640a:	2800      	cmp	r0, #0
 800640c:	d0d9      	beq.n	80063c2 <__swbuf_r+0x2e>
 800640e:	e7d6      	b.n	80063be <__swbuf_r+0x2a>

08006410 <__swsetup_r>:
 8006410:	b538      	push	{r3, r4, r5, lr}
 8006412:	4b29      	ldr	r3, [pc, #164]	@ (80064b8 <__swsetup_r+0xa8>)
 8006414:	4605      	mov	r5, r0
 8006416:	6818      	ldr	r0, [r3, #0]
 8006418:	460c      	mov	r4, r1
 800641a:	b118      	cbz	r0, 8006424 <__swsetup_r+0x14>
 800641c:	6a03      	ldr	r3, [r0, #32]
 800641e:	b90b      	cbnz	r3, 8006424 <__swsetup_r+0x14>
 8006420:	f7fc fd60 	bl	8002ee4 <__sinit>
 8006424:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006428:	0719      	lsls	r1, r3, #28
 800642a:	d422      	bmi.n	8006472 <__swsetup_r+0x62>
 800642c:	06da      	lsls	r2, r3, #27
 800642e:	d407      	bmi.n	8006440 <__swsetup_r+0x30>
 8006430:	2209      	movs	r2, #9
 8006432:	602a      	str	r2, [r5, #0]
 8006434:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006438:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800643c:	81a3      	strh	r3, [r4, #12]
 800643e:	e033      	b.n	80064a8 <__swsetup_r+0x98>
 8006440:	0758      	lsls	r0, r3, #29
 8006442:	d512      	bpl.n	800646a <__swsetup_r+0x5a>
 8006444:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8006446:	b141      	cbz	r1, 800645a <__swsetup_r+0x4a>
 8006448:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800644c:	4299      	cmp	r1, r3
 800644e:	d002      	beq.n	8006456 <__swsetup_r+0x46>
 8006450:	4628      	mov	r0, r5
 8006452:	f7fd fce1 	bl	8003e18 <_free_r>
 8006456:	2300      	movs	r3, #0
 8006458:	6363      	str	r3, [r4, #52]	@ 0x34
 800645a:	89a3      	ldrh	r3, [r4, #12]
 800645c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8006460:	81a3      	strh	r3, [r4, #12]
 8006462:	2300      	movs	r3, #0
 8006464:	6063      	str	r3, [r4, #4]
 8006466:	6923      	ldr	r3, [r4, #16]
 8006468:	6023      	str	r3, [r4, #0]
 800646a:	89a3      	ldrh	r3, [r4, #12]
 800646c:	f043 0308 	orr.w	r3, r3, #8
 8006470:	81a3      	strh	r3, [r4, #12]
 8006472:	6923      	ldr	r3, [r4, #16]
 8006474:	b94b      	cbnz	r3, 800648a <__swsetup_r+0x7a>
 8006476:	89a3      	ldrh	r3, [r4, #12]
 8006478:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800647c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8006480:	d003      	beq.n	800648a <__swsetup_r+0x7a>
 8006482:	4621      	mov	r1, r4
 8006484:	4628      	mov	r0, r5
 8006486:	f000 f882 	bl	800658e <__smakebuf_r>
 800648a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800648e:	f013 0201 	ands.w	r2, r3, #1
 8006492:	d00a      	beq.n	80064aa <__swsetup_r+0x9a>
 8006494:	2200      	movs	r2, #0
 8006496:	60a2      	str	r2, [r4, #8]
 8006498:	6962      	ldr	r2, [r4, #20]
 800649a:	4252      	negs	r2, r2
 800649c:	61a2      	str	r2, [r4, #24]
 800649e:	6922      	ldr	r2, [r4, #16]
 80064a0:	b942      	cbnz	r2, 80064b4 <__swsetup_r+0xa4>
 80064a2:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80064a6:	d1c5      	bne.n	8006434 <__swsetup_r+0x24>
 80064a8:	bd38      	pop	{r3, r4, r5, pc}
 80064aa:	0799      	lsls	r1, r3, #30
 80064ac:	bf58      	it	pl
 80064ae:	6962      	ldrpl	r2, [r4, #20]
 80064b0:	60a2      	str	r2, [r4, #8]
 80064b2:	e7f4      	b.n	800649e <__swsetup_r+0x8e>
 80064b4:	2000      	movs	r0, #0
 80064b6:	e7f7      	b.n	80064a8 <__swsetup_r+0x98>
 80064b8:	20000018 	.word	0x20000018

080064bc <_raise_r>:
 80064bc:	291f      	cmp	r1, #31
 80064be:	b538      	push	{r3, r4, r5, lr}
 80064c0:	4605      	mov	r5, r0
 80064c2:	460c      	mov	r4, r1
 80064c4:	d904      	bls.n	80064d0 <_raise_r+0x14>
 80064c6:	2316      	movs	r3, #22
 80064c8:	6003      	str	r3, [r0, #0]
 80064ca:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80064ce:	bd38      	pop	{r3, r4, r5, pc}
 80064d0:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80064d2:	b112      	cbz	r2, 80064da <_raise_r+0x1e>
 80064d4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80064d8:	b94b      	cbnz	r3, 80064ee <_raise_r+0x32>
 80064da:	4628      	mov	r0, r5
 80064dc:	f000 f830 	bl	8006540 <_getpid_r>
 80064e0:	4622      	mov	r2, r4
 80064e2:	4601      	mov	r1, r0
 80064e4:	4628      	mov	r0, r5
 80064e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80064ea:	f000 b817 	b.w	800651c <_kill_r>
 80064ee:	2b01      	cmp	r3, #1
 80064f0:	d00a      	beq.n	8006508 <_raise_r+0x4c>
 80064f2:	1c59      	adds	r1, r3, #1
 80064f4:	d103      	bne.n	80064fe <_raise_r+0x42>
 80064f6:	2316      	movs	r3, #22
 80064f8:	6003      	str	r3, [r0, #0]
 80064fa:	2001      	movs	r0, #1
 80064fc:	e7e7      	b.n	80064ce <_raise_r+0x12>
 80064fe:	2100      	movs	r1, #0
 8006500:	4620      	mov	r0, r4
 8006502:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8006506:	4798      	blx	r3
 8006508:	2000      	movs	r0, #0
 800650a:	e7e0      	b.n	80064ce <_raise_r+0x12>

0800650c <raise>:
 800650c:	4b02      	ldr	r3, [pc, #8]	@ (8006518 <raise+0xc>)
 800650e:	4601      	mov	r1, r0
 8006510:	6818      	ldr	r0, [r3, #0]
 8006512:	f7ff bfd3 	b.w	80064bc <_raise_r>
 8006516:	bf00      	nop
 8006518:	20000018 	.word	0x20000018

0800651c <_kill_r>:
 800651c:	b538      	push	{r3, r4, r5, lr}
 800651e:	2300      	movs	r3, #0
 8006520:	4d06      	ldr	r5, [pc, #24]	@ (800653c <_kill_r+0x20>)
 8006522:	4604      	mov	r4, r0
 8006524:	4608      	mov	r0, r1
 8006526:	4611      	mov	r1, r2
 8006528:	602b      	str	r3, [r5, #0]
 800652a:	f7fa ff2a 	bl	8001382 <_kill>
 800652e:	1c43      	adds	r3, r0, #1
 8006530:	d102      	bne.n	8006538 <_kill_r+0x1c>
 8006532:	682b      	ldr	r3, [r5, #0]
 8006534:	b103      	cbz	r3, 8006538 <_kill_r+0x1c>
 8006536:	6023      	str	r3, [r4, #0]
 8006538:	bd38      	pop	{r3, r4, r5, pc}
 800653a:	bf00      	nop
 800653c:	20000350 	.word	0x20000350

08006540 <_getpid_r>:
 8006540:	f7fa bf18 	b.w	8001374 <_getpid>

08006544 <__swhatbuf_r>:
 8006544:	b570      	push	{r4, r5, r6, lr}
 8006546:	460c      	mov	r4, r1
 8006548:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800654c:	4615      	mov	r5, r2
 800654e:	2900      	cmp	r1, #0
 8006550:	461e      	mov	r6, r3
 8006552:	b096      	sub	sp, #88	@ 0x58
 8006554:	da0c      	bge.n	8006570 <__swhatbuf_r+0x2c>
 8006556:	89a3      	ldrh	r3, [r4, #12]
 8006558:	2100      	movs	r1, #0
 800655a:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800655e:	bf14      	ite	ne
 8006560:	2340      	movne	r3, #64	@ 0x40
 8006562:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8006566:	2000      	movs	r0, #0
 8006568:	6031      	str	r1, [r6, #0]
 800656a:	602b      	str	r3, [r5, #0]
 800656c:	b016      	add	sp, #88	@ 0x58
 800656e:	bd70      	pop	{r4, r5, r6, pc}
 8006570:	466a      	mov	r2, sp
 8006572:	f000 f849 	bl	8006608 <_fstat_r>
 8006576:	2800      	cmp	r0, #0
 8006578:	dbed      	blt.n	8006556 <__swhatbuf_r+0x12>
 800657a:	9901      	ldr	r1, [sp, #4]
 800657c:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8006580:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8006584:	4259      	negs	r1, r3
 8006586:	4159      	adcs	r1, r3
 8006588:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800658c:	e7eb      	b.n	8006566 <__swhatbuf_r+0x22>

0800658e <__smakebuf_r>:
 800658e:	898b      	ldrh	r3, [r1, #12]
 8006590:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006592:	079d      	lsls	r5, r3, #30
 8006594:	4606      	mov	r6, r0
 8006596:	460c      	mov	r4, r1
 8006598:	d507      	bpl.n	80065aa <__smakebuf_r+0x1c>
 800659a:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800659e:	6023      	str	r3, [r4, #0]
 80065a0:	6123      	str	r3, [r4, #16]
 80065a2:	2301      	movs	r3, #1
 80065a4:	6163      	str	r3, [r4, #20]
 80065a6:	b003      	add	sp, #12
 80065a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80065aa:	466a      	mov	r2, sp
 80065ac:	ab01      	add	r3, sp, #4
 80065ae:	f7ff ffc9 	bl	8006544 <__swhatbuf_r>
 80065b2:	9f00      	ldr	r7, [sp, #0]
 80065b4:	4605      	mov	r5, r0
 80065b6:	4639      	mov	r1, r7
 80065b8:	4630      	mov	r0, r6
 80065ba:	f7fb fd17 	bl	8001fec <_malloc_r>
 80065be:	b948      	cbnz	r0, 80065d4 <__smakebuf_r+0x46>
 80065c0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80065c4:	059a      	lsls	r2, r3, #22
 80065c6:	d4ee      	bmi.n	80065a6 <__smakebuf_r+0x18>
 80065c8:	f023 0303 	bic.w	r3, r3, #3
 80065cc:	f043 0302 	orr.w	r3, r3, #2
 80065d0:	81a3      	strh	r3, [r4, #12]
 80065d2:	e7e2      	b.n	800659a <__smakebuf_r+0xc>
 80065d4:	89a3      	ldrh	r3, [r4, #12]
 80065d6:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80065da:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80065de:	81a3      	strh	r3, [r4, #12]
 80065e0:	9b01      	ldr	r3, [sp, #4]
 80065e2:	6020      	str	r0, [r4, #0]
 80065e4:	b15b      	cbz	r3, 80065fe <__smakebuf_r+0x70>
 80065e6:	4630      	mov	r0, r6
 80065e8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80065ec:	f000 f81e 	bl	800662c <_isatty_r>
 80065f0:	b128      	cbz	r0, 80065fe <__smakebuf_r+0x70>
 80065f2:	89a3      	ldrh	r3, [r4, #12]
 80065f4:	f023 0303 	bic.w	r3, r3, #3
 80065f8:	f043 0301 	orr.w	r3, r3, #1
 80065fc:	81a3      	strh	r3, [r4, #12]
 80065fe:	89a3      	ldrh	r3, [r4, #12]
 8006600:	431d      	orrs	r5, r3
 8006602:	81a5      	strh	r5, [r4, #12]
 8006604:	e7cf      	b.n	80065a6 <__smakebuf_r+0x18>
	...

08006608 <_fstat_r>:
 8006608:	b538      	push	{r3, r4, r5, lr}
 800660a:	2300      	movs	r3, #0
 800660c:	4d06      	ldr	r5, [pc, #24]	@ (8006628 <_fstat_r+0x20>)
 800660e:	4604      	mov	r4, r0
 8006610:	4608      	mov	r0, r1
 8006612:	4611      	mov	r1, r2
 8006614:	602b      	str	r3, [r5, #0]
 8006616:	f7fa ff13 	bl	8001440 <_fstat>
 800661a:	1c43      	adds	r3, r0, #1
 800661c:	d102      	bne.n	8006624 <_fstat_r+0x1c>
 800661e:	682b      	ldr	r3, [r5, #0]
 8006620:	b103      	cbz	r3, 8006624 <_fstat_r+0x1c>
 8006622:	6023      	str	r3, [r4, #0]
 8006624:	bd38      	pop	{r3, r4, r5, pc}
 8006626:	bf00      	nop
 8006628:	20000350 	.word	0x20000350

0800662c <_isatty_r>:
 800662c:	b538      	push	{r3, r4, r5, lr}
 800662e:	2300      	movs	r3, #0
 8006630:	4d05      	ldr	r5, [pc, #20]	@ (8006648 <_isatty_r+0x1c>)
 8006632:	4604      	mov	r4, r0
 8006634:	4608      	mov	r0, r1
 8006636:	602b      	str	r3, [r5, #0]
 8006638:	f7fa ff11 	bl	800145e <_isatty>
 800663c:	1c43      	adds	r3, r0, #1
 800663e:	d102      	bne.n	8006646 <_isatty_r+0x1a>
 8006640:	682b      	ldr	r3, [r5, #0]
 8006642:	b103      	cbz	r3, 8006646 <_isatty_r+0x1a>
 8006644:	6023      	str	r3, [r4, #0]
 8006646:	bd38      	pop	{r3, r4, r5, pc}
 8006648:	20000350 	.word	0x20000350

0800664c <_init>:
 800664c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800664e:	bf00      	nop
 8006650:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006652:	bc08      	pop	{r3}
 8006654:	469e      	mov	lr, r3
 8006656:	4770      	bx	lr

08006658 <_fini>:
 8006658:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800665a:	bf00      	nop
 800665c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800665e:	bc08      	pop	{r3}
 8006660:	469e      	mov	lr, r3
 8006662:	4770      	bx	lr
